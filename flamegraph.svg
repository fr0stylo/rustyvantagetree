<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="374" onload="init(evt)" viewBox="0 0 1200 374" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="374" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="357.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="357.00"> </text><svg id="frames" x="10" width="1180" total_samples="555859368418"><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (299,375,277 samples, 0.05%)</title><rect x="0.8023%" y="261" width="0.0539%" height="15" fill="rgb(227,0,7)" fg:x="4459892191" fg:w="299375277"/><text x="1.0523%" y="271.50"></text></g><g><title>rayon::iter::plumbing::LengthSplitter::try_split (100,987,164 samples, 0.02%)</title><rect x="1.6297%" y="197" width="0.0182%" height="15" fill="rgb(217,0,24)" fg:x="9058965353" fg:w="100987164"/><text x="1.8797%" y="207.50"></text></g><g><title>rayon::iter::plumbing::Splitter::try_split (99,845,597 samples, 0.02%)</title><rect x="1.6299%" y="181" width="0.0180%" height="15" fill="rgb(221,193,54)" fg:x="9060106920" fg:w="99845597"/><text x="1.8799%" y="191.50"></text></g><g><title>rayon_core::current_num_threads (89,486,703 samples, 0.02%)</title><rect x="1.6318%" y="165" width="0.0161%" height="15" fill="rgb(248,212,6)" fg:x="9070465814" fg:w="89486703"/><text x="1.8818%" y="175.50"></text></g><g><title>rayon_core::registry::Registry::current_num_threads (60,895,088 samples, 0.01%)</title><rect x="1.6369%" y="149" width="0.0110%" height="15" fill="rgb(208,68,35)" fg:x="9099057429" fg:w="60895088"/><text x="1.8869%" y="159.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (99,740,565 samples, 0.02%)</title><rect x="1.6479%" y="197" width="0.0179%" height="15" fill="rgb(232,128,0)" fg:x="9159952517" fg:w="99740565"/><text x="1.8979%" y="207.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (99,740,565 samples, 0.02%)</title><rect x="1.6479%" y="181" width="0.0179%" height="15" fill="rgb(207,160,47)" fg:x="9159952517" fg:w="99740565"/><text x="1.8979%" y="191.50"></text></g><g><title>&lt;rayon::iter::filter::FilterFolder&lt;C,P&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume (86,554,499 samples, 0.02%)</title><rect x="1.6503%" y="165" width="0.0156%" height="15" fill="rgb(228,23,34)" fg:x="9173138583" fg:w="86554499"/><text x="1.9003%" y="175.50"></text></g><g><title>&lt;mvprs::VPLeaf&lt;u8,usize&gt; as mvprs::tree::promoter::TreeNodePromoter&lt;u8,usize&gt;&gt;::promote::_{{closure}}::_{{closure}} (86,554,499 samples, 0.02%)</title><rect x="1.6503%" y="149" width="0.0156%" height="15" fill="rgb(218,30,26)" fg:x="9173138583" fg:w="86554499"/><text x="1.9003%" y="159.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (78,303,594 samples, 0.01%)</title><rect x="1.6517%" y="133" width="0.0141%" height="15" fill="rgb(220,122,19)" fg:x="9181389488" fg:w="78303594"/><text x="1.9017%" y="143.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (78,303,594 samples, 0.01%)</title><rect x="1.6517%" y="117" width="0.0141%" height="15" fill="rgb(250,228,42)" fg:x="9181389488" fg:w="78303594"/><text x="1.9017%" y="127.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (78,303,594 samples, 0.01%)</title><rect x="1.6517%" y="101" width="0.0141%" height="15" fill="rgb(240,193,28)" fg:x="9181389488" fg:w="78303594"/><text x="1.9017%" y="111.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (261,358,051 samples, 0.05%)</title><rect x="1.6255%" y="213" width="0.0470%" height="15" fill="rgb(216,20,37)" fg:x="9035378546" fg:w="261358051"/><text x="1.8755%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (2,646,819,701 samples, 0.48%)</title><rect x="1.1968%" y="245" width="0.4762%" height="15" fill="rgb(206,188,39)" fg:x="6652270057" fg:w="2646819701"/><text x="1.4468%" y="255.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::_{{closure}} (2,646,819,701 samples, 0.48%)</title><rect x="1.1968%" y="229" width="0.4762%" height="15" fill="rgb(217,207,13)" fg:x="6652270057" fg:w="2646819701"/><text x="1.4468%" y="239.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::_{{closure}} (4,766,759,397 samples, 0.86%)</title><rect x="0.8562%" y="261" width="0.8575%" height="15" fill="rgb(231,73,38)" fg:x="4759267468" fg:w="4766759397"/><text x="1.1062%" y="271.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::_{{closure}} (226,937,107 samples, 0.04%)</title><rect x="1.6729%" y="245" width="0.0408%" height="15" fill="rgb(225,20,46)" fg:x="9299089758" fg:w="226937107"/><text x="1.9229%" y="255.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (625,290,565 samples, 0.11%)</title><rect x="1.7137%" y="261" width="0.1125%" height="15" fill="rgb(210,31,41)" fg:x="9526026865" fg:w="625290565"/><text x="1.9637%" y="271.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (625,290,565 samples, 0.11%)</title><rect x="1.7137%" y="245" width="0.1125%" height="15" fill="rgb(221,200,47)" fg:x="9526026865" fg:w="625290565"/><text x="1.9637%" y="255.50"></text></g><g><title>rayon::iter::plumbing::LengthSplitter::try_split (102,095,041 samples, 0.02%)</title><rect x="2.0507%" y="181" width="0.0184%" height="15" fill="rgb(226,26,5)" fg:x="11399111085" fg:w="102095041"/><text x="2.3007%" y="191.50"></text></g><g><title>rayon::iter::plumbing::Splitter::try_split (100,933,162 samples, 0.02%)</title><rect x="2.0509%" y="165" width="0.0182%" height="15" fill="rgb(249,33,26)" fg:x="11400272964" fg:w="100933162"/><text x="2.3009%" y="175.50"></text></g><g><title>rayon_core::current_num_threads (86,490,794 samples, 0.02%)</title><rect x="2.0535%" y="149" width="0.0156%" height="15" fill="rgb(235,183,28)" fg:x="11414715332" fg:w="86490794"/><text x="2.3035%" y="159.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (187,937,655 samples, 0.03%)</title><rect x="2.0483%" y="197" width="0.0338%" height="15" fill="rgb(221,5,38)" fg:x="11385684287" fg:w="187937655"/><text x="2.2983%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (948,844,730 samples, 0.17%)</title><rect x="1.9118%" y="229" width="0.1707%" height="15" fill="rgb(247,18,42)" fg:x="10626794614" fg:w="948844730"/><text x="2.1618%" y="239.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::_{{closure}} (948,844,730 samples, 0.17%)</title><rect x="1.9118%" y="213" width="0.1707%" height="15" fill="rgb(241,131,45)" fg:x="10626794614" fg:w="948844730"/><text x="2.1618%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11,615,609,271 samples, 2.09%)</title><rect x="0.0098%" y="293" width="2.0897%" height="15" fill="rgb(249,31,29)" fg:x="54562708" fg:w="11615609271"/><text x="0.2598%" y="303.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (9,424,851,813 samples, 1.70%)</title><rect x="0.4039%" y="277" width="1.6955%" height="15" fill="rgb(225,111,53)" fg:x="2245320166" fg:w="9424851813"/><text x="0.6539%" y="287.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1,518,854,549 samples, 0.27%)</title><rect x="1.8262%" y="261" width="0.2732%" height="15" fill="rgb(238,160,17)" fg:x="10151317430" fg:w="1518854549"/><text x="2.0762%" y="271.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::_{{closure}} (1,518,854,549 samples, 0.27%)</title><rect x="1.8262%" y="245" width="0.2732%" height="15" fill="rgb(214,148,48)" fg:x="10151317430" fg:w="1518854549"/><text x="2.0762%" y="255.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::_{{closure}} (94,532,635 samples, 0.02%)</title><rect x="2.0825%" y="229" width="0.0170%" height="15" fill="rgb(232,36,49)" fg:x="11575639344" fg:w="94532635"/><text x="2.3325%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (106,187,509 samples, 0.02%)</title><rect x="2.1014%" y="229" width="0.0191%" height="15" fill="rgb(209,103,24)" fg:x="11680627719" fg:w="106187509"/><text x="2.3514%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (106,187,509 samples, 0.02%)</title><rect x="2.1014%" y="213" width="0.0191%" height="15" fill="rgb(229,88,8)" fg:x="11680627719" fg:w="106187509"/><text x="2.3514%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (106,187,509 samples, 0.02%)</title><rect x="2.1014%" y="197" width="0.0191%" height="15" fill="rgb(213,181,19)" fg:x="11680627719" fg:w="106187509"/><text x="2.3514%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (106,187,509 samples, 0.02%)</title><rect x="2.1014%" y="181" width="0.0191%" height="15" fill="rgb(254,191,54)" fg:x="11680627719" fg:w="106187509"/><text x="2.3514%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (106,187,509 samples, 0.02%)</title><rect x="2.1014%" y="165" width="0.0191%" height="15" fill="rgb(241,83,37)" fg:x="11680627719" fg:w="106187509"/><text x="2.3514%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (106,187,509 samples, 0.02%)</title><rect x="2.1014%" y="149" width="0.0191%" height="15" fill="rgb(233,36,39)" fg:x="11680627719" fg:w="106187509"/><text x="2.3514%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (106,187,509 samples, 0.02%)</title><rect x="2.1014%" y="133" width="0.0191%" height="15" fill="rgb(226,3,54)" fg:x="11680627719" fg:w="106187509"/><text x="2.3514%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (106,187,509 samples, 0.02%)</title><rect x="2.1014%" y="117" width="0.0191%" height="15" fill="rgb(245,192,40)" fg:x="11680627719" fg:w="106187509"/><text x="2.3514%" y="127.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (106,187,509 samples, 0.02%)</title><rect x="2.1014%" y="101" width="0.0191%" height="15" fill="rgb(238,167,29)" fg:x="11680627719" fg:w="106187509"/><text x="2.3514%" y="111.50"></text></g><g><title>alloc::alloc::alloc (106,187,509 samples, 0.02%)</title><rect x="2.1014%" y="85" width="0.0191%" height="15" fill="rgb(232,182,51)" fg:x="11680627719" fg:w="106187509"/><text x="2.3514%" y="95.50"></text></g><g><title>malloc (106,187,509 samples, 0.02%)</title><rect x="2.1014%" y="69" width="0.0191%" height="15" fill="rgb(231,60,39)" fg:x="11680627719" fg:w="106187509"/><text x="2.3514%" y="79.50"></text></g><g><title>[libc.so.6] (70,595,711 samples, 0.01%)</title><rect x="2.1078%" y="53" width="0.0127%" height="15" fill="rgb(208,69,12)" fg:x="11716219517" fg:w="70595711"/><text x="2.3578%" y="63.50"></text></g><g><title>&lt;mvprs::VPLeaf&lt;u8,usize&gt; as mvprs::tree::promoter::TreeNodePromoter&lt;u8,usize&gt;&gt;::promote::_{{closure}}::_{{closure}} (186,791,710 samples, 0.03%)</title><rect x="2.1205%" y="213" width="0.0336%" height="15" fill="rgb(235,93,37)" fg:x="11786815228" fg:w="186791710"/><text x="2.3705%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (350,798,670 samples, 0.06%)</title><rect x="2.0995%" y="293" width="0.0631%" height="15" fill="rgb(213,116,39)" fg:x="11670171979" fg:w="350798670"/><text x="2.3495%" y="303.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (340,342,930 samples, 0.06%)</title><rect x="2.1014%" y="277" width="0.0612%" height="15" fill="rgb(222,207,29)" fg:x="11680627719" fg:w="340342930"/><text x="2.3514%" y="287.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (340,342,930 samples, 0.06%)</title><rect x="2.1014%" y="261" width="0.0612%" height="15" fill="rgb(206,96,30)" fg:x="11680627719" fg:w="340342930"/><text x="2.3514%" y="271.50"></text></g><g><title>&lt;mvprs::VPLeaf&lt;u8,usize&gt; as mvprs::tree::promoter::TreeNodePromoter&lt;u8,usize&gt;&gt;::promote::_{{closure}} (340,342,930 samples, 0.06%)</title><rect x="2.1014%" y="245" width="0.0612%" height="15" fill="rgb(218,138,4)" fg:x="11680627719" fg:w="340342930"/><text x="2.3514%" y="255.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (234,155,421 samples, 0.04%)</title><rect x="2.1205%" y="229" width="0.0421%" height="15" fill="rgb(250,191,14)" fg:x="11786815228" fg:w="234155421"/><text x="2.3705%" y="239.50"></text></g><g><title>[libc.so.6] (21,429,040,882 samples, 3.86%)</title><rect x="5.5049%" y="37" width="3.8551%" height="15" fill="rgb(239,60,40)" fg:x="30599654653" fg:w="21429040882"/><text x="5.7549%" y="47.50">[lib..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,alloc::vec::Vec&lt;(usize,alloc::vec::Vec&lt;u8&gt;)&gt;,alloc::vec::Vec&lt;u8&gt;)&gt;&gt; (39,998,403,166 samples, 7.20%)</title><rect x="2.1651%" y="277" width="7.1958%" height="15" fill="rgb(206,27,48)" fg:x="12034862797" fg:w="39998403166"/><text x="2.4151%" y="287.50">core::ptr:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (39,998,403,166 samples, 7.20%)</title><rect x="2.1651%" y="261" width="7.1958%" height="15" fill="rgb(225,35,8)" fg:x="12034862797" fg:w="39998403166"/><text x="2.4151%" y="271.50">&lt;alloc::ve..</text></g><g><title>core::ptr::drop_in_place&lt;[(usize,alloc::vec::Vec&lt;(usize,alloc::vec::Vec&lt;u8&gt;)&gt;,alloc::vec::Vec&lt;u8&gt;)]&gt; (39,998,403,166 samples, 7.20%)</title><rect x="2.1651%" y="245" width="7.1958%" height="15" fill="rgb(250,213,24)" fg:x="12034862797" fg:w="39998403166"/><text x="2.4151%" y="255.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;(usize,alloc::vec::Vec&lt;(usize,alloc::vec::Vec&lt;u8&gt;)&gt;,alloc::vec::Vec&lt;u8&gt;)&gt; (39,997,113,678 samples, 7.20%)</title><rect x="2.1653%" y="229" width="7.1955%" height="15" fill="rgb(247,123,22)" fg:x="12036152285" fg:w="39997113678"/><text x="2.4153%" y="239.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,alloc::vec::Vec&lt;u8&gt;)&gt;&gt; (39,997,113,678 samples, 7.20%)</title><rect x="2.1653%" y="213" width="7.1955%" height="15" fill="rgb(231,138,38)" fg:x="12036152285" fg:w="39997113678"/><text x="2.4153%" y="223.50">core::ptr:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (39,997,113,678 samples, 7.20%)</title><rect x="2.1653%" y="197" width="7.1955%" height="15" fill="rgb(231,145,46)" fg:x="12036152285" fg:w="39997113678"/><text x="2.4153%" y="207.50">&lt;alloc::ve..</text></g><g><title>core::ptr::drop_in_place&lt;[(usize,alloc::vec::Vec&lt;u8&gt;)]&gt; (39,997,113,678 samples, 7.20%)</title><rect x="2.1653%" y="181" width="7.1955%" height="15" fill="rgb(251,118,11)" fg:x="12036152285" fg:w="39997113678"/><text x="2.4153%" y="191.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;(usize,alloc::vec::Vec&lt;u8&gt;)&gt; (39,980,631,567 samples, 7.19%)</title><rect x="2.1683%" y="165" width="7.1926%" height="15" fill="rgb(217,147,25)" fg:x="12052634396" fg:w="39980631567"/><text x="2.4183%" y="175.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (39,980,631,567 samples, 7.19%)</title><rect x="2.1683%" y="149" width="7.1926%" height="15" fill="rgb(247,81,37)" fg:x="12052634396" fg:w="39980631567"/><text x="2.4183%" y="159.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (39,980,631,567 samples, 7.19%)</title><rect x="2.1683%" y="133" width="7.1926%" height="15" fill="rgb(209,12,38)" fg:x="12052634396" fg:w="39980631567"/><text x="2.4183%" y="143.50">core::ptr:..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (39,980,631,567 samples, 7.19%)</title><rect x="2.1683%" y="117" width="7.1926%" height="15" fill="rgb(227,1,9)" fg:x="12052634396" fg:w="39980631567"/><text x="2.4183%" y="127.50">&lt;alloc::ra..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (39,942,953,098 samples, 7.19%)</title><rect x="2.1751%" y="101" width="7.1858%" height="15" fill="rgb(248,47,43)" fg:x="12090312865" fg:w="39942953098"/><text x="2.4251%" y="111.50">alloc::raw..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (39,942,953,098 samples, 7.19%)</title><rect x="2.1751%" y="85" width="7.1858%" height="15" fill="rgb(221,10,30)" fg:x="12090312865" fg:w="39942953098"/><text x="2.4251%" y="95.50">&lt;alloc::al..</text></g><g><title>alloc::alloc::dealloc (39,942,953,098 samples, 7.19%)</title><rect x="2.1751%" y="69" width="7.1858%" height="15" fill="rgb(210,229,1)" fg:x="12090312865" fg:w="39942953098"/><text x="2.4251%" y="79.50">alloc::all..</text></g><g><title>cfree (38,249,108,509 samples, 6.88%)</title><rect x="2.4798%" y="53" width="6.8811%" height="15" fill="rgb(222,148,37)" fg:x="13784157454" fg:w="38249108509"/><text x="2.7298%" y="63.50">cfree</text></g><g><title>&lt;mvprs::VPLeaf&lt;u8,usize&gt; as mvprs::tree::promoter::TreeNodePromoter&lt;u8,usize&gt;&gt;::promote (40,004,022,611 samples, 7.20%)</title><rect x="2.1651%" y="293" width="7.1968%" height="15" fill="rgb(234,67,33)" fg:x="12034862797" fg:w="40004022611"/><text x="2.4151%" y="303.50">&lt;mvprs::VP..</text></g><g><title>core::core_simd::ops::&lt;impl core::ops::bit::BitXor for core::core_simd::vector::Simd&lt;u8,_&gt;&gt;::bitxor (971,485,582 samples, 0.17%)</title><rect x="11.2085%" y="277" width="0.1748%" height="15" fill="rgb(247,98,35)" fg:x="62303558147" fg:w="971485582"/><text x="11.4585%" y="287.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (592,715,167 samples, 0.11%)</title><rect x="11.3833%" y="277" width="0.1066%" height="15" fill="rgb(247,138,52)" fg:x="63275043729" fg:w="592715167"/><text x="11.6333%" y="287.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (592,715,167 samples, 0.11%)</title><rect x="11.3833%" y="261" width="0.1066%" height="15" fill="rgb(213,79,30)" fg:x="63275043729" fg:w="592715167"/><text x="11.6333%" y="271.50"></text></g><g><title>&lt;mvprs::tree::distance::HammingDistance as mvprs::tree::distance::DistanceMetric&lt;[u8],usize&gt;&gt;::distance (11,805,132,940 samples, 2.12%)</title><rect x="9.3704%" y="293" width="2.1238%" height="15" fill="rgb(246,177,23)" fg:x="52086312892" fg:w="11805132940"/><text x="9.6204%" y="303.50">&lt;..</text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_in (142,753,014 samples, 0.03%)</title><rect x="11.5875%" y="261" width="0.0257%" height="15" fill="rgb(230,62,27)" fg:x="64410428187" fg:w="142753014"/><text x="11.8375%" y="271.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (142,753,014 samples, 0.03%)</title><rect x="11.5875%" y="245" width="0.0257%" height="15" fill="rgb(216,154,8)" fg:x="64410428187" fg:w="142753014"/><text x="11.8375%" y="255.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (142,753,014 samples, 0.03%)</title><rect x="11.5875%" y="229" width="0.0257%" height="15" fill="rgb(244,35,45)" fg:x="64410428187" fg:w="142753014"/><text x="11.8375%" y="239.50"></text></g><g><title>&lt;&amp;A as core::alloc::Allocator&gt;::allocate (142,753,014 samples, 0.03%)</title><rect x="11.5875%" y="213" width="0.0257%" height="15" fill="rgb(251,115,12)" fg:x="64410428187" fg:w="142753014"/><text x="11.8375%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (142,753,014 samples, 0.03%)</title><rect x="11.5875%" y="197" width="0.0257%" height="15" fill="rgb(240,54,50)" fg:x="64410428187" fg:w="142753014"/><text x="11.8375%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (142,753,014 samples, 0.03%)</title><rect x="11.5875%" y="181" width="0.0257%" height="15" fill="rgb(233,84,52)" fg:x="64410428187" fg:w="142753014"/><text x="11.8375%" y="191.50"></text></g><g><title>alloc::alloc::alloc (142,753,014 samples, 0.03%)</title><rect x="11.5875%" y="165" width="0.0257%" height="15" fill="rgb(207,117,47)" fg:x="64410428187" fg:w="142753014"/><text x="11.8375%" y="175.50"></text></g><g><title>&lt;rayon::iter::extend::ListVecFolder&lt;T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::complete (918,078,590 samples, 0.17%)</title><rect x="11.4942%" y="293" width="0.1652%" height="15" fill="rgb(249,43,39)" fg:x="63891445832" fg:w="918078590"/><text x="11.7442%" y="303.50"></text></g><g><title>alloc::collections::linked_list::LinkedList&lt;T,A&gt;::push_back (399,096,235 samples, 0.07%)</title><rect x="11.5875%" y="277" width="0.0718%" height="15" fill="rgb(209,38,44)" fg:x="64410428187" fg:w="399096235"/><text x="11.8375%" y="287.50"></text></g><g><title>alloc::collections::linked_list::LinkedList&lt;T,A&gt;::push_back_node (256,343,221 samples, 0.05%)</title><rect x="11.6132%" y="261" width="0.0461%" height="15" fill="rgb(236,212,23)" fg:x="64553181201" fg:w="256343221"/><text x="11.8632%" y="271.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2,239,983,082 samples, 0.40%)</title><rect x="12.0345%" y="261" width="0.4030%" height="15" fill="rgb(242,79,21)" fg:x="66895075513" fg:w="2239983082"/><text x="12.2845%" y="271.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (785,039,274 samples, 0.14%)</title><rect x="12.2963%" y="245" width="0.1412%" height="15" fill="rgb(211,96,35)" fg:x="68350019321" fg:w="785039274"/><text x="12.5463%" y="255.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (785,039,274 samples, 0.14%)</title><rect x="12.2963%" y="229" width="0.1412%" height="15" fill="rgb(253,215,40)" fg:x="68350019321" fg:w="785039274"/><text x="12.5463%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (71,034,033,425 samples, 12.78%)</title><rect x="12.4878%" y="149" width="12.7791%" height="15" fill="rgb(211,81,21)" fg:x="69414746905" fg:w="71034033425"/><text x="12.7378%" y="159.50">&lt;alloc::alloc::Glob..</text></g><g><title>alloc::alloc::Global::alloc_impl (71,034,033,425 samples, 12.78%)</title><rect x="12.4878%" y="133" width="12.7791%" height="15" fill="rgb(208,190,38)" fg:x="69414746905" fg:w="71034033425"/><text x="12.7378%" y="143.50">alloc::alloc::Globa..</text></g><g><title>alloc::alloc::alloc (71,034,033,425 samples, 12.78%)</title><rect x="12.4878%" y="117" width="12.7791%" height="15" fill="rgb(235,213,38)" fg:x="69414746905" fg:w="71034033425"/><text x="12.7378%" y="127.50">alloc::alloc::alloc</text></g><g><title>malloc (71,029,569,437 samples, 12.78%)</title><rect x="12.4886%" y="101" width="12.7783%" height="15" fill="rgb(237,122,38)" fg:x="69419210893" fg:w="71029569437"/><text x="12.7386%" y="111.50">malloc</text></g><g><title>[libc.so.6] (60,029,184,098 samples, 10.80%)</title><rect x="14.4676%" y="85" width="10.7993%" height="15" fill="rgb(244,218,35)" fg:x="80419596232" fg:w="60029184098"/><text x="14.7176%" y="95.50">[libc.so.6]</text></g><g><title>[libc.so.6] (58,669,070 samples, 0.01%)</title><rect x="25.2564%" y="69" width="0.0106%" height="15" fill="rgb(240,68,47)" fg:x="140390111260" fg:w="58669070"/><text x="25.5064%" y="79.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (71,340,226,428 samples, 12.83%)</title><rect x="12.4375%" y="213" width="12.8342%" height="15" fill="rgb(210,16,53)" fg:x="69135058595" fg:w="71340226428"/><text x="12.6875%" y="223.50">alloc::vec::Vec&lt;T,A..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (71,340,226,428 samples, 12.83%)</title><rect x="12.4375%" y="197" width="12.8342%" height="15" fill="rgb(235,124,12)" fg:x="69135058595" fg:w="71340226428"/><text x="12.6875%" y="207.50">alloc::raw_vec::Raw..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (71,340,226,428 samples, 12.83%)</title><rect x="12.4375%" y="181" width="12.8342%" height="15" fill="rgb(224,169,11)" fg:x="69135058595" fg:w="71340226428"/><text x="12.6875%" y="191.50">alloc::raw_vec::Raw..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (71,340,226,428 samples, 12.83%)</title><rect x="12.4375%" y="165" width="12.8342%" height="15" fill="rgb(250,166,2)" fg:x="69135058595" fg:w="71340226428"/><text x="12.6875%" y="175.50">alloc::raw_vec::Raw..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (72,193,768,069 samples, 12.99%)</title><rect x="12.4375%" y="261" width="12.9878%" height="15" fill="rgb(242,216,29)" fg:x="69135058595" fg:w="72193768069"/><text x="12.6875%" y="271.50">&lt;alloc::vec::Vec&lt;T,A..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (72,193,768,069 samples, 12.99%)</title><rect x="12.4375%" y="245" width="12.9878%" height="15" fill="rgb(230,116,27)" fg:x="69135058595" fg:w="72193768069"/><text x="12.6875%" y="255.50">alloc::slice::&lt;impl ..</text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (72,193,768,069 samples, 12.99%)</title><rect x="12.4375%" y="229" width="12.9878%" height="15" fill="rgb(228,99,48)" fg:x="69135058595" fg:w="72193768069"/><text x="12.6875%" y="239.50">&lt;T as alloc::slice::..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (853,541,641 samples, 0.15%)</title><rect x="25.2717%" y="213" width="0.1536%" height="15" fill="rgb(253,11,6)" fg:x="140475285023" fg:w="853541641"/><text x="25.5217%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (853,541,641 samples, 0.15%)</title><rect x="25.2717%" y="197" width="0.1536%" height="15" fill="rgb(247,143,39)" fg:x="140475285023" fg:w="853541641"/><text x="25.5217%" y="207.50"></text></g><g><title>[libc.so.6] (812,897,484 samples, 0.15%)</title><rect x="25.2790%" y="181" width="0.1462%" height="15" fill="rgb(236,97,10)" fg:x="140515929180" fg:w="812897484"/><text x="25.5290%" y="191.50"></text></g><g><title>&lt;mvprs::VPLeaf&lt;u8,usize&gt; as mvprs::tree::promoter::TreeNodePromoter&lt;u8,usize&gt;&gt;::promote::_{{closure}}::_{{closure}} (74,701,031,683 samples, 13.44%)</title><rect x="12.0322%" y="277" width="13.4388%" height="15" fill="rgb(233,208,19)" fg:x="66882029597" fg:w="74701031683"/><text x="12.2822%" y="287.50">&lt;mvprs::VPLeaf&lt;u8,us..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (254,234,616 samples, 0.05%)</title><rect x="25.4253%" y="261" width="0.0457%" height="15" fill="rgb(216,164,2)" fg:x="141328826664" fg:w="254234616"/><text x="25.6753%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (254,234,616 samples, 0.05%)</title><rect x="25.4253%" y="245" width="0.0457%" height="15" fill="rgb(220,129,5)" fg:x="141328826664" fg:w="254234616"/><text x="25.6753%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (165,246,439 samples, 0.03%)</title><rect x="25.4413%" y="229" width="0.0297%" height="15" fill="rgb(242,17,10)" fg:x="141417814841" fg:w="165246439"/><text x="25.6913%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (165,246,439 samples, 0.03%)</title><rect x="25.4413%" y="213" width="0.0297%" height="15" fill="rgb(242,107,0)" fg:x="141417814841" fg:w="165246439"/><text x="25.6913%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (165,246,439 samples, 0.03%)</title><rect x="25.4413%" y="197" width="0.0297%" height="15" fill="rgb(251,28,31)" fg:x="141417814841" fg:w="165246439"/><text x="25.6913%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (165,246,439 samples, 0.03%)</title><rect x="25.4413%" y="181" width="0.0297%" height="15" fill="rgb(233,223,10)" fg:x="141417814841" fg:w="165246439"/><text x="25.6913%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (82,180,123 samples, 0.01%)</title><rect x="25.8539%" y="245" width="0.0148%" height="15" fill="rgb(215,21,27)" fg:x="143711122165" fg:w="82180123"/><text x="26.1039%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (82,180,123 samples, 0.01%)</title><rect x="25.8539%" y="229" width="0.0148%" height="15" fill="rgb(232,23,21)" fg:x="143711122165" fg:w="82180123"/><text x="26.1039%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (82,180,123 samples, 0.01%)</title><rect x="25.8539%" y="213" width="0.0148%" height="15" fill="rgb(244,5,23)" fg:x="143711122165" fg:w="82180123"/><text x="26.1039%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (82,180,123 samples, 0.01%)</title><rect x="25.8539%" y="197" width="0.0148%" height="15" fill="rgb(226,81,46)" fg:x="143711122165" fg:w="82180123"/><text x="26.1039%" y="207.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (338,982,596 samples, 0.06%)</title><rect x="25.8686%" y="245" width="0.0610%" height="15" fill="rgb(247,70,30)" fg:x="143793302288" fg:w="338982596"/><text x="26.1186%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,100,634,380 samples, 0.38%)</title><rect x="25.6908%" y="261" width="0.3779%" height="15" fill="rgb(212,68,19)" fg:x="142804752120" fg:w="2100634380"/><text x="25.9408%" y="271.50"></text></g><g><title>core::ptr::write (773,101,616 samples, 0.14%)</title><rect x="25.9296%" y="245" width="0.1391%" height="15" fill="rgb(240,187,13)" fg:x="144132284884" fg:w="773101616"/><text x="26.1796%" y="255.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume (80,112,536,740 samples, 14.41%)</title><rect x="11.6593%" y="293" width="14.4124%" height="15" fill="rgb(223,113,26)" fg:x="64809524422" fg:w="80112536740"/><text x="11.9093%" y="303.50">&lt;rayon::iter::map::Map..</text></g><g><title>&lt;rayon::iter::extend::ListVecFolder&lt;T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume (3,338,999,882 samples, 0.60%)</title><rect x="25.4710%" y="277" width="0.6007%" height="15" fill="rgb(206,192,2)" fg:x="141583061280" fg:w="3338999882"/><text x="25.7210%" y="287.50"></text></g><g><title>&lt;rayon_core::latch::SpinLatch as rayon_core::latch::Latch&gt;::set (2,048,845,151 samples, 0.37%)</title><rect x="26.2066%" y="277" width="0.3686%" height="15" fill="rgb(241,108,4)" fg:x="145671713031" fg:w="2048845151"/><text x="26.4566%" y="287.50"></text></g><g><title>rayon_core::latch::CoreLatch::set (1,209,838,186 samples, 0.22%)</title><rect x="26.3575%" y="261" width="0.2177%" height="15" fill="rgb(247,173,49)" fg:x="146510719996" fg:w="1209838186"/><text x="26.6075%" y="271.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (541,979,264 samples, 0.10%)</title><rect x="26.5755%" y="277" width="0.0975%" height="15" fill="rgb(224,114,35)" fg:x="147722211054" fg:w="541979264"/><text x="26.8255%" y="287.50"></text></g><g><title>core::mem::replace (541,979,264 samples, 0.10%)</title><rect x="26.5755%" y="261" width="0.0975%" height="15" fill="rgb(245,159,27)" fg:x="147722211054" fg:w="541979264"/><text x="26.8255%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;rayon_core::job::JobResult&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;(usize,alloc::vec::Vec&lt;u8&gt;)&gt;&gt;&gt;&gt; (352,512,684 samples, 0.06%)</title><rect x="26.6759%" y="277" width="0.0634%" height="15" fill="rgb(245,172,44)" fg:x="148280715406" fg:w="352512684"/><text x="26.9259%" y="287.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (631,457,560 samples, 0.11%)</title><rect x="26.7397%" y="277" width="0.1136%" height="15" fill="rgb(236,23,11)" fg:x="148635313118" fg:w="631457560"/><text x="26.9897%" y="287.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (631,457,560 samples, 0.11%)</title><rect x="26.7397%" y="261" width="0.1136%" height="15" fill="rgb(205,117,38)" fg:x="148635313118" fg:w="631457560"/><text x="26.9897%" y="271.50"></text></g><g><title>std::panic::catch_unwind (631,457,560 samples, 0.11%)</title><rect x="26.7397%" y="245" width="0.1136%" height="15" fill="rgb(237,72,25)" fg:x="148635313118" fg:w="631457560"/><text x="26.9897%" y="255.50"></text></g><g><title>std::panicking::try (631,457,560 samples, 0.11%)</title><rect x="26.7397%" y="229" width="0.1136%" height="15" fill="rgb(244,70,9)" fg:x="148635313118" fg:w="631457560"/><text x="26.9897%" y="239.50"></text></g><g><title>std::panicking::try::do_call (631,457,560 samples, 0.11%)</title><rect x="26.7397%" y="213" width="0.1136%" height="15" fill="rgb(217,125,39)" fg:x="148635313118" fg:w="631457560"/><text x="26.9897%" y="223.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (535,013,632 samples, 0.10%)</title><rect x="26.7571%" y="197" width="0.0962%" height="15" fill="rgb(235,36,10)" fg:x="148731757046" fg:w="535013632"/><text x="27.0071%" y="207.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::_{{closure}} (535,013,632 samples, 0.10%)</title><rect x="26.7571%" y="181" width="0.0962%" height="15" fill="rgb(251,123,47)" fg:x="148731757046" fg:w="535013632"/><text x="27.0071%" y="191.50"></text></g><g><title>rayon_core::join::join_context::call_b::_{{closure}} (535,013,632 samples, 0.10%)</title><rect x="26.7571%" y="165" width="0.0962%" height="15" fill="rgb(221,13,13)" fg:x="148731757046" fg:w="535013632"/><text x="27.0071%" y="175.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (535,013,632 samples, 0.10%)</title><rect x="26.7571%" y="149" width="0.0962%" height="15" fill="rgb(238,131,9)" fg:x="148731757046" fg:w="535013632"/><text x="27.0071%" y="159.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (4,345,754,262 samples, 0.78%)</title><rect x="26.0717%" y="293" width="0.7818%" height="15" fill="rgb(211,50,8)" fg:x="144922061162" fg:w="4345754262"/><text x="26.3217%" y="303.50"></text></g><g><title>[libc.so.6] (113,346,285 samples, 0.02%)</title><rect x="26.8618%" y="293" width="0.0204%" height="15" fill="rgb(245,182,24)" fg:x="149313662192" fg:w="113346285"/><text x="27.1118%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (280,343,575 samples, 0.05%)</title><rect x="26.8822%" y="277" width="0.0504%" height="15" fill="rgb(242,14,37)" fg:x="149427008477" fg:w="280343575"/><text x="27.1322%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (67,174,523 samples, 0.01%)</title><rect x="26.9334%" y="261" width="0.0121%" height="15" fill="rgb(246,228,12)" fg:x="149711823803" fg:w="67174523"/><text x="27.1834%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (62,531,098 samples, 0.01%)</title><rect x="26.9342%" y="245" width="0.0112%" height="15" fill="rgb(213,55,15)" fg:x="149716467228" fg:w="62531098"/><text x="27.1842%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (62,531,098 samples, 0.01%)</title><rect x="26.9342%" y="229" width="0.0112%" height="15" fill="rgb(209,9,3)" fg:x="149716467228" fg:w="62531098"/><text x="27.1842%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (62,531,098 samples, 0.01%)</title><rect x="26.9342%" y="213" width="0.0112%" height="15" fill="rgb(230,59,30)" fg:x="149716467228" fg:w="62531098"/><text x="27.1842%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (62,531,098 samples, 0.01%)</title><rect x="26.9342%" y="197" width="0.0112%" height="15" fill="rgb(209,121,21)" fg:x="149716467228" fg:w="62531098"/><text x="27.1842%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (62,531,098 samples, 0.01%)</title><rect x="26.9342%" y="181" width="0.0112%" height="15" fill="rgb(220,109,13)" fg:x="149716467228" fg:w="62531098"/><text x="27.1842%" y="191.50"></text></g><g><title>alloc::alloc::Global::grow_impl (62,531,098 samples, 0.01%)</title><rect x="26.9342%" y="165" width="0.0112%" height="15" fill="rgb(232,18,1)" fg:x="149716467228" fg:w="62531098"/><text x="27.1842%" y="175.50"></text></g><g><title>alloc::alloc::realloc (62,531,098 samples, 0.01%)</title><rect x="26.9342%" y="149" width="0.0112%" height="15" fill="rgb(215,41,42)" fg:x="149716467228" fg:w="62531098"/><text x="27.1842%" y="159.50"></text></g><g><title>realloc (62,531,098 samples, 0.01%)</title><rect x="26.9342%" y="133" width="0.0112%" height="15" fill="rgb(224,123,36)" fg:x="149716467228" fg:w="62531098"/><text x="27.1842%" y="143.50"></text></g><g><title>[libc.so.6] (62,531,098 samples, 0.01%)</title><rect x="26.9342%" y="117" width="0.0112%" height="15" fill="rgb(240,125,3)" fg:x="149716467228" fg:w="62531098"/><text x="27.1842%" y="127.50"></text></g><g><title>[libc.so.6] (62,531,098 samples, 0.01%)</title><rect x="26.9342%" y="101" width="0.0112%" height="15" fill="rgb(205,98,50)" fg:x="149716467228" fg:w="62531098"/><text x="27.1842%" y="111.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::_{{closure}} (998,308,882 samples, 0.18%)</title><rect x="26.9625%" y="213" width="0.1796%" height="15" fill="rgb(205,185,37)" fg:x="149873626902" fg:w="998308882"/><text x="27.2125%" y="223.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (998,308,882 samples, 0.18%)</title><rect x="26.9625%" y="197" width="0.1796%" height="15" fill="rgb(238,207,15)" fg:x="149873626902" fg:w="998308882"/><text x="27.2125%" y="207.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (998,308,882 samples, 0.18%)</title><rect x="26.9625%" y="181" width="0.1796%" height="15" fill="rgb(213,199,42)" fg:x="149873626902" fg:w="998308882"/><text x="27.2125%" y="191.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (998,308,882 samples, 0.18%)</title><rect x="26.9625%" y="165" width="0.1796%" height="15" fill="rgb(235,201,11)" fg:x="149873626902" fg:w="998308882"/><text x="27.2125%" y="175.50"></text></g><g><title>[libc.so.6] (968,762,224 samples, 0.17%)</title><rect x="26.9678%" y="149" width="0.1743%" height="15" fill="rgb(207,46,11)" fg:x="149903173560" fg:w="968762224"/><text x="27.2178%" y="159.50"></text></g><g><title>&lt;mvprs::VPLeaf&lt;u8,usize&gt; as mvprs::tree::node::TreeNode&lt;u8,usize&gt;&gt;::add (1,169,075,543 samples, 0.21%)</title><rect x="26.9326%" y="277" width="0.2103%" height="15" fill="rgb(241,35,35)" fg:x="149707352052" fg:w="1169075543"/><text x="27.1826%" y="287.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (1,097,429,269 samples, 0.20%)</title><rect x="26.9455%" y="261" width="0.1974%" height="15" fill="rgb(243,32,47)" fg:x="149778998326" fg:w="1097429269"/><text x="27.1955%" y="271.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (1,097,429,269 samples, 0.20%)</title><rect x="26.9455%" y="245" width="0.1974%" height="15" fill="rgb(247,202,23)" fg:x="149778998326" fg:w="1097429269"/><text x="27.1955%" y="255.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (1,097,429,269 samples, 0.20%)</title><rect x="26.9455%" y="229" width="0.1974%" height="15" fill="rgb(219,102,11)" fg:x="149778998326" fg:w="1097429269"/><text x="27.1955%" y="239.50"></text></g><g><title>crossbeam_epoch::default::with_handle (61,725,203 samples, 0.01%)</title><rect x="27.1508%" y="277" width="0.0111%" height="15" fill="rgb(243,110,44)" fg:x="150920425980" fg:w="61725203"/><text x="27.4008%" y="287.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (61,725,203 samples, 0.01%)</title><rect x="27.1508%" y="261" width="0.0111%" height="15" fill="rgb(222,74,54)" fg:x="150920425980" fg:w="61725203"/><text x="27.4008%" y="271.50"></text></g><g><title>crossbeam_epoch::default::with_handle::_{{closure}} (61,725,203 samples, 0.01%)</title><rect x="27.1508%" y="245" width="0.0111%" height="15" fill="rgb(216,99,12)" fg:x="150920425980" fg:w="61725203"/><text x="27.4008%" y="255.50"></text></g><g><title>crossbeam_epoch::default::pin::_{{closure}} (61,725,203 samples, 0.01%)</title><rect x="27.1508%" y="229" width="0.0111%" height="15" fill="rgb(226,22,26)" fg:x="150920425980" fg:w="61725203"/><text x="27.4008%" y="239.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (61,725,203 samples, 0.01%)</title><rect x="27.1508%" y="213" width="0.0111%" height="15" fill="rgb(217,163,10)" fg:x="150920425980" fg:w="61725203"/><text x="27.4008%" y="223.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (61,725,203 samples, 0.01%)</title><rect x="27.1508%" y="197" width="0.0111%" height="15" fill="rgb(213,25,53)" fg:x="150920425980" fg:w="61725203"/><text x="27.4008%" y="207.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (72,652,671 samples, 0.01%)</title><rect x="27.2203%" y="261" width="0.0131%" height="15" fill="rgb(252,105,26)" fg:x="151306347632" fg:w="72652671"/><text x="27.4703%" y="271.50"></text></g><g><title>rayon_core::registry::in_worker (329,878,761 samples, 0.06%)</title><rect x="27.1818%" y="277" width="0.0593%" height="15" fill="rgb(220,39,43)" fg:x="151092586433" fg:w="329878761"/><text x="27.4318%" y="287.50"></text></g><g><title>[mvprs] (2,010,840,676 samples, 0.36%)</title><rect x="26.8822%" y="293" width="0.3618%" height="15" fill="rgb(229,68,48)" fg:x="149427008477" fg:w="2010840676"/><text x="27.1322%" y="303.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::_{{closure}} (169,876,846 samples, 0.03%)</title><rect x="28.3884%" y="245" width="0.0306%" height="15" fill="rgb(252,8,32)" fg:x="157799771528" fg:w="169876846"/><text x="28.6384%" y="255.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (545,846,373 samples, 0.10%)</title><rect x="28.4190%" y="245" width="0.0982%" height="15" fill="rgb(223,20,43)" fg:x="157969648374" fg:w="545846373"/><text x="28.6690%" y="255.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (545,846,373 samples, 0.10%)</title><rect x="28.4190%" y="229" width="0.0982%" height="15" fill="rgb(229,81,49)" fg:x="157969648374" fg:w="545846373"/><text x="28.6690%" y="239.50"></text></g><g><title>rayon_core::registry::Registry::num_threads (160,608,143 samples, 0.03%)</title><rect x="29.4356%" y="101" width="0.0289%" height="15" fill="rgb(236,28,36)" fg:x="163620748381" fg:w="160608143"/><text x="29.6856%" y="111.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (160,608,143 samples, 0.03%)</title><rect x="29.4356%" y="85" width="0.0289%" height="15" fill="rgb(249,185,26)" fg:x="163620748381" fg:w="160608143"/><text x="29.6856%" y="95.50"></text></g><g><title>rayon::iter::plumbing::LengthSplitter::try_split (563,421,483 samples, 0.10%)</title><rect x="29.3961%" y="165" width="0.1014%" height="15" fill="rgb(249,174,33)" fg:x="163400968120" fg:w="563421483"/><text x="29.6461%" y="175.50"></text></g><g><title>rayon::iter::plumbing::Splitter::try_split (560,946,086 samples, 0.10%)</title><rect x="29.3965%" y="149" width="0.1009%" height="15" fill="rgb(233,201,37)" fg:x="163403443517" fg:w="560946086"/><text x="29.6465%" y="159.50"></text></g><g><title>rayon_core::current_num_threads (496,035,890 samples, 0.09%)</title><rect x="29.4082%" y="133" width="0.0892%" height="15" fill="rgb(221,78,26)" fg:x="163468353713" fg:w="496035890"/><text x="29.6582%" y="143.50"></text></g><g><title>rayon_core::registry::Registry::current_num_threads (375,766,423 samples, 0.07%)</title><rect x="29.4299%" y="117" width="0.0676%" height="15" fill="rgb(250,127,30)" fg:x="163588623180" fg:w="375766423"/><text x="29.6799%" y="127.50"></text></g><g><title>rayon_core::registry::WorkerThread::current (183,033,079 samples, 0.03%)</title><rect x="29.4645%" y="101" width="0.0329%" height="15" fill="rgb(230,49,44)" fg:x="163781356524" fg:w="183033079"/><text x="29.7145%" y="111.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (183,033,079 samples, 0.03%)</title><rect x="29.4645%" y="85" width="0.0329%" height="15" fill="rgb(229,67,23)" fg:x="163781356524" fg:w="183033079"/><text x="29.7145%" y="95.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (183,033,079 samples, 0.03%)</title><rect x="29.4645%" y="69" width="0.0329%" height="15" fill="rgb(249,83,47)" fg:x="163781356524" fg:w="183033079"/><text x="29.7145%" y="79.50"></text></g><g><title>core::ops::function::FnOnce::call_once (105,150,153 samples, 0.02%)</title><rect x="29.4785%" y="53" width="0.0189%" height="15" fill="rgb(215,43,3)" fg:x="163859239450" fg:w="105150153"/><text x="29.7285%" y="63.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (278,870,524 samples, 0.05%)</title><rect x="29.4975%" y="165" width="0.0502%" height="15" fill="rgb(238,154,13)" fg:x="163964389603" fg:w="278870524"/><text x="29.7475%" y="175.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (278,870,524 samples, 0.05%)</title><rect x="29.4975%" y="149" width="0.0502%" height="15" fill="rgb(219,56,2)" fg:x="163964389603" fg:w="278870524"/><text x="29.7475%" y="159.50"></text></g><g><title>&lt;rayon::iter::filter::FilterFolder&lt;C,P&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume (241,260,443 samples, 0.04%)</title><rect x="29.5042%" y="133" width="0.0434%" height="15" fill="rgb(233,0,4)" fg:x="164001999684" fg:w="241260443"/><text x="29.7542%" y="143.50"></text></g><g><title>&lt;mvprs::VPLeaf&lt;u8,usize&gt; as mvprs::tree::promoter::TreeNodePromoter&lt;u8,usize&gt;&gt;::promote::_{{closure}}::_{{closure}} (238,869,119 samples, 0.04%)</title><rect x="29.5047%" y="117" width="0.0430%" height="15" fill="rgb(235,30,7)" fg:x="164004391008" fg:w="238869119"/><text x="29.7547%" y="127.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (210,954,365 samples, 0.04%)</title><rect x="29.5097%" y="101" width="0.0380%" height="15" fill="rgb(250,79,13)" fg:x="164032305762" fg:w="210954365"/><text x="29.7597%" y="111.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (210,954,365 samples, 0.04%)</title><rect x="29.5097%" y="85" width="0.0380%" height="15" fill="rgb(211,146,34)" fg:x="164032305762" fg:w="210954365"/><text x="29.7597%" y="95.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (210,954,365 samples, 0.04%)</title><rect x="29.5097%" y="69" width="0.0380%" height="15" fill="rgb(228,22,38)" fg:x="164032305762" fg:w="210954365"/><text x="29.7597%" y="79.50"></text></g><g><title>[libc.so.6] (155,514,500 samples, 0.03%)</title><rect x="29.5197%" y="53" width="0.0280%" height="15" fill="rgb(235,168,5)" fg:x="164087745627" fg:w="155514500"/><text x="29.7697%" y="63.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (4,051,795,025 samples, 0.73%)</title><rect x="28.8389%" y="213" width="0.7289%" height="15" fill="rgb(221,155,16)" fg:x="160303687344" fg:w="4051795025"/><text x="29.0889%" y="223.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::_{{closure}} (4,051,795,025 samples, 0.73%)</title><rect x="28.8389%" y="197" width="0.7289%" height="15" fill="rgb(215,215,53)" fg:x="160303687344" fg:w="4051795025"/><text x="29.0889%" y="207.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,031,312,083 samples, 0.19%)</title><rect x="29.3823%" y="181" width="0.1855%" height="15" fill="rgb(223,4,10)" fg:x="163324170286" fg:w="1031312083"/><text x="29.6323%" y="191.50"></text></g><g><title>rayon_core::join::join_context (112,222,242 samples, 0.02%)</title><rect x="29.5476%" y="165" width="0.0202%" height="15" fill="rgb(234,103,6)" fg:x="164243260127" fg:w="112222242"/><text x="29.7976%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (12,481,890,138 samples, 2.25%)</title><rect x="27.3903%" y="277" width="2.2455%" height="15" fill="rgb(227,97,0)" fg:x="152251484109" fg:w="12481890138"/><text x="27.6403%" y="287.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (10,304,542,290 samples, 1.85%)</title><rect x="27.7820%" y="261" width="1.8538%" height="15" fill="rgb(234,150,53)" fg:x="154428831957" fg:w="10304542290"/><text x="28.0320%" y="271.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (6,217,879,500 samples, 1.12%)</title><rect x="28.5172%" y="245" width="1.1186%" height="15" fill="rgb(228,201,54)" fg:x="158515494747" fg:w="6217879500"/><text x="28.7672%" y="255.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::_{{closure}} (6,217,879,500 samples, 1.12%)</title><rect x="28.5172%" y="229" width="1.1186%" height="15" fill="rgb(222,22,37)" fg:x="158515494747" fg:w="6217879500"/><text x="28.7672%" y="239.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::_{{closure}} (377,891,878 samples, 0.07%)</title><rect x="29.5678%" y="213" width="0.0680%" height="15" fill="rgb(237,53,32)" fg:x="164355482369" fg:w="377891878"/><text x="29.8178%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,alloc::vec::Vec&lt;u8&gt;)&gt;&gt; (188,276,898 samples, 0.03%)</title><rect x="29.6421%" y="197" width="0.0339%" height="15" fill="rgb(233,25,53)" fg:x="164768349069" fg:w="188276898"/><text x="29.8921%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,alloc::vec::Vec&lt;u8&gt;)&gt;&gt; (188,276,898 samples, 0.03%)</title><rect x="29.6421%" y="181" width="0.0339%" height="15" fill="rgb(210,40,34)" fg:x="164768349069" fg:w="188276898"/><text x="29.8921%" y="191.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (188,276,898 samples, 0.03%)</title><rect x="29.6421%" y="165" width="0.0339%" height="15" fill="rgb(241,220,44)" fg:x="164768349069" fg:w="188276898"/><text x="29.8921%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (188,276,898 samples, 0.03%)</title><rect x="29.6421%" y="149" width="0.0339%" height="15" fill="rgb(235,28,35)" fg:x="164768349069" fg:w="188276898"/><text x="29.8921%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (188,276,898 samples, 0.03%)</title><rect x="29.6421%" y="133" width="0.0339%" height="15" fill="rgb(210,56,17)" fg:x="164768349069" fg:w="188276898"/><text x="29.8921%" y="143.50"></text></g><g><title>alloc::alloc::dealloc (188,276,898 samples, 0.03%)</title><rect x="29.6421%" y="117" width="0.0339%" height="15" fill="rgb(224,130,29)" fg:x="164768349069" fg:w="188276898"/><text x="29.8921%" y="127.50"></text></g><g><title>cfree (188,276,898 samples, 0.03%)</title><rect x="29.6421%" y="101" width="0.0339%" height="15" fill="rgb(235,212,8)" fg:x="164768349069" fg:w="188276898"/><text x="29.8921%" y="111.50"></text></g><g><title>[libc.so.6] (172,183,465 samples, 0.03%)</title><rect x="29.6450%" y="85" width="0.0310%" height="15" fill="rgb(223,33,50)" fg:x="164784442502" fg:w="172183465"/><text x="29.8950%" y="95.50"></text></g><g><title>[libc.so.6] (167,481,341 samples, 0.03%)</title><rect x="29.6458%" y="69" width="0.0301%" height="15" fill="rgb(219,149,13)" fg:x="164789144626" fg:w="167481341"/><text x="29.8958%" y="79.50"></text></g><g><title>[libc.so.6] (143,103,898 samples, 0.03%)</title><rect x="29.6502%" y="53" width="0.0257%" height="15" fill="rgb(250,156,29)" fg:x="164813522069" fg:w="143103898"/><text x="29.9002%" y="63.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,alloc::vec::Vec&lt;(usize,alloc::vec::Vec&lt;u8&gt;)&gt;,alloc::vec::Vec&lt;u8&gt;)&gt;&gt; (202,213,050 samples, 0.04%)</title><rect x="29.6421%" y="261" width="0.0364%" height="15" fill="rgb(216,193,19)" fg:x="164768349069" fg:w="202213050"/><text x="29.8921%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (202,213,050 samples, 0.04%)</title><rect x="29.6421%" y="245" width="0.0364%" height="15" fill="rgb(216,135,14)" fg:x="164768349069" fg:w="202213050"/><text x="29.8921%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(usize,alloc::vec::Vec&lt;(usize,alloc::vec::Vec&lt;u8&gt;)&gt;,alloc::vec::Vec&lt;u8&gt;)]&gt; (202,213,050 samples, 0.04%)</title><rect x="29.6421%" y="229" width="0.0364%" height="15" fill="rgb(241,47,5)" fg:x="164768349069" fg:w="202213050"/><text x="29.8921%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;(usize,alloc::vec::Vec&lt;(usize,alloc::vec::Vec&lt;u8&gt;)&gt;,alloc::vec::Vec&lt;u8&gt;)&gt; (202,213,050 samples, 0.04%)</title><rect x="29.6421%" y="213" width="0.0364%" height="15" fill="rgb(233,42,35)" fg:x="164768349069" fg:w="202213050"/><text x="29.8921%" y="223.50"></text></g><g><title>&lt;mvprs::VPLeaf&lt;u8,usize&gt; as mvprs::tree::promoter::TreeNodePromoter&lt;u8,usize&gt;&gt;::promote (203,169,776 samples, 0.04%)</title><rect x="29.6421%" y="277" width="0.0366%" height="15" fill="rgb(231,13,6)" fg:x="164768349069" fg:w="203169776"/><text x="29.8921%" y="287.50"></text></g><g><title>&lt;mvprs::tree::distance::HammingDistance as mvprs::tree::distance::DistanceMetric&lt;[u8],usize&gt;&gt;::distance (157,641,271 samples, 0.03%)</title><rect x="29.6820%" y="277" width="0.0284%" height="15" fill="rgb(207,181,40)" fg:x="164990036919" fg:w="157641271"/><text x="29.9320%" y="287.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (65,253,362 samples, 0.01%)</title><rect x="29.6986%" y="261" width="0.0117%" height="15" fill="rgb(254,173,49)" fg:x="165082424828" fg:w="65253362"/><text x="29.9486%" y="271.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (65,253,362 samples, 0.01%)</title><rect x="29.6986%" y="245" width="0.0117%" height="15" fill="rgb(221,1,38)" fg:x="165082424828" fg:w="65253362"/><text x="29.9486%" y="255.50"></text></g><g><title>[libc.so.6] (11,388,370,847 samples, 2.05%)</title><rect x="31.1700%" y="117" width="2.0488%" height="15" fill="rgb(206,124,46)" fg:x="173261392588" fg:w="11388370847"/><text x="31.4200%" y="127.50">[..</text></g><g><title>malloc (16,565,911,131 samples, 2.98%)</title><rect x="30.2388%" y="133" width="2.9802%" height="15" fill="rgb(249,21,11)" fg:x="168085366247" fg:w="16565911131"/><text x="30.4888%" y="143.50">mal..</text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (16,653,328,800 samples, 3.00%)</title><rect x="30.2261%" y="229" width="2.9960%" height="15" fill="rgb(222,201,40)" fg:x="168014579981" fg:w="16653328800"/><text x="30.4761%" y="239.50">all..</text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (16,630,972,389 samples, 2.99%)</title><rect x="30.2301%" y="213" width="2.9919%" height="15" fill="rgb(235,61,29)" fg:x="168036936392" fg:w="16630972389"/><text x="30.4801%" y="223.50">all..</text></g><g><title>&lt;&amp;A as core::alloc::Allocator&gt;::allocate (16,630,972,389 samples, 2.99%)</title><rect x="30.2301%" y="197" width="2.9919%" height="15" fill="rgb(219,207,3)" fg:x="168036936392" fg:w="16630972389"/><text x="30.4801%" y="207.50">&lt;&amp;A..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (16,630,972,389 samples, 2.99%)</title><rect x="30.2301%" y="181" width="2.9919%" height="15" fill="rgb(222,56,46)" fg:x="168036936392" fg:w="16630972389"/><text x="30.4801%" y="191.50">&lt;al..</text></g><g><title>alloc::alloc::Global::alloc_impl (16,630,972,389 samples, 2.99%)</title><rect x="30.2301%" y="165" width="2.9919%" height="15" fill="rgb(239,76,54)" fg:x="168036936392" fg:w="16630972389"/><text x="30.4801%" y="175.50">all..</text></g><g><title>alloc::alloc::alloc (16,630,972,389 samples, 2.99%)</title><rect x="30.2301%" y="149" width="2.9919%" height="15" fill="rgb(231,124,27)" fg:x="168036936392" fg:w="16630972389"/><text x="30.4801%" y="159.50">all..</text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_in (16,927,095,910 samples, 3.05%)</title><rect x="30.2261%" y="245" width="3.0452%" height="15" fill="rgb(249,195,6)" fg:x="168014579981" fg:w="16927095910"/><text x="30.4761%" y="255.50">all..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (273,767,110 samples, 0.05%)</title><rect x="33.2221%" y="229" width="0.0493%" height="15" fill="rgb(237,174,47)" fg:x="184667908781" fg:w="273767110"/><text x="33.4721%" y="239.50"></text></g><g><title>alloc::collections::linked_list::LinkedList&lt;T,A&gt;::push_back_node (157,130,489 samples, 0.03%)</title><rect x="33.2713%" y="245" width="0.0283%" height="15" fill="rgb(206,201,31)" fg:x="184941675891" fg:w="157130489"/><text x="33.5213%" y="255.50"></text></g><g><title>alloc::collections::linked_list::LinkedList&lt;T,A&gt;::push_back (17,484,658,481 samples, 3.15%)</title><rect x="30.2261%" y="261" width="3.1455%" height="15" fill="rgb(231,57,52)" fg:x="168014579981" fg:w="17484658481"/><text x="30.4761%" y="271.50">all..</text></g><g><title>alloc::collections::linked_list::Node&lt;T&gt;::new (400,432,082 samples, 0.07%)</title><rect x="33.2996%" y="245" width="0.0720%" height="15" fill="rgb(248,177,22)" fg:x="185098806380" fg:w="400432082"/><text x="33.5496%" y="255.50"></text></g><g><title>&lt;rayon::iter::extend::ListVecFolder&lt;T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::complete (20,404,085,933 samples, 3.67%)</title><rect x="29.7103%" y="277" width="3.6707%" height="15" fill="rgb(215,211,37)" fg:x="165147678190" fg:w="20404085933"/><text x="29.9603%" y="287.50">&lt;ray..</text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (378,747,423 samples, 0.07%)</title><rect x="33.4609%" y="245" width="0.0681%" height="15" fill="rgb(241,128,51)" fg:x="185995794124" fg:w="378747423"/><text x="33.7109%" y="255.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (108,275,814 samples, 0.02%)</title><rect x="33.5096%" y="229" width="0.0195%" height="15" fill="rgb(227,165,31)" fg:x="186266265733" fg:w="108275814"/><text x="33.7596%" y="239.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (108,275,814 samples, 0.02%)</title><rect x="33.5096%" y="213" width="0.0195%" height="15" fill="rgb(228,167,24)" fg:x="186266265733" fg:w="108275814"/><text x="33.7596%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (22,868,030,703 samples, 4.11%)</title><rect x="33.5496%" y="133" width="4.1140%" height="15" fill="rgb(228,143,12)" fg:x="186488690118" fg:w="22868030703"/><text x="33.7996%" y="143.50">&lt;all..</text></g><g><title>alloc::alloc::Global::alloc_impl (22,868,030,703 samples, 4.11%)</title><rect x="33.5496%" y="117" width="4.1140%" height="15" fill="rgb(249,149,8)" fg:x="186488690118" fg:w="22868030703"/><text x="33.7996%" y="127.50">allo..</text></g><g><title>alloc::alloc::alloc (22,868,030,703 samples, 4.11%)</title><rect x="33.5496%" y="101" width="4.1140%" height="15" fill="rgb(243,35,44)" fg:x="186488690118" fg:w="22868030703"/><text x="33.7996%" y="111.50">allo..</text></g><g><title>malloc (22,868,030,703 samples, 4.11%)</title><rect x="33.5496%" y="85" width="4.1140%" height="15" fill="rgb(246,89,9)" fg:x="186488690118" fg:w="22868030703"/><text x="33.7996%" y="95.50">mall..</text></g><g><title>[libc.so.6] (19,529,498,057 samples, 3.51%)</title><rect x="34.1502%" y="69" width="3.5134%" height="15" fill="rgb(233,213,13)" fg:x="189827222764" fg:w="19529498057"/><text x="34.4002%" y="79.50">[li..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (22,986,243,320 samples, 4.14%)</title><rect x="33.5291%" y="197" width="4.1353%" height="15" fill="rgb(233,141,41)" fg:x="186374541547" fg:w="22986243320"/><text x="33.7791%" y="207.50">alloc..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (22,986,243,320 samples, 4.14%)</title><rect x="33.5291%" y="181" width="4.1353%" height="15" fill="rgb(239,167,4)" fg:x="186374541547" fg:w="22986243320"/><text x="33.7791%" y="191.50">alloc..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (22,986,243,320 samples, 4.14%)</title><rect x="33.5291%" y="165" width="4.1353%" height="15" fill="rgb(209,217,16)" fg:x="186374541547" fg:w="22986243320"/><text x="33.7791%" y="175.50">alloc..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (22,986,243,320 samples, 4.14%)</title><rect x="33.5291%" y="149" width="4.1353%" height="15" fill="rgb(219,88,35)" fg:x="186374541547" fg:w="22986243320"/><text x="33.7791%" y="159.50">alloc..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (23,205,542,736 samples, 4.17%)</title><rect x="33.5291%" y="245" width="4.1747%" height="15" fill="rgb(220,193,23)" fg:x="186374541547" fg:w="23205542736"/><text x="33.7791%" y="255.50">&lt;allo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (23,205,542,736 samples, 4.17%)</title><rect x="33.5291%" y="229" width="4.1747%" height="15" fill="rgb(230,90,52)" fg:x="186374541547" fg:w="23205542736"/><text x="33.7791%" y="239.50">alloc..</text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (23,205,542,736 samples, 4.17%)</title><rect x="33.5291%" y="213" width="4.1747%" height="15" fill="rgb(252,106,19)" fg:x="186374541547" fg:w="23205542736"/><text x="33.7791%" y="223.50">&lt;T as..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (219,299,416 samples, 0.04%)</title><rect x="37.6643%" y="197" width="0.0395%" height="15" fill="rgb(206,74,20)" fg:x="209360784867" fg:w="219299416"/><text x="37.9143%" y="207.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (219,299,416 samples, 0.04%)</title><rect x="37.6643%" y="181" width="0.0395%" height="15" fill="rgb(230,138,44)" fg:x="209360784867" fg:w="219299416"/><text x="37.9143%" y="191.50"></text></g><g><title>[libc.so.6] (202,202,453 samples, 0.04%)</title><rect x="37.6674%" y="165" width="0.0364%" height="15" fill="rgb(235,182,43)" fg:x="209377881830" fg:w="202202453"/><text x="37.9174%" y="175.50"></text></g><g><title>&lt;mvprs::VPLeaf&lt;u8,usize&gt; as mvprs::tree::promoter::TreeNodePromoter&lt;u8,usize&gt;&gt;::promote::_{{closure}}::_{{closure}} (23,670,476,994 samples, 4.26%)</title><rect x="33.4597%" y="261" width="4.2584%" height="15" fill="rgb(242,16,51)" fg:x="185988616063" fg:w="23670476994"/><text x="33.7097%" y="271.50">&lt;mvpr..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (79,008,774 samples, 0.01%)</title><rect x="37.7038%" y="245" width="0.0142%" height="15" fill="rgb(248,9,4)" fg:x="209580084283" fg:w="79008774"/><text x="37.9538%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (79,008,774 samples, 0.01%)</title><rect x="37.7038%" y="229" width="0.0142%" height="15" fill="rgb(210,31,22)" fg:x="209580084283" fg:w="79008774"/><text x="37.9538%" y="239.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (142,112,376 samples, 0.03%)</title><rect x="37.7665%" y="229" width="0.0256%" height="15" fill="rgb(239,54,39)" fg:x="209928674108" fg:w="142112376"/><text x="38.0165%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (766,550,139 samples, 0.14%)</title><rect x="37.7209%" y="245" width="0.1379%" height="15" fill="rgb(230,99,41)" fg:x="209675171002" fg:w="766550139"/><text x="37.9709%" y="255.50"></text></g><g><title>core::ptr::write (370,934,657 samples, 0.07%)</title><rect x="37.7921%" y="229" width="0.0667%" height="15" fill="rgb(253,106,12)" fg:x="210070786484" fg:w="370934657"/><text x="38.0421%" y="239.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume (24,897,857,183 samples, 4.48%)</title><rect x="33.3811%" y="277" width="4.4792%" height="15" fill="rgb(213,46,41)" fg:x="185551764123" fg:w="24897857183"/><text x="33.6311%" y="287.50">&lt;rayo..</text></g><g><title>&lt;rayon::iter::extend::ListVecFolder&lt;T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume (790,528,249 samples, 0.14%)</title><rect x="37.7180%" y="261" width="0.1422%" height="15" fill="rgb(215,133,35)" fg:x="209659093057" fg:w="790528249"/><text x="37.9680%" y="271.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (67,348,757 samples, 0.01%)</title><rect x="37.8772%" y="261" width="0.0121%" height="15" fill="rgb(213,28,5)" fg:x="210543948931" fg:w="67348757"/><text x="38.1272%" y="271.50"></text></g><g><title>core::mem::replace (67,348,757 samples, 0.01%)</title><rect x="37.8772%" y="245" width="0.0121%" height="15" fill="rgb(215,77,49)" fg:x="210543948931" fg:w="67348757"/><text x="38.1272%" y="255.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (208,230,948 samples, 0.04%)</title><rect x="37.8602%" y="277" width="0.0375%" height="15" fill="rgb(248,100,22)" fg:x="210449621306" fg:w="208230948"/><text x="38.1102%" y="287.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (62,239,069 samples, 0.01%)</title><rect x="37.9143%" y="261" width="0.0112%" height="15" fill="rgb(208,67,9)" fg:x="210750057371" fg:w="62239069"/><text x="38.1643%" y="271.50"></text></g><g><title>[mvprs] (196,853,773 samples, 0.04%)</title><rect x="37.8990%" y="277" width="0.0354%" height="15" fill="rgb(219,133,21)" fg:x="210664929149" fg:w="196853773"/><text x="38.1490%" y="287.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (1,969,522,251 samples, 0.35%)</title><rect x="37.9968%" y="213" width="0.3543%" height="15" fill="rgb(246,46,29)" fg:x="211208706147" fg:w="1969522251"/><text x="38.2468%" y="223.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (1,968,453,539 samples, 0.35%)</title><rect x="37.9970%" y="197" width="0.3541%" height="15" fill="rgb(246,185,52)" fg:x="211209774859" fg:w="1968453539"/><text x="38.2470%" y="207.50"></text></g><g><title>&lt;&amp;A as core::alloc::Allocator&gt;::allocate (1,968,453,539 samples, 0.35%)</title><rect x="37.9970%" y="181" width="0.3541%" height="15" fill="rgb(252,136,11)" fg:x="211209774859" fg:w="1968453539"/><text x="38.2470%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,968,453,539 samples, 0.35%)</title><rect x="37.9970%" y="165" width="0.3541%" height="15" fill="rgb(219,138,53)" fg:x="211209774859" fg:w="1968453539"/><text x="38.2470%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,968,453,539 samples, 0.35%)</title><rect x="37.9970%" y="149" width="0.3541%" height="15" fill="rgb(211,51,23)" fg:x="211209774859" fg:w="1968453539"/><text x="38.2470%" y="159.50"></text></g><g><title>alloc::alloc::alloc (1,968,453,539 samples, 0.35%)</title><rect x="37.9970%" y="133" width="0.3541%" height="15" fill="rgb(247,221,28)" fg:x="211209774859" fg:w="1968453539"/><text x="38.2470%" y="143.50"></text></g><g><title>malloc (1,967,285,053 samples, 0.35%)</title><rect x="37.9972%" y="117" width="0.3539%" height="15" fill="rgb(251,222,45)" fg:x="211210943345" fg:w="1967285053"/><text x="38.2472%" y="127.50"></text></g><g><title>[libc.so.6] (1,358,884,707 samples, 0.24%)</title><rect x="38.1066%" y="101" width="0.2445%" height="15" fill="rgb(217,162,53)" fg:x="211819343691" fg:w="1358884707"/><text x="38.3566%" y="111.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_in (1,994,019,327 samples, 0.36%)</title><rect x="37.9968%" y="229" width="0.3587%" height="15" fill="rgb(229,93,14)" fg:x="211208706147" fg:w="1994019327"/><text x="38.2468%" y="239.50"></text></g><g><title>alloc::collections::linked_list::LinkedList&lt;T,A&gt;::push_back (2,052,694,690 samples, 0.37%)</title><rect x="37.9968%" y="245" width="0.3693%" height="15" fill="rgb(209,67,49)" fg:x="211208706147" fg:w="2052694690"/><text x="38.2468%" y="255.50"></text></g><g><title>&lt;rayon::iter::extend::ListVecFolder&lt;T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::complete (2,405,854,111 samples, 0.43%)</title><rect x="37.9344%" y="261" width="0.4328%" height="15" fill="rgb(213,87,29)" fg:x="210861782922" fg:w="2405854111"/><text x="38.1844%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (504,945,576 samples, 0.09%)</title><rect x="38.3716%" y="181" width="0.0908%" height="15" fill="rgb(205,151,52)" fg:x="213291913857" fg:w="504945576"/><text x="38.6216%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (504,945,576 samples, 0.09%)</title><rect x="38.3716%" y="165" width="0.0908%" height="15" fill="rgb(253,215,39)" fg:x="213291913857" fg:w="504945576"/><text x="38.6216%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (504,945,576 samples, 0.09%)</title><rect x="38.3716%" y="149" width="0.0908%" height="15" fill="rgb(221,220,41)" fg:x="213291913857" fg:w="504945576"/><text x="38.6216%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (504,945,576 samples, 0.09%)</title><rect x="38.3716%" y="133" width="0.0908%" height="15" fill="rgb(218,133,21)" fg:x="213291913857" fg:w="504945576"/><text x="38.6216%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (503,854,941 samples, 0.09%)</title><rect x="38.3718%" y="117" width="0.0906%" height="15" fill="rgb(221,193,43)" fg:x="213293004492" fg:w="503854941"/><text x="38.6218%" y="127.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (503,854,941 samples, 0.09%)</title><rect x="38.3718%" y="101" width="0.0906%" height="15" fill="rgb(240,128,52)" fg:x="213293004492" fg:w="503854941"/><text x="38.6218%" y="111.50"></text></g><g><title>alloc::alloc::alloc (503,854,941 samples, 0.09%)</title><rect x="38.3718%" y="85" width="0.0906%" height="15" fill="rgb(253,114,12)" fg:x="213293004492" fg:w="503854941"/><text x="38.6218%" y="95.50"></text></g><g><title>malloc (503,854,941 samples, 0.09%)</title><rect x="38.3718%" y="69" width="0.0906%" height="15" fill="rgb(215,223,47)" fg:x="213293004492" fg:w="503854941"/><text x="38.6218%" y="79.50"></text></g><g><title>[libc.so.6] (414,172,233 samples, 0.07%)</title><rect x="38.3879%" y="53" width="0.0745%" height="15" fill="rgb(248,225,23)" fg:x="213382687200" fg:w="414172233"/><text x="38.6379%" y="63.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (512,694,502 samples, 0.09%)</title><rect x="38.3716%" y="229" width="0.0922%" height="15" fill="rgb(250,108,0)" fg:x="213291913857" fg:w="512694502"/><text x="38.6216%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (512,694,502 samples, 0.09%)</title><rect x="38.3716%" y="213" width="0.0922%" height="15" fill="rgb(228,208,7)" fg:x="213291913857" fg:w="512694502"/><text x="38.6216%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (512,694,502 samples, 0.09%)</title><rect x="38.3716%" y="197" width="0.0922%" height="15" fill="rgb(244,45,10)" fg:x="213291913857" fg:w="512694502"/><text x="38.6216%" y="207.50"></text></g><g><title>&lt;mvprs::VPLeaf&lt;u8,usize&gt; as mvprs::tree::promoter::TreeNodePromoter&lt;u8,usize&gt;&gt;::promote::_{{closure}}::_{{closure}} (526,937,230 samples, 0.09%)</title><rect x="38.3692%" y="245" width="0.0948%" height="15" fill="rgb(207,125,25)" fg:x="213278562095" fg:w="526937230"/><text x="38.6192%" y="255.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume (565,985,348 samples, 0.10%)</title><rect x="38.3672%" y="261" width="0.1018%" height="15" fill="rgb(210,195,18)" fg:x="213267637033" fg:w="565985348"/><text x="38.6172%" y="271.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (65,469,112 samples, 0.01%)</title><rect x="38.4867%" y="261" width="0.0118%" height="15" fill="rgb(249,80,12)" fg:x="213931855387" fg:w="65469112"/><text x="38.7367%" y="271.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (55,926,904 samples, 0.01%)</title><rect x="38.4884%" y="245" width="0.0101%" height="15" fill="rgb(221,65,9)" fg:x="213941397595" fg:w="55926904"/><text x="38.7384%" y="255.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (55,926,904 samples, 0.01%)</title><rect x="38.4884%" y="229" width="0.0101%" height="15" fill="rgb(235,49,36)" fg:x="213941397595" fg:w="55926904"/><text x="38.7384%" y="239.50"></text></g><g><title>[unknown] (3,171,664,108 samples, 0.57%)</title><rect x="37.9344%" y="277" width="0.5706%" height="15" fill="rgb(225,32,20)" fg:x="210861782922" fg:w="3171664108"/><text x="38.1844%" y="287.50"></text></g><g><title>__rustc::__rdl_alloc (94,251,974 samples, 0.02%)</title><rect x="38.5050%" y="277" width="0.0170%" height="15" fill="rgb(215,141,46)" fg:x="214033447030" fg:w="94251974"/><text x="38.7550%" y="287.50"></text></g><g><title>__rustc::__rust_dealloc (190,329,936 samples, 0.03%)</title><rect x="38.5238%" y="277" width="0.0342%" height="15" fill="rgb(250,160,47)" fg:x="214138330459" fg:w="190329936"/><text x="38.7738%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (165,254,570 samples, 0.03%)</title><rect x="38.5590%" y="277" width="0.0297%" height="15" fill="rgb(216,222,40)" fg:x="214333703470" fg:w="165254570"/><text x="38.8090%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (75,477,003 samples, 0.01%)</title><rect x="38.5751%" y="261" width="0.0136%" height="15" fill="rgb(234,217,39)" fg:x="214423481037" fg:w="75477003"/><text x="38.8251%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (72,656,787 samples, 0.01%)</title><rect x="38.5756%" y="245" width="0.0131%" height="15" fill="rgb(207,178,40)" fg:x="214426301253" fg:w="72656787"/><text x="38.8256%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (764,528,683 samples, 0.14%)</title><rect x="38.6113%" y="261" width="0.1375%" height="15" fill="rgb(221,136,13)" fg:x="214624536327" fg:w="764528683"/><text x="38.8613%" y="271.50"></text></g><g><title>alloc::alloc::Global::grow_impl (764,528,683 samples, 0.14%)</title><rect x="38.6113%" y="245" width="0.1375%" height="15" fill="rgb(249,199,10)" fg:x="214624536327" fg:w="764528683"/><text x="38.8613%" y="255.50"></text></g><g><title>alloc::alloc::realloc (758,057,995 samples, 0.14%)</title><rect x="38.6125%" y="229" width="0.1364%" height="15" fill="rgb(249,222,13)" fg:x="214631007015" fg:w="758057995"/><text x="38.8625%" y="239.50"></text></g><g><title>realloc (758,057,995 samples, 0.14%)</title><rect x="38.6125%" y="213" width="0.1364%" height="15" fill="rgb(244,185,38)" fg:x="214631007015" fg:w="758057995"/><text x="38.8625%" y="223.50"></text></g><g><title>[libc.so.6] (543,629,920 samples, 0.10%)</title><rect x="38.6510%" y="197" width="0.0978%" height="15" fill="rgb(236,202,9)" fg:x="214845435090" fg:w="543629920"/><text x="38.9010%" y="207.50"></text></g><g><title>[libc.so.6] (438,744,852 samples, 0.08%)</title><rect x="38.6699%" y="181" width="0.0789%" height="15" fill="rgb(250,229,37)" fg:x="214950320158" fg:w="438744852"/><text x="38.9199%" y="191.50"></text></g><g><title>[libc.so.6] (112,037,523 samples, 0.02%)</title><rect x="38.7287%" y="165" width="0.0202%" height="15" fill="rgb(206,174,23)" fg:x="215277027487" fg:w="112037523"/><text x="38.9787%" y="175.50"></text></g><g><title>[libc.so.6] (975,437,409 samples, 0.18%)</title><rect x="38.8645%" y="245" width="0.1755%" height="15" fill="rgb(211,33,43)" fg:x="216031987307" fg:w="975437409"/><text x="39.1145%" y="255.50"></text></g><g><title>malloc (1,556,153,863 samples, 0.28%)</title><rect x="38.7607%" y="261" width="0.2800%" height="15" fill="rgb(245,58,50)" fg:x="215454786465" fg:w="1556153863"/><text x="39.0107%" y="271.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (57,452,093 samples, 0.01%)</title><rect x="39.0406%" y="261" width="0.0103%" height="15" fill="rgb(244,68,36)" fg:x="217010940328" fg:w="57452093"/><text x="39.2906%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (2,577,932,566 samples, 0.46%)</title><rect x="38.5887%" y="277" width="0.4638%" height="15" fill="rgb(232,229,15)" fg:x="214498958040" fg:w="2577932566"/><text x="38.8387%" y="287.50"></text></g><g><title>__rustc::__rdl_alloc (160,159,516 samples, 0.03%)</title><rect x="39.0525%" y="261" width="0.0288%" height="15" fill="rgb(254,30,23)" fg:x="217076890606" fg:w="160159516"/><text x="39.3025%" y="271.50"></text></g><g><title>anon.d31b9994fb04594bc5aeb47193b1029e.1.llvm.14506876275332831279 (163,500,619 samples, 0.03%)</title><rect x="39.0525%" y="277" width="0.0294%" height="15" fill="rgb(235,160,14)" fg:x="217076890606" fg:w="163500619"/><text x="39.3025%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (284,268,566 samples, 0.05%)</title><rect x="39.3454%" y="261" width="0.0511%" height="15" fill="rgb(212,155,44)" fg:x="218704869590" fg:w="284268566"/><text x="39.5954%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_load (284,268,566 samples, 0.05%)</title><rect x="39.3454%" y="245" width="0.0511%" height="15" fill="rgb(226,2,50)" fg:x="218704869590" fg:w="284268566"/><text x="39.5954%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (3,882,492,634 samples, 0.70%)</title><rect x="39.4029%" y="261" width="0.6985%" height="15" fill="rgb(234,177,6)" fg:x="219024972659" fg:w="3882492634"/><text x="39.6529%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_load (3,882,492,634 samples, 0.70%)</title><rect x="39.4029%" y="245" width="0.6985%" height="15" fill="rgb(217,24,9)" fg:x="219024972659" fg:w="3882492634"/><text x="39.6529%" y="255.50"></text></g><g><title>crossbeam_deque::deque::Injector&lt;T&gt;::steal (5,649,418,174 samples, 1.02%)</title><rect x="39.0857%" y="277" width="1.0163%" height="15" fill="rgb(220,13,46)" fg:x="217261310856" fg:w="5649418174"/><text x="39.3357%" y="287.50"></text></g><g><title>crossbeam_deque::deque::Worker&lt;T&gt;::pop (147,567,902 samples, 0.03%)</title><rect x="40.1045%" y="277" width="0.0265%" height="15" fill="rgb(239,221,27)" fg:x="222924872808" fg:w="147567902"/><text x="40.3545%" y="287.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (143,790,457 samples, 0.03%)</title><rect x="40.1052%" y="261" width="0.0259%" height="15" fill="rgb(222,198,25)" fg:x="222928650253" fg:w="143790457"/><text x="40.3552%" y="271.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (143,790,457 samples, 0.03%)</title><rect x="40.1052%" y="245" width="0.0259%" height="15" fill="rgb(211,99,13)" fg:x="222928650253" fg:w="143790457"/><text x="40.3552%" y="255.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (143,790,457 samples, 0.03%)</title><rect x="40.1052%" y="229" width="0.0259%" height="15" fill="rgb(232,111,31)" fg:x="222928650253" fg:w="143790457"/><text x="40.3552%" y="239.50"></text></g><g><title>core::ops::function::FnOnce::call_once (63,130,223 samples, 0.01%)</title><rect x="40.4910%" y="245" width="0.0114%" height="15" fill="rgb(245,82,37)" fg:x="225072783182" fg:w="63130223"/><text x="40.7410%" y="255.50"></text></g><g><title>crossbeam_epoch::default::HANDLE::_{{constant}}::_{{closure}} (63,130,223 samples, 0.01%)</title><rect x="40.4910%" y="229" width="0.0114%" height="15" fill="rgb(227,149,46)" fg:x="225072783182" fg:w="63130223"/><text x="40.7410%" y="239.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::get_or_init (63,130,223 samples, 0.01%)</title><rect x="40.4910%" y="213" width="0.0114%" height="15" fill="rgb(218,36,50)" fg:x="225072783182" fg:w="63130223"/><text x="40.7410%" y="223.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::_{{closure}} (161,381,109 samples, 0.03%)</title><rect x="40.5779%" y="149" width="0.0290%" height="15" fill="rgb(226,80,48)" fg:x="225556023050" fg:w="161381109"/><text x="40.8279%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (301,928,298 samples, 0.05%)</title><rect x="40.5577%" y="181" width="0.0543%" height="15" fill="rgb(238,224,15)" fg:x="225443904326" fg:w="301928298"/><text x="40.8077%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (281,391,261 samples, 0.05%)</title><rect x="40.5614%" y="165" width="0.0506%" height="15" fill="rgb(241,136,10)" fg:x="225464441363" fg:w="281391261"/><text x="40.8114%" y="175.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (5,049,531,313 samples, 0.91%)</title><rect x="40.6177%" y="181" width="0.9084%" height="15" fill="rgb(208,32,45)" fg:x="225777317864" fg:w="5049531313"/><text x="40.8677%" y="191.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (655,485,572 samples, 0.12%)</title><rect x="41.5282%" y="181" width="0.1179%" height="15" fill="rgb(207,135,9)" fg:x="230838374093" fg:w="655485572"/><text x="41.7782%" y="191.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (1,614,873,687 samples, 0.29%)</title><rect x="41.6827%" y="85" width="0.2905%" height="15" fill="rgb(206,86,44)" fg:x="231697419905" fg:w="1614873687"/><text x="41.9327%" y="95.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (221,700,370 samples, 0.04%)</title><rect x="41.9733%" y="85" width="0.0399%" height="15" fill="rgb(245,177,15)" fg:x="233312293592" fg:w="221700370"/><text x="42.2233%" y="95.50"></text></g><g><title>crossbeam_epoch::epoch::Epoch::pinned (779,124,861 samples, 0.14%)</title><rect x="42.0281%" y="85" width="0.1402%" height="15" fill="rgb(206,64,50)" fg:x="233616895449" fg:w="779124861"/><text x="42.2781%" y="95.50"></text></g><g><title>crossbeam_epoch::default::with_handle (2,904,433,120 samples, 0.52%)</title><rect x="41.6461%" y="181" width="0.5225%" height="15" fill="rgb(234,36,40)" fg:x="231493859665" fg:w="2904433120"/><text x="41.8961%" y="191.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,849,765,726 samples, 0.51%)</title><rect x="41.6560%" y="165" width="0.5127%" height="15" fill="rgb(213,64,8)" fg:x="231548527059" fg:w="2849765726"/><text x="41.9060%" y="175.50"></text></g><g><title>crossbeam_epoch::default::with_handle::_{{closure}} (2,845,851,586 samples, 0.51%)</title><rect x="41.6567%" y="149" width="0.5120%" height="15" fill="rgb(210,75,36)" fg:x="231552441199" fg:w="2845851586"/><text x="41.9067%" y="159.50"></text></g><g><title>crossbeam_epoch::default::pin::_{{closure}} (2,845,851,586 samples, 0.51%)</title><rect x="41.6567%" y="133" width="0.5120%" height="15" fill="rgb(229,88,21)" fg:x="231552441199" fg:w="2845851586"/><text x="41.9067%" y="143.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (2,845,851,586 samples, 0.51%)</title><rect x="41.6567%" y="117" width="0.5120%" height="15" fill="rgb(252,204,47)" fg:x="231552441199" fg:w="2845851586"/><text x="41.9067%" y="127.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (2,845,851,586 samples, 0.51%)</title><rect x="41.6567%" y="101" width="0.5120%" height="15" fill="rgb(208,77,27)" fg:x="231552441199" fg:w="2845851586"/><text x="41.9067%" y="111.50"></text></g><g><title>crossbeam_epoch::epoch::AtomicEpoch::compare_exchange (99,512,098 samples, 0.02%)</title><rect x="42.1686%" y="181" width="0.0179%" height="15" fill="rgb(221,76,26)" fg:x="234398292785" fg:w="99512098"/><text x="42.4186%" y="191.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (99,512,098 samples, 0.02%)</title><rect x="42.1686%" y="165" width="0.0179%" height="15" fill="rgb(225,139,18)" fg:x="234398292785" fg:w="99512098"/><text x="42.4186%" y="175.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (99,512,098 samples, 0.02%)</title><rect x="42.1686%" y="149" width="0.0179%" height="15" fill="rgb(230,137,11)" fg:x="234398292785" fg:w="99512098"/><text x="42.4186%" y="159.50"></text></g><g><title>crossbeam_epoch::epoch::AtomicEpoch::load (324,186,591 samples, 0.06%)</title><rect x="42.1865%" y="181" width="0.0583%" height="15" fill="rgb(212,28,1)" fg:x="234497804883" fg:w="324186591"/><text x="42.4365%" y="191.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (324,186,591 samples, 0.06%)</title><rect x="42.1865%" y="165" width="0.0583%" height="15" fill="rgb(248,164,17)" fg:x="234497804883" fg:w="324186591"/><text x="42.4365%" y="175.50"></text></g><g><title>core::sync::atomic::atomic_load (324,186,591 samples, 0.06%)</title><rect x="42.1865%" y="149" width="0.0583%" height="15" fill="rgb(222,171,42)" fg:x="234497804883" fg:w="324186591"/><text x="42.4365%" y="159.50"></text></g><g><title>crossbeam_epoch::epoch::Epoch::pinned (4,702,698,581 samples, 0.85%)</title><rect x="42.2449%" y="181" width="0.8460%" height="15" fill="rgb(243,84,45)" fg:x="234821991474" fg:w="4702698581"/><text x="42.4949%" y="191.50"></text></g><g><title>crossbeam_epoch::default::with_handle (16,469,328,677 samples, 2.96%)</title><rect x="40.1311%" y="277" width="2.9629%" height="15" fill="rgb(252,49,23)" fg:x="223072440710" fg:w="16469328677"/><text x="40.3811%" y="287.50">cro..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (14,481,924,319 samples, 2.61%)</title><rect x="40.4886%" y="261" width="2.6053%" height="15" fill="rgb(215,19,7)" fg:x="225059845068" fg:w="14481924319"/><text x="40.7386%" y="271.50">st..</text></g><g><title>crossbeam_epoch::default::with_handle::_{{closure}} (14,405,855,982 samples, 2.59%)</title><rect x="40.5023%" y="245" width="2.5916%" height="15" fill="rgb(238,81,41)" fg:x="225135913405" fg:w="14405855982"/><text x="40.7523%" y="255.50">cr..</text></g><g><title>crossbeam_epoch::default::pin::_{{closure}} (14,405,855,982 samples, 2.59%)</title><rect x="40.5023%" y="229" width="2.5916%" height="15" fill="rgb(210,199,37)" fg:x="225135913405" fg:w="14405855982"/><text x="40.7523%" y="239.50">cr..</text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (14,405,855,982 samples, 2.59%)</title><rect x="40.5023%" y="213" width="2.5916%" height="15" fill="rgb(244,192,49)" fg:x="225135913405" fg:w="14405855982"/><text x="40.7523%" y="223.50">cr..</text></g><g><title>crossbeam_epoch::internal::Local::pin (14,405,855,982 samples, 2.59%)</title><rect x="40.5023%" y="197" width="2.5916%" height="15" fill="rgb(226,211,11)" fg:x="225135913405" fg:w="14405855982"/><text x="40.7523%" y="207.50">cr..</text></g><g><title>crossbeam_epoch::internal::Global::collect (205,336,851 samples, 0.04%)</title><rect x="43.0940%" y="277" width="0.0369%" height="15" fill="rgb(236,162,54)" fg:x="239541769387" fg:w="205336851"/><text x="43.3440%" y="287.50"></text></g><g><title>crossbeam_epoch::internal::Global::try_advance (1,654,594,307 samples, 0.30%)</title><rect x="43.1309%" y="277" width="0.2977%" height="15" fill="rgb(220,229,9)" fg:x="239747106238" fg:w="1654594307"/><text x="43.3809%" y="287.50"></text></g><g><title>crossbeam_epoch::sync::queue::Queue&lt;T&gt;::try_pop_if (82,070,364 samples, 0.01%)</title><rect x="43.4286%" y="277" width="0.0148%" height="15" fill="rgb(250,87,22)" fg:x="241401700545" fg:w="82070364"/><text x="43.6786%" y="287.50"></text></g><g><title>crossbeam_epoch::sync::queue::Queue&lt;T&gt;::pop_if_internal (73,361,665 samples, 0.01%)</title><rect x="43.4301%" y="261" width="0.0132%" height="15" fill="rgb(239,43,17)" fg:x="241410409244" fg:w="73361665"/><text x="43.6801%" y="271.50"></text></g><g><title>rayon::iter::extend::&lt;impl rayon::iter::ParallelExtend&lt;T&gt; for alloc::vec::Vec&lt;T&gt;&gt;::par_extend (14,535,537,027 samples, 2.61%)</title><rect x="43.4444%" y="277" width="2.6150%" height="15" fill="rgb(231,177,25)" fg:x="241489619816" fg:w="14535537027"/><text x="43.6944%" y="287.50">ra..</text></g><g><title>core::iter::traits::iterator::Iterator::sum (14,494,297,468 samples, 2.61%)</title><rect x="43.4518%" y="261" width="2.6075%" height="15" fill="rgb(219,179,1)" fg:x="241530859375" fg:w="14494297468"/><text x="43.7018%" y="271.50">co..</text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (14,494,297,468 samples, 2.61%)</title><rect x="43.4518%" y="245" width="2.6075%" height="15" fill="rgb(238,219,53)" fg:x="241530859375" fg:w="14494297468"/><text x="43.7018%" y="255.50">&lt;u..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14,494,297,468 samples, 2.61%)</title><rect x="43.4518%" y="229" width="2.6075%" height="15" fill="rgb(232,167,36)" fg:x="241530859375" fg:w="14494297468"/><text x="43.7018%" y="239.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (14,494,297,468 samples, 2.61%)</title><rect x="43.4518%" y="213" width="2.6075%" height="15" fill="rgb(244,19,51)" fg:x="241530859375" fg:w="14494297468"/><text x="43.7018%" y="223.50">co..</text></g><g><title>&lt;alloc::collections::linked_list::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (14,494,297,468 samples, 2.61%)</title><rect x="43.4518%" y="197" width="2.6075%" height="15" fill="rgb(224,6,22)" fg:x="241530859375" fg:w="14494297468"/><text x="43.7018%" y="207.50">&lt;a..</text></g><g><title>core::option::Option&lt;T&gt;::map (14,463,930,249 samples, 2.60%)</title><rect x="43.4573%" y="181" width="2.6021%" height="15" fill="rgb(224,145,5)" fg:x="241561226594" fg:w="14463930249"/><text x="43.7073%" y="191.50">co..</text></g><g><title>&lt;alloc::collections::linked_list::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next::_{{closure}} (14,447,663,751 samples, 2.60%)</title><rect x="43.4602%" y="165" width="2.5992%" height="15" fill="rgb(234,130,49)" fg:x="241577493092" fg:w="14447663751"/><text x="43.7102%" y="175.50">&lt;a..</text></g><g><title>&lt;rayon::iter::filter::FilterFolder&lt;C,P&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::complete (106,225,733 samples, 0.02%)</title><rect x="46.1407%" y="261" width="0.0191%" height="15" fill="rgb(254,6,2)" fg:x="256477349809" fg:w="106225733"/><text x="46.3907%" y="271.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::complete (106,225,733 samples, 0.02%)</title><rect x="46.1407%" y="245" width="0.0191%" height="15" fill="rgb(208,96,46)" fg:x="256477349809" fg:w="106225733"/><text x="46.3907%" y="255.50"></text></g><g><title>rayon::iter::plumbing::LengthSplitter::try_split (92,736,674 samples, 0.02%)</title><rect x="46.1607%" y="261" width="0.0167%" height="15" fill="rgb(239,3,39)" fg:x="256588600249" fg:w="92736674"/><text x="46.4107%" y="271.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (143,568,042 samples, 0.03%)</title><rect x="46.2204%" y="229" width="0.0258%" height="15" fill="rgb(233,210,1)" fg:x="256920480411" fg:w="143568042"/><text x="46.4704%" y="239.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (124,348,959 samples, 0.02%)</title><rect x="46.2239%" y="213" width="0.0224%" height="15" fill="rgb(244,137,37)" fg:x="256939699494" fg:w="124348959"/><text x="46.4739%" y="223.50"></text></g><g><title>&lt;mvprs::VPLeaf&lt;u8,usize&gt; as mvprs::tree::promoter::TreeNodePromoter&lt;u8,usize&gt;&gt;::promote::_{{closure}}::_{{closure}} (4,106,328,498 samples, 0.74%)</title><rect x="46.2704%" y="213" width="0.7387%" height="15" fill="rgb(240,136,2)" fg:x="257198629417" fg:w="4106328498"/><text x="46.5204%" y="223.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (3,924,414,788 samples, 0.71%)</title><rect x="46.3032%" y="197" width="0.7060%" height="15" fill="rgb(239,18,37)" fg:x="257380543127" fg:w="3924414788"/><text x="46.5532%" y="207.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (3,924,414,788 samples, 0.71%)</title><rect x="46.3032%" y="181" width="0.7060%" height="15" fill="rgb(218,185,22)" fg:x="257380543127" fg:w="3924414788"/><text x="46.5532%" y="191.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3,924,414,788 samples, 0.71%)</title><rect x="46.3032%" y="165" width="0.7060%" height="15" fill="rgb(225,218,4)" fg:x="257380543127" fg:w="3924414788"/><text x="46.5532%" y="175.50"></text></g><g><title>[libc.so.6] (3,090,350,830 samples, 0.56%)</title><rect x="46.4532%" y="149" width="0.5560%" height="15" fill="rgb(230,182,32)" fg:x="258214607085" fg:w="3090350830"/><text x="46.7032%" y="159.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (4,652,802,758 samples, 0.84%)</title><rect x="46.1774%" y="261" width="0.8370%" height="15" fill="rgb(242,56,43)" fg:x="256681336923" fg:w="4652802758"/><text x="46.4274%" y="271.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (4,652,802,758 samples, 0.84%)</title><rect x="46.1774%" y="245" width="0.8370%" height="15" fill="rgb(233,99,24)" fg:x="256681336923" fg:w="4652802758"/><text x="46.4274%" y="255.50"></text></g><g><title>&lt;rayon::iter::filter::FilterFolder&lt;C,P&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume (4,270,091,228 samples, 0.77%)</title><rect x="46.2462%" y="229" width="0.7682%" height="15" fill="rgb(234,209,42)" fg:x="257064048453" fg:w="4270091228"/><text x="46.4962%" y="239.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5,456,166,104 samples, 0.98%)</title><rect x="46.0593%" y="277" width="0.9816%" height="15" fill="rgb(227,7,12)" fg:x="256025156843" fg:w="5456166104"/><text x="46.3093%" y="287.50"></text></g><g><title>rayon_core::join::join_context (147,183,266 samples, 0.03%)</title><rect x="47.0144%" y="261" width="0.0265%" height="15" fill="rgb(245,203,43)" fg:x="261334139681" fg:w="147183266"/><text x="47.2644%" y="271.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (114,940,094 samples, 0.02%)</title><rect x="47.0417%" y="277" width="0.0207%" height="15" fill="rgb(238,205,33)" fg:x="261485540998" fg:w="114940094"/><text x="47.2917%" y="287.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (71,339,102 samples, 0.01%)</title><rect x="48.8365%" y="261" width="0.0128%" height="15" fill="rgb(231,56,7)" fg:x="271462233260" fg:w="71339102"/><text x="49.0865%" y="271.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (76,989,736 samples, 0.01%)</title><rect x="48.8542%" y="261" width="0.0139%" height="15" fill="rgb(244,186,29)" fg:x="271560382675" fg:w="76989736"/><text x="49.1042%" y="271.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::new (163,342,344 samples, 0.03%)</title><rect x="48.8701%" y="261" width="0.0294%" height="15" fill="rgb(234,111,31)" fg:x="271649219606" fg:w="163342344"/><text x="49.1201%" y="271.50"></text></g><g><title>crossbeam_deque::deque::Worker&lt;T&gt;::is_empty (278,965,708 samples, 0.05%)</title><rect x="48.9059%" y="229" width="0.0502%" height="15" fill="rgb(241,149,10)" fg:x="271848128960" fg:w="278965708"/><text x="49.1559%" y="239.50"></text></g><g><title>core::sync::atomic::AtomicIsize::load (278,965,708 samples, 0.05%)</title><rect x="48.9059%" y="213" width="0.0502%" height="15" fill="rgb(249,206,44)" fg:x="271848128960" fg:w="278965708"/><text x="49.1559%" y="223.50"></text></g><g><title>core::sync::atomic::atomic_load (278,965,708 samples, 0.05%)</title><rect x="48.9059%" y="197" width="0.0502%" height="15" fill="rgb(251,153,30)" fg:x="271848128960" fg:w="278965708"/><text x="49.1559%" y="207.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (88,118,631 samples, 0.02%)</title><rect x="48.9585%" y="213" width="0.0159%" height="15" fill="rgb(239,152,38)" fg:x="272140635950" fg:w="88118631"/><text x="49.2085%" y="223.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (88,118,631 samples, 0.02%)</title><rect x="48.9585%" y="197" width="0.0159%" height="15" fill="rgb(249,139,47)" fg:x="272140635950" fg:w="88118631"/><text x="49.2085%" y="207.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (88,118,631 samples, 0.02%)</title><rect x="48.9585%" y="181" width="0.0159%" height="15" fill="rgb(244,64,35)" fg:x="272140635950" fg:w="88118631"/><text x="49.2085%" y="191.50"></text></g><g><title>core::sync::atomic::AtomicIsize::load (62,576,269 samples, 0.01%)</title><rect x="48.9787%" y="213" width="0.0113%" height="15" fill="rgb(216,46,15)" fg:x="272252787533" fg:w="62576269"/><text x="49.2287%" y="223.50"></text></g><g><title>core::sync::atomic::atomic_load (62,576,269 samples, 0.01%)</title><rect x="48.9787%" y="197" width="0.0113%" height="15" fill="rgb(250,74,19)" fg:x="272252787533" fg:w="62576269"/><text x="49.2287%" y="207.50"></text></g><g><title>core::ptr::write_volatile (79,531,844 samples, 0.01%)</title><rect x="48.9900%" y="197" width="0.0143%" height="15" fill="rgb(249,42,33)" fg:x="272315363802" fg:w="79531844"/><text x="49.2400%" y="207.50"></text></g><g><title>crossbeam_deque::deque::Worker&lt;T&gt;::push (282,028,551 samples, 0.05%)</title><rect x="48.9561%" y="229" width="0.0507%" height="15" fill="rgb(242,149,17)" fg:x="272127094668" fg:w="282028551"/><text x="49.2061%" y="239.50"></text></g><g><title>crossbeam_deque::deque::Buffer&lt;T&gt;::write (93,759,417 samples, 0.02%)</title><rect x="48.9900%" y="213" width="0.0169%" height="15" fill="rgb(244,29,21)" fg:x="272315363802" fg:w="93759417"/><text x="49.2400%" y="223.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (2,479,170,122 samples, 0.45%)</title><rect x="48.9004%" y="261" width="0.4460%" height="15" fill="rgb(220,130,37)" fg:x="271817404385" fg:w="2479170122"/><text x="49.1504%" y="271.50"></text></g><g><title>rayon_core::registry::WorkerThread::push (2,473,648,789 samples, 0.45%)</title><rect x="48.9014%" y="245" width="0.4450%" height="15" fill="rgb(211,67,2)" fg:x="271822925718" fg:w="2473648789"/><text x="49.1514%" y="255.50"></text></g><g><title>rayon_core::sleep::Sleep::new_internal_jobs (1,887,451,288 samples, 0.34%)</title><rect x="49.0068%" y="229" width="0.3396%" height="15" fill="rgb(235,68,52)" fg:x="272409123219" fg:w="1887451288"/><text x="49.2568%" y="239.50"></text></g><g><title>rayon_core::sleep::Sleep::new_jobs (1,887,451,288 samples, 0.34%)</title><rect x="49.0068%" y="213" width="0.3396%" height="15" fill="rgb(246,142,3)" fg:x="272409123219" fg:w="1887451288"/><text x="49.2568%" y="223.50"></text></g><g><title>rayon_core::sleep::counters::AtomicCounters::increment_jobs_event_counter_if (1,844,810,397 samples, 0.33%)</title><rect x="49.0145%" y="197" width="0.3319%" height="15" fill="rgb(241,25,7)" fg:x="272451764110" fg:w="1844810397"/><text x="49.2645%" y="207.50"></text></g><g><title>core::ops::function::Fn::call (1,840,446,364 samples, 0.33%)</title><rect x="49.0153%" y="181" width="0.3311%" height="15" fill="rgb(242,119,39)" fg:x="272456128143" fg:w="1840446364"/><text x="49.2653%" y="191.50"></text></g><g><title>rayon_core::sleep::counters::JobsEventCounter::is_sleepy (1,840,446,364 samples, 0.33%)</title><rect x="49.0153%" y="165" width="0.3311%" height="15" fill="rgb(241,98,45)" fg:x="272456128143" fg:w="1840446364"/><text x="49.2653%" y="175.50"></text></g><g><title>rayon_core::latch::SpinLatch::probe (94,348,680 samples, 0.02%)</title><rect x="49.3464%" y="261" width="0.0170%" height="15" fill="rgb(254,28,30)" fg:x="274296574507" fg:w="94348680"/><text x="49.5964%" y="271.50"></text></g><g><title>rayon_core::latch::CoreLatch::probe (94,348,680 samples, 0.02%)</title><rect x="49.3464%" y="245" width="0.0170%" height="15" fill="rgb(241,142,54)" fg:x="274296574507" fg:w="94348680"/><text x="49.5964%" y="255.50"></text></g><g><title>crossbeam_deque::deque::Worker&lt;T&gt;::is_empty (59,065,774 samples, 0.01%)</title><rect x="49.3634%" y="245" width="0.0106%" height="15" fill="rgb(222,85,15)" fg:x="274390923187" fg:w="59065774"/><text x="49.6134%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicIsize::load (57,024,076 samples, 0.01%)</title><rect x="49.3637%" y="229" width="0.0103%" height="15" fill="rgb(210,85,47)" fg:x="274392964885" fg:w="57024076"/><text x="49.6137%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_load (57,024,076 samples, 0.01%)</title><rect x="49.3637%" y="213" width="0.0103%" height="15" fill="rgb(224,206,25)" fg:x="274392964885" fg:w="57024076"/><text x="49.6137%" y="223.50"></text></g><g><title>rayon_core::registry::WorkerThread::push (369,131,823 samples, 0.07%)</title><rect x="49.3634%" y="261" width="0.0664%" height="15" fill="rgb(243,201,19)" fg:x="274390923187" fg:w="369131823"/><text x="49.6134%" y="271.50"></text></g><g><title>rayon_core::sleep::Sleep::new_internal_jobs (266,394,195 samples, 0.05%)</title><rect x="49.3819%" y="245" width="0.0479%" height="15" fill="rgb(236,59,4)" fg:x="274493660815" fg:w="266394195"/><text x="49.6319%" y="255.50"></text></g><g><title>rayon_core::sleep::Sleep::new_jobs (266,394,195 samples, 0.05%)</title><rect x="49.3819%" y="229" width="0.0479%" height="15" fill="rgb(254,179,45)" fg:x="274493660815" fg:w="266394195"/><text x="49.6319%" y="239.50"></text></g><g><title>rayon_core::sleep::counters::AtomicCounters::increment_jobs_event_counter_if (247,774,621 samples, 0.04%)</title><rect x="49.3852%" y="213" width="0.0446%" height="15" fill="rgb(226,14,10)" fg:x="274512280389" fg:w="247774621"/><text x="49.6352%" y="223.50"></text></g><g><title>core::ops::function::Fn::call (247,774,621 samples, 0.04%)</title><rect x="49.3852%" y="197" width="0.0446%" height="15" fill="rgb(244,27,41)" fg:x="274512280389" fg:w="247774621"/><text x="49.6352%" y="207.50"></text></g><g><title>rayon_core::sleep::counters::JobsEventCounter::is_sleepy (247,774,621 samples, 0.04%)</title><rect x="49.3852%" y="181" width="0.0446%" height="15" fill="rgb(235,35,32)" fg:x="274512280389" fg:w="247774621"/><text x="49.6352%" y="191.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (339,083,795 samples, 0.06%)</title><rect x="49.4588%" y="245" width="0.0610%" height="15" fill="rgb(218,68,31)" fg:x="274921285547" fg:w="339083795"/><text x="49.7088%" y="255.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (92,078,289 samples, 0.02%)</title><rect x="49.5198%" y="245" width="0.0166%" height="15" fill="rgb(207,120,37)" fg:x="275260369342" fg:w="92078289"/><text x="49.7698%" y="255.50"></text></g><g><title>rayon_core::registry::WorkerThread::take_local_job (601,338,888 samples, 0.11%)</title><rect x="49.4298%" y="261" width="0.1082%" height="15" fill="rgb(227,98,0)" fg:x="274760055010" fg:w="601338888"/><text x="49.6798%" y="271.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (114,365,466 samples, 0.02%)</title><rect x="49.5380%" y="261" width="0.0206%" height="15" fill="rgb(207,7,3)" fg:x="275361393898" fg:w="114365466"/><text x="49.7880%" y="271.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (14,596,823,714 samples, 2.63%)</title><rect x="47.0623%" y="277" width="2.6260%" height="15" fill="rgb(206,98,19)" fg:x="261600481092" fg:w="14596823714"/><text x="47.3123%" y="287.50">ra..</text></g><g><title>rayon_core::unwind::halt_unwinding (682,214,600 samples, 0.12%)</title><rect x="49.5656%" y="261" width="0.1227%" height="15" fill="rgb(217,5,26)" fg:x="275515090206" fg:w="682214600"/><text x="49.8156%" y="271.50"></text></g><g><title>std::panic::catch_unwind (682,214,600 samples, 0.12%)</title><rect x="49.5656%" y="245" width="0.1227%" height="15" fill="rgb(235,190,38)" fg:x="275515090206" fg:w="682214600"/><text x="49.8156%" y="255.50"></text></g><g><title>std::panicking::try (682,214,600 samples, 0.12%)</title><rect x="49.5656%" y="229" width="0.1227%" height="15" fill="rgb(247,86,24)" fg:x="275515090206" fg:w="682214600"/><text x="49.8156%" y="239.50"></text></g><g><title>std::panicking::try::do_call (682,214,600 samples, 0.12%)</title><rect x="49.5656%" y="213" width="0.1227%" height="15" fill="rgb(205,101,16)" fg:x="275515090206" fg:w="682214600"/><text x="49.8156%" y="223.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (395,172,658 samples, 0.07%)</title><rect x="49.6172%" y="197" width="0.0711%" height="15" fill="rgb(246,168,33)" fg:x="275802132148" fg:w="395172658"/><text x="49.8672%" y="207.50"></text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (395,172,658 samples, 0.07%)</title><rect x="49.6172%" y="181" width="0.0711%" height="15" fill="rgb(231,114,1)" fg:x="275802132148" fg:w="395172658"/><text x="49.8672%" y="191.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (395,172,658 samples, 0.07%)</title><rect x="49.6172%" y="165" width="0.0711%" height="15" fill="rgb(207,184,53)" fg:x="275802132148" fg:w="395172658"/><text x="49.8672%" y="175.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (61,941,533 samples, 0.01%)</title><rect x="49.7006%" y="213" width="0.0111%" height="15" fill="rgb(224,95,51)" fg:x="276265274650" fg:w="61941533"/><text x="49.9506%" y="223.50"></text></g><g><title>std::sync::poison::condvar::Condvar::wait (135,159,891 samples, 0.02%)</title><rect x="49.6883%" y="261" width="0.0243%" height="15" fill="rgb(212,188,45)" fg:x="276197304806" fg:w="135159891"/><text x="49.9383%" y="271.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait (122,086,318 samples, 0.02%)</title><rect x="49.6907%" y="245" width="0.0220%" height="15" fill="rgb(223,154,38)" fg:x="276210378379" fg:w="122086318"/><text x="49.9407%" y="255.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait_optional_timeout (122,086,318 samples, 0.02%)</title><rect x="49.6907%" y="229" width="0.0220%" height="15" fill="rgb(251,22,52)" fg:x="276210378379" fg:w="122086318"/><text x="49.9407%" y="239.50"></text></g><g><title>rayon_core::latch::LockLatch::wait_and_reset (138,956,757 samples, 0.02%)</title><rect x="49.6883%" y="277" width="0.0250%" height="15" fill="rgb(229,209,22)" fg:x="276197304806" fg:w="138956757"/><text x="49.9383%" y="287.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (89,376,847 samples, 0.02%)</title><rect x="49.7355%" y="229" width="0.0161%" height="15" fill="rgb(234,138,34)" fg:x="276459703294" fg:w="89376847"/><text x="49.9855%" y="239.50"></text></g><g><title>rayon_core::registry::Registry::pop_injected_job (127,836,552 samples, 0.02%)</title><rect x="49.7516%" y="229" width="0.0230%" height="15" fill="rgb(212,95,11)" fg:x="276549080141" fg:w="127836552"/><text x="50.0016%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::filter (3,481,157,029 samples, 0.63%)</title><rect x="49.8270%" y="213" width="0.6263%" height="15" fill="rgb(240,179,47)" fg:x="276967860789" fg:w="3481157029"/><text x="50.0770%" y="223.50"></text></g><g><title>core::iter::adapters::filter::Filter&lt;I,P&gt;::new (3,481,157,029 samples, 0.63%)</title><rect x="49.8270%" y="197" width="0.6263%" height="15" fill="rgb(240,163,11)" fg:x="276967860789" fg:w="3481157029"/><text x="50.0770%" y="207.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold (311,216,231 samples, 0.06%)</title><rect x="50.5342%" y="181" width="0.0560%" height="15" fill="rgb(236,37,12)" fg:x="280899278553" fg:w="311216231"/><text x="50.7842%" y="191.50"></text></g><g><title>crossbeam_epoch::default::with_handle (354,982,227 samples, 0.06%)</title><rect x="50.5902%" y="181" width="0.0639%" height="15" fill="rgb(232,164,16)" fg:x="281210494784" fg:w="354982227"/><text x="50.8402%" y="191.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (354,982,227 samples, 0.06%)</title><rect x="50.5902%" y="165" width="0.0639%" height="15" fill="rgb(244,205,15)" fg:x="281210494784" fg:w="354982227"/><text x="50.8402%" y="175.50"></text></g><g><title>core::ops::function::FnOnce::call_once (354,982,227 samples, 0.06%)</title><rect x="50.5902%" y="149" width="0.0639%" height="15" fill="rgb(223,117,47)" fg:x="281210494784" fg:w="354982227"/><text x="50.8402%" y="159.50"></text></g><g><title>crossbeam_epoch::default::HANDLE::_{{constant}}::_{{closure}} (354,982,227 samples, 0.06%)</title><rect x="50.5902%" y="133" width="0.0639%" height="15" fill="rgb(244,107,35)" fg:x="281210494784" fg:w="354982227"/><text x="50.8402%" y="143.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::get_or_init (354,982,227 samples, 0.06%)</title><rect x="50.5902%" y="117" width="0.0639%" height="15" fill="rgb(205,140,8)" fg:x="281210494784" fg:w="354982227"/><text x="50.8402%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,121,536,280 samples, 0.20%)</title><rect x="50.4532%" y="197" width="0.2018%" height="15" fill="rgb(228,84,46)" fg:x="280449017818" fg:w="1121536280"/><text x="50.7032%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (1,347,606,173 samples, 0.24%)</title><rect x="50.4532%" y="213" width="0.2424%" height="15" fill="rgb(254,188,9)" fg:x="280449017818" fg:w="1347606173"/><text x="50.7032%" y="223.50"></text></g><g><title>core::ops::control_flow::ControlFlow&lt;B,C&gt;::break_value (226,069,893 samples, 0.04%)</title><rect x="50.6550%" y="197" width="0.0407%" height="15" fill="rgb(206,112,54)" fg:x="281570554098" fg:w="226069893"/><text x="50.9050%" y="207.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (81,216,028 samples, 0.01%)</title><rect x="50.8156%" y="181" width="0.0146%" height="15" fill="rgb(216,84,49)" fg:x="282463069534" fg:w="81216028"/><text x="51.0656%" y="191.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work (6,403,568,729 samples, 1.15%)</title><rect x="49.7178%" y="277" width="1.1520%" height="15" fill="rgb(214,194,35)" fg:x="276361071199" fg:w="6403568729"/><text x="49.9678%" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (6,402,306,882 samples, 1.15%)</title><rect x="49.7180%" y="261" width="1.1518%" height="15" fill="rgb(249,28,3)" fg:x="276362333046" fg:w="6402306882"/><text x="49.9680%" y="271.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work::_{{closure}} (6,304,936,634 samples, 1.13%)</title><rect x="49.7355%" y="245" width="1.1343%" height="15" fill="rgb(222,56,52)" fg:x="276459703294" fg:w="6304936634"/><text x="49.9855%" y="255.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal (6,087,723,235 samples, 1.10%)</title><rect x="49.7746%" y="229" width="1.0952%" height="15" fill="rgb(245,217,50)" fg:x="276676916693" fg:w="6087723235"/><text x="50.0246%" y="239.50"></text></g><g><title>rayon_core::registry::XorShift64Star::next_usize (968,015,937 samples, 0.17%)</title><rect x="50.6957%" y="213" width="0.1741%" height="15" fill="rgb(213,201,24)" fg:x="281796623991" fg:w="968015937"/><text x="50.9457%" y="223.50"></text></g><g><title>rayon_core::registry::XorShift64Star::next (858,902,775 samples, 0.15%)</title><rect x="50.7153%" y="197" width="0.1545%" height="15" fill="rgb(248,116,28)" fg:x="281905737153" fg:w="858902775"/><text x="50.9653%" y="207.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (214,540,056 samples, 0.04%)</title><rect x="50.8312%" y="181" width="0.0386%" height="15" fill="rgb(219,72,43)" fg:x="282550099872" fg:w="214540056"/><text x="51.0812%" y="191.50"></text></g><g><title>rayon_core::registry::in_worker (386,750,711 samples, 0.07%)</title><rect x="50.8706%" y="277" width="0.0696%" height="15" fill="rgb(209,138,14)" fg:x="282769015090" fg:w="386750711"/><text x="51.1206%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::poison::mutex::MutexGuard&lt;bool&gt;&gt; (94,662,968 samples, 0.02%)</title><rect x="50.9432%" y="261" width="0.0170%" height="15" fill="rgb(222,18,33)" fg:x="283172330548" fg:w="94662968"/><text x="51.1932%" y="271.50"></text></g><g><title>&lt;std::sync::poison::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (94,662,968 samples, 0.02%)</title><rect x="50.9432%" y="245" width="0.0170%" height="15" fill="rgb(213,199,7)" fg:x="283172330548" fg:w="94662968"/><text x="51.1932%" y="255.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (91,427,925 samples, 0.02%)</title><rect x="50.9437%" y="229" width="0.0164%" height="15" fill="rgb(250,110,10)" fg:x="283175565591" fg:w="91427925"/><text x="51.1937%" y="239.50"></text></g><g><title>rayon_core::sleep::Sleep::sleep (128,817,774 samples, 0.02%)</title><rect x="50.9402%" y="277" width="0.0232%" height="15" fill="rgb(248,123,6)" fg:x="283155765801" fg:w="128817774"/><text x="51.1902%" y="287.50"></text></g><g><title>std::sync::poison::mutex::MutexGuard&lt;T&gt;::new (319,728,493 samples, 0.06%)</title><rect x="50.9788%" y="245" width="0.0575%" height="15" fill="rgb(206,91,31)" fg:x="283370500685" fg:w="319728493"/><text x="51.2288%" y="255.50"></text></g><g><title>std::sync::poison::Flag::guard (319,728,493 samples, 0.06%)</title><rect x="50.9788%" y="229" width="0.0575%" height="15" fill="rgb(211,154,13)" fg:x="283370500685" fg:w="319728493"/><text x="51.2288%" y="239.50"></text></g><g><title>std::thread::panicking (62,462,720 samples, 0.01%)</title><rect x="51.0251%" y="213" width="0.0112%" height="15" fill="rgb(225,148,7)" fg:x="283627766458" fg:w="62462720"/><text x="51.2751%" y="223.50"></text></g><g><title>std::panicking::panicking (62,462,720 samples, 0.01%)</title><rect x="51.0251%" y="197" width="0.0112%" height="15" fill="rgb(220,160,43)" fg:x="283627766458" fg:w="62462720"/><text x="51.2751%" y="207.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (62,462,720 samples, 0.01%)</title><rect x="51.0251%" y="181" width="0.0112%" height="15" fill="rgb(213,52,39)" fg:x="283627766458" fg:w="62462720"/><text x="51.2751%" y="191.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (113,447,365 samples, 0.02%)</title><rect x="51.0415%" y="229" width="0.0204%" height="15" fill="rgb(243,137,7)" fg:x="283719228542" fg:w="113447365"/><text x="51.2915%" y="239.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (108,555,270 samples, 0.02%)</title><rect x="51.0424%" y="213" width="0.0195%" height="15" fill="rgb(230,79,13)" fg:x="283724120637" fg:w="108555270"/><text x="51.2924%" y="223.50"></text></g><g><title>std::sync::poison::mutex::Mutex&lt;T&gt;::lock (463,259,734 samples, 0.08%)</title><rect x="50.9788%" y="261" width="0.0833%" height="15" fill="rgb(247,105,23)" fg:x="283370500685" fg:w="463259734"/><text x="51.2288%" y="271.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (143,531,241 samples, 0.03%)</title><rect x="51.0363%" y="245" width="0.0258%" height="15" fill="rgb(223,179,41)" fg:x="283690229178" fg:w="143531241"/><text x="51.2863%" y="255.50"></text></g><g><title>rayon_core::sleep::Sleep::wake_specific_thread (499,286,786 samples, 0.09%)</title><rect x="50.9729%" y="277" width="0.0898%" height="15" fill="rgb(218,9,34)" fg:x="283337676868" fg:w="499286786"/><text x="51.2229%" y="287.50"></text></g><g><title>[unknown] (132,431,883,976 samples, 23.82%)</title><rect x="27.2439%" y="293" width="23.8247%" height="15" fill="rgb(222,106,8)" fg:x="151437849153" fg:w="132431883976"/><text x="27.4939%" y="303.50">[unknown]</text></g><g><title>__rustc::__rdl_alloc (544,750,084 samples, 0.10%)</title><rect x="51.0686%" y="293" width="0.0980%" height="15" fill="rgb(211,220,0)" fg:x="283869733129" fg:w="544750084"/><text x="51.3186%" y="303.50"></text></g><g><title>__rustc::__rdl_dealloc (451,521,887 samples, 0.08%)</title><rect x="51.1666%" y="293" width="0.0812%" height="15" fill="rgb(229,52,16)" fg:x="284414483213" fg:w="451521887"/><text x="51.4166%" y="303.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (394,942,917 samples, 0.07%)</title><rect x="51.1768%" y="277" width="0.0711%" height="15" fill="rgb(212,155,18)" fg:x="284471062183" fg:w="394942917"/><text x="51.4268%" y="287.50"></text></g><g><title>__rustc::__rust_alloc (736,705,127 samples, 0.13%)</title><rect x="51.2483%" y="293" width="0.1325%" height="15" fill="rgb(242,21,14)" fg:x="284868425728" fg:w="736705127"/><text x="51.4983%" y="303.50"></text></g><g><title>__rustc::__rust_dealloc (131,665,314 samples, 0.02%)</title><rect x="51.3808%" y="293" width="0.0237%" height="15" fill="rgb(222,19,48)" fg:x="285605130855" fg:w="131665314"/><text x="51.6308%" y="303.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (100,218,181 samples, 0.02%)</title><rect x="51.4660%" y="245" width="0.0180%" height="15" fill="rgb(232,45,27)" fg:x="286078319007" fg:w="100218181"/><text x="51.7160%" y="255.50"></text></g><g><title>alloc::raw_vec::layout_array (65,840,897 samples, 0.01%)</title><rect x="51.5007%" y="245" width="0.0118%" height="15" fill="rgb(249,103,42)" fg:x="286271584990" fg:w="65840897"/><text x="51.7507%" y="255.50"></text></g><g><title>core::alloc::layout::Layout::repeat (65,840,897 samples, 0.01%)</title><rect x="51.5007%" y="229" width="0.0118%" height="15" fill="rgb(246,81,33)" fg:x="286271584990" fg:w="65840897"/><text x="51.7507%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (614,908,478 samples, 0.11%)</title><rect x="51.4116%" y="293" width="0.1106%" height="15" fill="rgb(252,33,42)" fg:x="285776283412" fg:w="614908478"/><text x="51.6616%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (341,639,271 samples, 0.06%)</title><rect x="51.4608%" y="277" width="0.0615%" height="15" fill="rgb(209,212,41)" fg:x="286049552619" fg:w="341639271"/><text x="51.7108%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (326,351,436 samples, 0.06%)</title><rect x="51.4635%" y="261" width="0.0587%" height="15" fill="rgb(207,154,6)" fg:x="286064840454" fg:w="326351436"/><text x="51.7135%" y="271.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (237,789,179 samples, 0.04%)</title><rect x="51.6318%" y="277" width="0.0428%" height="15" fill="rgb(223,64,47)" fg:x="287000126360" fg:w="237789179"/><text x="51.8818%" y="287.50"></text></g><g><title>[libc.so.6] (174,901,998 samples, 0.03%)</title><rect x="54.4161%" y="229" width="0.0315%" height="15" fill="rgb(211,161,38)" fg:x="302477117935" fg:w="174901998"/><text x="54.6661%" y="239.50"></text></g><g><title>[libc.so.6] (716,790,638 samples, 0.13%)</title><rect x="54.3198%" y="245" width="0.1290%" height="15" fill="rgb(219,138,40)" fg:x="301941604268" fg:w="716790638"/><text x="54.5698%" y="255.50"></text></g><g><title>[libc.so.6] (10,434,083,256 samples, 1.88%)</title><rect x="52.5718%" y="261" width="1.8771%" height="15" fill="rgb(241,228,46)" fg:x="292225352843" fg:w="10434083256"/><text x="52.8218%" y="271.50">[..</text></g><g><title>malloc (15,397,082,535 samples, 2.77%)</title><rect x="51.6819%" y="277" width="2.7700%" height="15" fill="rgb(223,209,38)" fg:x="287278751299" fg:w="15397082535"/><text x="51.9319%" y="287.50">ma..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (58,839,272 samples, 0.01%)</title><rect x="54.4519%" y="277" width="0.0106%" height="15" fill="rgb(236,164,45)" fg:x="302675833834" fg:w="58839272"/><text x="54.7019%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (16,439,739,291 samples, 2.96%)</title><rect x="51.5239%" y="293" width="2.9575%" height="15" fill="rgb(231,15,5)" fg:x="286400158239" fg:w="16439739291"/><text x="51.7739%" y="303.50">all..</text></g><g><title>cfree (581,477,036 samples, 0.10%)</title><rect x="54.4827%" y="293" width="0.1046%" height="15" fill="rgb(252,35,15)" fg:x="302847023480" fg:w="581477036"/><text x="54.7327%" y="303.50"></text></g><g><title>[libc.so.6] (581,477,036 samples, 0.10%)</title><rect x="54.4827%" y="277" width="0.1046%" height="15" fill="rgb(248,181,18)" fg:x="302847023480" fg:w="581477036"/><text x="54.7327%" y="287.50"></text></g><g><title>crossbeam_deque::deque::Injector&lt;T&gt;::steal (1,144,480,870 samples, 0.21%)</title><rect x="54.6044%" y="293" width="0.2059%" height="15" fill="rgb(233,39,42)" fg:x="303523820442" fg:w="1144480870"/><text x="54.8544%" y="303.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (561,057,685 samples, 0.10%)</title><rect x="54.7094%" y="277" width="0.1009%" height="15" fill="rgb(238,110,33)" fg:x="304107243627" fg:w="561057685"/><text x="54.9594%" y="287.50"></text></g><g><title>core::sync::atomic::atomic_load (561,057,685 samples, 0.10%)</title><rect x="54.7094%" y="261" width="0.1009%" height="15" fill="rgb(233,195,10)" fg:x="304107243627" fg:w="561057685"/><text x="54.9594%" y="271.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1,337,277,954 samples, 0.24%)</title><rect x="56.8002%" y="277" width="0.2406%" height="15" fill="rgb(254,105,3)" fg:x="315729215724" fg:w="1337277954"/><text x="57.0502%" y="287.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (1,337,277,954 samples, 0.24%)</title><rect x="56.8002%" y="261" width="0.2406%" height="15" fill="rgb(221,225,9)" fg:x="315729215724" fg:w="1337277954"/><text x="57.0502%" y="271.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1,337,277,954 samples, 0.24%)</title><rect x="56.8002%" y="245" width="0.2406%" height="15" fill="rgb(224,227,45)" fg:x="315729215724" fg:w="1337277954"/><text x="57.0502%" y="255.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_sub (1,480,320,013 samples, 0.27%)</title><rect x="57.0423%" y="277" width="0.2663%" height="15" fill="rgb(229,198,43)" fg:x="317075223812" fg:w="1480320013"/><text x="57.2923%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::as_ref (3,391,932,782 samples, 0.61%)</title><rect x="57.3087%" y="245" width="0.6102%" height="15" fill="rgb(206,209,35)" fg:x="318555543825" fg:w="3391932782"/><text x="57.5587%" y="255.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (150,169,291 samples, 0.03%)</title><rect x="58.5268%" y="229" width="0.0270%" height="15" fill="rgb(245,195,53)" fg:x="325326747563" fg:w="150169291"/><text x="58.7768%" y="239.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (150,169,291 samples, 0.03%)</title><rect x="58.5268%" y="213" width="0.0270%" height="15" fill="rgb(240,92,26)" fg:x="325326747563" fg:w="150169291"/><text x="58.7768%" y="223.50"></text></g><g><title>core::mem::replace (150,169,291 samples, 0.03%)</title><rect x="58.5268%" y="197" width="0.0270%" height="15" fill="rgb(207,40,23)" fg:x="325326747563" fg:w="150169291"/><text x="58.7768%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::guard::Guard&gt; (6,926,117,470 samples, 1.25%)</title><rect x="57.3087%" y="277" width="1.2460%" height="15" fill="rgb(223,111,35)" fg:x="318555543825" fg:w="6926117470"/><text x="57.5587%" y="287.50"></text></g><g><title>&lt;crossbeam_epoch::guard::Guard as core::ops::drop::Drop&gt;::drop (6,926,117,470 samples, 1.25%)</title><rect x="57.3087%" y="261" width="1.2460%" height="15" fill="rgb(229,147,28)" fg:x="318555543825" fg:w="6926117470"/><text x="57.5587%" y="271.50"></text></g><g><title>crossbeam_epoch::internal::Local::unpin (3,534,184,688 samples, 0.64%)</title><rect x="57.9189%" y="245" width="0.6358%" height="15" fill="rgb(211,29,28)" fg:x="321947476607" fg:w="3534184688"/><text x="58.1689%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicIsize::load (1,495,829,101 samples, 0.27%)</title><rect x="58.5548%" y="277" width="0.2691%" height="15" fill="rgb(228,72,33)" fg:x="325482525239" fg:w="1495829101"/><text x="58.8048%" y="287.50"></text></g><g><title>core::sync::atomic::atomic_load (1,495,829,101 samples, 0.27%)</title><rect x="58.5548%" y="261" width="0.2691%" height="15" fill="rgb(205,214,31)" fg:x="325482525239" fg:w="1495829101"/><text x="58.8048%" y="271.50"></text></g><g><title>core::ptr::read_volatile (1,002,052,475 samples, 0.18%)</title><rect x="58.8239%" y="261" width="0.1803%" height="15" fill="rgb(224,111,15)" fg:x="326978354340" fg:w="1002052475"/><text x="59.0739%" y="271.50"></text></g><g><title>crossbeam_deque::deque::Buffer&lt;T&gt;::read (1,317,488,597 samples, 0.24%)</title><rect x="58.8239%" y="277" width="0.2370%" height="15" fill="rgb(253,21,26)" fg:x="326978354340" fg:w="1317488597"/><text x="59.0739%" y="287.50"></text></g><g><title>crossbeam_deque::deque::Buffer&lt;T&gt;::at (315,436,122 samples, 0.06%)</title><rect x="59.0042%" y="261" width="0.0567%" height="15" fill="rgb(245,139,43)" fg:x="327980406815" fg:w="315436122"/><text x="59.2542%" y="271.50"></text></g><g><title>crossbeam_epoch::atomic::Atomic&lt;T&gt;::load (84,201,608 samples, 0.02%)</title><rect x="59.0610%" y="277" width="0.0151%" height="15" fill="rgb(252,170,7)" fg:x="328295842937" fg:w="84201608"/><text x="59.3110%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (84,201,608 samples, 0.02%)</title><rect x="59.0610%" y="261" width="0.0151%" height="15" fill="rgb(231,118,14)" fg:x="328295842937" fg:w="84201608"/><text x="59.3110%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_load (84,201,608 samples, 0.02%)</title><rect x="59.0610%" y="245" width="0.0151%" height="15" fill="rgb(238,83,0)" fg:x="328295842937" fg:w="84201608"/><text x="59.3110%" y="255.50"></text></g><g><title>crossbeam_epoch::atomic::Shared&lt;T&gt;::deref (346,500,015 samples, 0.06%)</title><rect x="59.0761%" y="277" width="0.0623%" height="15" fill="rgb(221,39,39)" fg:x="328380044545" fg:w="346500015"/><text x="59.3261%" y="287.50"></text></g><g><title>crossbeam_epoch::atomic::decompose_tag (346,500,015 samples, 0.06%)</title><rect x="59.0761%" y="261" width="0.0623%" height="15" fill="rgb(222,119,46)" fg:x="328380044545" fg:w="346500015"/><text x="59.3261%" y="271.50"></text></g><g><title>crossbeam_epoch::default::is_pinned (17,518,257,335 samples, 3.15%)</title><rect x="59.1384%" y="277" width="3.1516%" height="15" fill="rgb(222,165,49)" fg:x="328726544560" fg:w="17518257335"/><text x="59.3884%" y="287.50">cro..</text></g><g><title>crossbeam_epoch::default::with_handle (17,518,257,335 samples, 3.15%)</title><rect x="59.1384%" y="261" width="3.1516%" height="15" fill="rgb(219,113,52)" fg:x="328726544560" fg:w="17518257335"/><text x="59.3884%" y="271.50">cro..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (11,285,036,551 samples, 2.03%)</title><rect x="60.2598%" y="245" width="2.0302%" height="15" fill="rgb(214,7,15)" fg:x="334959765344" fg:w="11285036551"/><text x="60.5098%" y="255.50">s..</text></g><g><title>core::ops::function::FnOnce::call_once (10,499,480,671 samples, 1.89%)</title><rect x="60.4011%" y="229" width="1.8889%" height="15" fill="rgb(235,32,4)" fg:x="335745321224" fg:w="10499480671"/><text x="60.6511%" y="239.50">c..</text></g><g><title>crossbeam_epoch::default::HANDLE::_{{constant}}::_{{closure}} (10,499,480,671 samples, 1.89%)</title><rect x="60.4011%" y="213" width="1.8889%" height="15" fill="rgb(238,90,54)" fg:x="335745321224" fg:w="10499480671"/><text x="60.6511%" y="223.50">c..</text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::get_or_init (10,499,480,671 samples, 1.89%)</title><rect x="60.4011%" y="197" width="1.8889%" height="15" fill="rgb(213,208,19)" fg:x="335745321224" fg:w="10499480671"/><text x="60.6511%" y="207.50">s..</text></g><g><title>crossbeam_epoch::internal::Global::try_advance (102,628,553 samples, 0.02%)</title><rect x="62.3489%" y="261" width="0.0185%" height="15" fill="rgb(233,156,4)" fg:x="346571943908" fg:w="102628553"/><text x="62.5989%" y="271.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (42,044,182,441 samples, 7.56%)</title><rect x="54.8103%" y="293" width="7.5638%" height="15" fill="rgb(207,194,5)" fg:x="304668301312" fg:w="42044182441"/><text x="55.0603%" y="303.50">crossbeam_..</text></g><g><title>crossbeam_epoch::default::pin (467,681,858 samples, 0.08%)</title><rect x="62.2900%" y="277" width="0.0841%" height="15" fill="rgb(206,111,30)" fg:x="346244801895" fg:w="467681858"/><text x="62.5400%" y="287.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (7,347,018,936 samples, 1.32%)</title><rect x="62.6837%" y="277" width="1.3217%" height="15" fill="rgb(243,70,54)" fg:x="348433225033" fg:w="7347018936"/><text x="62.9337%" y="287.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (7,347,018,936 samples, 1.32%)</title><rect x="62.6837%" y="261" width="1.3217%" height="15" fill="rgb(242,28,8)" fg:x="348433225033" fg:w="7347018936"/><text x="62.9337%" y="271.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (7,347,018,936 samples, 1.32%)</title><rect x="62.6837%" y="245" width="1.3217%" height="15" fill="rgb(219,106,18)" fg:x="348433225033" fg:w="7347018936"/><text x="62.9337%" y="255.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_sub (575,181,822 samples, 0.10%)</title><rect x="64.0076%" y="277" width="0.1035%" height="15" fill="rgb(244,222,10)" fg:x="355792455405" fg:w="575181822"/><text x="64.2576%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicIsize::compare_exchange (252,146,911 samples, 0.05%)</title><rect x="64.1121%" y="277" width="0.0454%" height="15" fill="rgb(236,179,52)" fg:x="356372989340" fg:w="252146911"/><text x="64.3621%" y="287.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (252,146,911 samples, 0.05%)</title><rect x="64.1121%" y="261" width="0.0454%" height="15" fill="rgb(213,23,39)" fg:x="356372989340" fg:w="252146911"/><text x="64.3621%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicIsize::load (2,060,808,294 samples, 0.37%)</title><rect x="64.1574%" y="277" width="0.3707%" height="15" fill="rgb(238,48,10)" fg:x="356625136251" fg:w="2060808294"/><text x="64.4074%" y="287.50"></text></g><g><title>core::sync::atomic::atomic_load (2,060,808,294 samples, 0.37%)</title><rect x="64.1574%" y="261" width="0.3707%" height="15" fill="rgb(251,196,23)" fg:x="356625136251" fg:w="2060808294"/><text x="64.4074%" y="271.50"></text></g><g><title>core::ptr::read_volatile (519,988,730 samples, 0.09%)</title><rect x="64.5327%" y="261" width="0.0935%" height="15" fill="rgb(250,152,24)" fg:x="358711004414" fg:w="519988730"/><text x="64.7827%" y="271.50"></text></g><g><title>crossbeam_deque::deque::Worker&lt;T&gt;::pop (12,519,774,696 samples, 2.25%)</title><rect x="62.3741%" y="293" width="2.2523%" height="15" fill="rgb(209,150,17)" fg:x="346712483753" fg:w="12519774696"/><text x="62.6241%" y="303.50">c..</text></g><g><title>crossbeam_deque::deque::Buffer&lt;T&gt;::read (521,254,035 samples, 0.09%)</title><rect x="64.5327%" y="277" width="0.0938%" height="15" fill="rgb(234,202,34)" fg:x="358711004414" fg:w="521254035"/><text x="64.7827%" y="287.50"></text></g><g><title>core::ops::function::FnOnce::call_once (7,160,475,885 samples, 1.29%)</title><rect x="64.9888%" y="261" width="1.2882%" height="15" fill="rgb(253,148,53)" fg:x="361246392919" fg:w="7160475885"/><text x="65.2388%" y="271.50"></text></g><g><title>crossbeam_epoch::default::HANDLE::_{{constant}}::_{{closure}} (7,160,475,885 samples, 1.29%)</title><rect x="64.9888%" y="245" width="1.2882%" height="15" fill="rgb(218,129,16)" fg:x="361246392919" fg:w="7160475885"/><text x="65.2388%" y="255.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::get_or_init (7,160,475,885 samples, 1.29%)</title><rect x="64.9888%" y="229" width="1.2882%" height="15" fill="rgb(216,85,19)" fg:x="361246392919" fg:w="7160475885"/><text x="65.2388%" y="239.50"></text></g><g><title>&lt;core::num::wrapping::Wrapping&lt;usize&gt; as core::ops::arith::Add&gt;::add (302,560,972 samples, 0.05%)</title><rect x="66.7419%" y="197" width="0.0544%" height="15" fill="rgb(235,228,7)" fg:x="370991218760" fg:w="302560972"/><text x="66.9919%" y="207.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add (302,560,972 samples, 0.05%)</title><rect x="66.7419%" y="181" width="0.0544%" height="15" fill="rgb(245,175,0)" fg:x="370991218760" fg:w="302560972"/><text x="66.9919%" y="191.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (28,509,735,570 samples, 5.13%)</title><rect x="66.7979%" y="197" width="5.1289%" height="15" fill="rgb(208,168,36)" fg:x="371302449432" fg:w="28509735570"/><text x="67.0479%" y="207.50">core::..</text></g><g><title>core::cell::Cell&lt;T&gt;::set (103,290,467 samples, 0.02%)</title><rect x="71.9269%" y="197" width="0.0186%" height="15" fill="rgb(246,171,24)" fg:x="399812185002" fg:w="103290467"/><text x="72.1769%" y="207.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (103,290,467 samples, 0.02%)</title><rect x="71.9269%" y="181" width="0.0186%" height="15" fill="rgb(215,142,24)" fg:x="399812185002" fg:w="103290467"/><text x="72.1769%" y="191.50"></text></g><g><title>core::mem::replace (103,290,467 samples, 0.02%)</title><rect x="71.9269%" y="165" width="0.0186%" height="15" fill="rgb(250,187,7)" fg:x="399812185002" fg:w="103290467"/><text x="72.1769%" y="175.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (4,373,595,640 samples, 0.79%)</title><rect x="71.9454%" y="197" width="0.7868%" height="15" fill="rgb(228,66,33)" fg:x="399915475469" fg:w="4373595640"/><text x="72.1954%" y="207.50"></text></g><g><title>core::intrinsics::unlikely (452,212,979 samples, 0.08%)</title><rect x="72.6509%" y="181" width="0.0814%" height="15" fill="rgb(234,215,21)" fg:x="403836858130" fg:w="452212979"/><text x="72.9009%" y="191.50"></text></g><g><title>crossbeam_epoch::epoch::AtomicEpoch::compare_exchange (871,811,524 samples, 0.16%)</title><rect x="72.7359%" y="197" width="0.1568%" height="15" fill="rgb(222,191,20)" fg:x="404309161236" fg:w="871811524"/><text x="72.9859%" y="207.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (871,811,524 samples, 0.16%)</title><rect x="72.7359%" y="181" width="0.1568%" height="15" fill="rgb(245,79,54)" fg:x="404309161236" fg:w="871811524"/><text x="72.9859%" y="191.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (871,811,524 samples, 0.16%)</title><rect x="72.7359%" y="165" width="0.1568%" height="15" fill="rgb(240,10,37)" fg:x="404309161236" fg:w="871811524"/><text x="72.9859%" y="175.50"></text></g><g><title>crossbeam_epoch::epoch::AtomicEpoch::load (963,572,514 samples, 0.17%)</title><rect x="72.8927%" y="197" width="0.1733%" height="15" fill="rgb(214,192,32)" fg:x="405180972760" fg:w="963572514"/><text x="73.1427%" y="207.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (963,572,514 samples, 0.17%)</title><rect x="72.8927%" y="181" width="0.1733%" height="15" fill="rgb(209,36,54)" fg:x="405180972760" fg:w="963572514"/><text x="73.1427%" y="191.50"></text></g><g><title>core::sync::atomic::atomic_load (963,572,514 samples, 0.17%)</title><rect x="72.8927%" y="165" width="0.1733%" height="15" fill="rgb(220,10,11)" fg:x="405180972760" fg:w="963572514"/><text x="73.1427%" y="175.50"></text></g><g><title>crossbeam_epoch::epoch::Epoch::pinned (13,545,141,617 samples, 2.44%)</title><rect x="73.0661%" y="197" width="2.4368%" height="15" fill="rgb(221,106,17)" fg:x="406144545274" fg:w="13545141617"/><text x="73.3161%" y="207.50">cr..</text></g><g><title>crossbeam_epoch::internal::Local::global (68,920,303 samples, 0.01%)</title><rect x="75.5029%" y="197" width="0.0124%" height="15" fill="rgb(251,142,44)" fg:x="419689686891" fg:w="68920303"/><text x="75.7529%" y="207.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (68,920,303 samples, 0.01%)</title><rect x="75.5029%" y="181" width="0.0124%" height="15" fill="rgb(238,13,15)" fg:x="419689686891" fg:w="68920303"/><text x="75.7529%" y="191.50"></text></g><g><title>crossbeam_epoch::default::with_handle (60,535,739,337 samples, 10.89%)</title><rect x="64.6265%" y="293" width="10.8905%" height="15" fill="rgb(208,107,27)" fg:x="359232258449" fg:w="60535739337"/><text x="64.8765%" y="303.50">crossbeam_epoch:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (58,551,551,482 samples, 10.53%)</title><rect x="64.9834%" y="277" width="10.5335%" height="15" fill="rgb(205,136,37)" fg:x="361216446304" fg:w="58551551482"/><text x="65.2334%" y="287.50">std::thread::lo..</text></g><g><title>crossbeam_epoch::default::with_handle::_{{closure}} (51,361,128,982 samples, 9.24%)</title><rect x="66.2770%" y="261" width="9.2400%" height="15" fill="rgb(250,205,27)" fg:x="368406868804" fg:w="51361128982"/><text x="66.5270%" y="271.50">crossbeam_epo..</text></g><g><title>crossbeam_epoch::default::pin::_{{closure}} (51,361,128,982 samples, 9.24%)</title><rect x="66.2770%" y="245" width="9.2400%" height="15" fill="rgb(210,80,43)" fg:x="368406868804" fg:w="51361128982"/><text x="66.5270%" y="255.50">crossbeam_epo..</text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (51,361,128,982 samples, 9.24%)</title><rect x="66.2770%" y="229" width="9.2400%" height="15" fill="rgb(247,160,36)" fg:x="368406868804" fg:w="51361128982"/><text x="66.5270%" y="239.50">crossbeam_epo..</text></g><g><title>crossbeam_epoch::internal::Local::pin (51,361,128,982 samples, 9.24%)</title><rect x="66.2770%" y="213" width="9.2400%" height="15" fill="rgb(234,13,49)" fg:x="368406868804" fg:w="51361128982"/><text x="66.5270%" y="223.50">crossbeam_epo..</text></g><g><title>crossbeam_epoch::default::with_handle (66,014,192 samples, 0.01%)</title><rect x="75.5920%" y="277" width="0.0119%" height="15" fill="rgb(234,122,0)" fg:x="420185327920" fg:w="66014192"/><text x="75.8420%" y="287.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (64,918,211 samples, 0.01%)</title><rect x="75.5922%" y="261" width="0.0117%" height="15" fill="rgb(207,146,38)" fg:x="420186423901" fg:w="64918211"/><text x="75.8422%" y="271.50"></text></g><g><title>crossbeam_epoch::default::with_handle::_{{closure}} (64,918,211 samples, 0.01%)</title><rect x="75.5922%" y="245" width="0.0117%" height="15" fill="rgb(207,177,25)" fg:x="420186423901" fg:w="64918211"/><text x="75.8422%" y="255.50"></text></g><g><title>crossbeam_epoch::default::pin::_{{closure}} (64,918,211 samples, 0.01%)</title><rect x="75.5922%" y="229" width="0.0117%" height="15" fill="rgb(211,178,42)" fg:x="420186423901" fg:w="64918211"/><text x="75.8422%" y="239.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (64,918,211 samples, 0.01%)</title><rect x="75.5922%" y="213" width="0.0117%" height="15" fill="rgb(230,69,54)" fg:x="420186423901" fg:w="64918211"/><text x="75.8422%" y="223.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (64,918,211 samples, 0.01%)</title><rect x="75.5922%" y="197" width="0.0117%" height="15" fill="rgb(214,135,41)" fg:x="420186423901" fg:w="64918211"/><text x="75.8422%" y="207.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (543,612,550 samples, 0.10%)</title><rect x="75.5169%" y="293" width="0.0978%" height="15" fill="rgb(237,67,25)" fg:x="419767997786" fg:w="543612550"/><text x="75.7669%" y="303.50"></text></g><g><title>&lt;crossbeam_epoch::sync::list::Iter&lt;T,C&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,616,822,923 samples, 0.65%)</title><rect x="77.2039%" y="277" width="0.6507%" height="15" fill="rgb(222,189,50)" fg:x="429144847691" fg:w="3616822923"/><text x="77.4539%" y="287.50"></text></g><g><title>crossbeam_epoch::atomic::Shared&lt;T&gt;::tag (3,535,303,497 samples, 0.64%)</title><rect x="77.2185%" y="261" width="0.6360%" height="15" fill="rgb(245,148,34)" fg:x="429226367117" fg:w="3535303497"/><text x="77.4685%" y="271.50"></text></g><g><title>crossbeam_epoch::atomic::decompose_tag (3,535,303,497 samples, 0.64%)</title><rect x="77.2185%" y="245" width="0.6360%" height="15" fill="rgb(222,29,6)" fg:x="429226367117" fg:w="3535303497"/><text x="77.4685%" y="255.50"></text></g><g><title>core::sync::atomic::fence (1,086,228,383 samples, 0.20%)</title><rect x="77.8545%" y="277" width="0.1954%" height="15" fill="rgb(221,189,43)" fg:x="432761670614" fg:w="1086228383"/><text x="78.1045%" y="287.50"></text></g><g><title>crossbeam_epoch::epoch::AtomicEpoch::store (56,212,708 samples, 0.01%)</title><rect x="78.0499%" y="277" width="0.0101%" height="15" fill="rgb(207,36,27)" fg:x="433847898997" fg:w="56212708"/><text x="78.2999%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (56,212,708 samples, 0.01%)</title><rect x="78.0499%" y="261" width="0.0101%" height="15" fill="rgb(217,90,24)" fg:x="433847898997" fg:w="56212708"/><text x="78.2999%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_store (56,212,708 samples, 0.01%)</title><rect x="78.0499%" y="245" width="0.0101%" height="15" fill="rgb(224,66,35)" fg:x="433847898997" fg:w="56212708"/><text x="78.2999%" y="255.50"></text></g><g><title>crossbeam_epoch::internal::Global::try_advance (13,669,196,002 samples, 2.46%)</title><rect x="75.6147%" y="293" width="2.4591%" height="15" fill="rgb(221,13,50)" fg:x="420311610336" fg:w="13669196002"/><text x="75.8647%" y="303.50">cr..</text></g><g><title>crossbeam_epoch::sync::list::List&lt;T,C&gt;::iter (76,694,633 samples, 0.01%)</title><rect x="78.0601%" y="277" width="0.0138%" height="15" fill="rgb(236,68,49)" fg:x="433904111705" fg:w="76694633"/><text x="78.3101%" y="287.50"></text></g><g><title>[libc.so.6] (5,778,250,877 samples, 1.04%)</title><rect x="78.1398%" y="277" width="1.0395%" height="15" fill="rgb(229,146,28)" fg:x="434347329685" fg:w="5778250877"/><text x="78.3898%" y="287.50"></text></g><g><title>crossbeam_epoch::internal::Global::try_advance (145,623,374 samples, 0.03%)</title><rect x="79.1918%" y="277" width="0.0262%" height="15" fill="rgb(225,31,38)" fg:x="440194772596" fg:w="145623374"/><text x="79.4418%" y="287.50"></text></g><g><title>crossbeam_epoch::sync::queue::Queue&lt;T&gt;::pop_if_internal (276,756,833 samples, 0.05%)</title><rect x="79.2179%" y="277" width="0.0498%" height="15" fill="rgb(250,208,3)" fg:x="440340395970" fg:w="276756833"/><text x="79.4679%" y="287.50"></text></g><g><title>crossbeam_epoch::atomic::Shared&lt;T&gt;::deref (92,627,187 samples, 0.02%)</title><rect x="79.2511%" y="261" width="0.0167%" height="15" fill="rgb(246,54,23)" fg:x="440524525616" fg:w="92627187"/><text x="79.5011%" y="271.50"></text></g><g><title>crossbeam_epoch::atomic::decompose_tag (92,627,187 samples, 0.02%)</title><rect x="79.2511%" y="245" width="0.0167%" height="15" fill="rgb(243,76,11)" fg:x="440524525616" fg:w="92627187"/><text x="79.5011%" y="255.50"></text></g><g><title>crossbeam_epoch::sync::queue::Queue&lt;T&gt;::try_pop_if (6,684,879,873 samples, 1.20%)</title><rect x="78.0738%" y="293" width="1.2026%" height="15" fill="rgb(245,21,50)" fg:x="433980806338" fg:w="6684879873"/><text x="78.3238%" y="303.50"></text></g><g><title>malloc (146,484,024 samples, 0.03%)</title><rect x="79.2765%" y="293" width="0.0264%" height="15" fill="rgb(228,9,43)" fg:x="440665686211" fg:w="146484024"/><text x="79.5265%" y="303.50"></text></g><g><title>alloc::collections::linked_list::LinkedList&lt;T,A&gt;::pop_front_node (957,457,788 samples, 0.17%)</title><rect x="79.3894%" y="245" width="0.1722%" height="15" fill="rgb(208,100,47)" fg:x="441293401059" fg:w="957457788"/><text x="79.6394%" y="255.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (955,784,751 samples, 0.17%)</title><rect x="79.3897%" y="229" width="0.1719%" height="15" fill="rgb(232,26,8)" fg:x="441295074096" fg:w="955784751"/><text x="79.6397%" y="239.50"></text></g><g><title>alloc::collections::linked_list::LinkedList&lt;T,A&gt;::pop_front_node::_{{closure}} (898,738,439 samples, 0.16%)</title><rect x="79.4000%" y="213" width="0.1617%" height="15" fill="rgb(216,166,38)" fg:x="441352120408" fg:w="898738439"/><text x="79.6500%" y="223.50"></text></g><g><title>__rustc::__rdl_dealloc (139,185,580 samples, 0.03%)</title><rect x="79.6767%" y="133" width="0.0250%" height="15" fill="rgb(251,202,51)" fg:x="442890315183" fg:w="139185580"/><text x="79.9267%" y="143.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (139,185,580 samples, 0.03%)</title><rect x="79.6767%" y="117" width="0.0250%" height="15" fill="rgb(254,216,34)" fg:x="442890315183" fg:w="139185580"/><text x="79.9267%" y="127.50"></text></g><g><title>&lt;alloc::collections::linked_list::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (7,050,184,799 samples, 1.27%)</title><rect x="79.3894%" y="277" width="1.2683%" height="15" fill="rgb(251,32,27)" fg:x="441293401059" fg:w="7050184799"/><text x="79.6394%" y="287.50"></text></g><g><title>alloc::collections::linked_list::LinkedList&lt;T,A&gt;::pop_front (7,050,184,799 samples, 1.27%)</title><rect x="79.3894%" y="261" width="1.2683%" height="15" fill="rgb(208,127,28)" fg:x="441293401059" fg:w="7050184799"/><text x="79.6394%" y="271.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6,092,727,011 samples, 1.10%)</title><rect x="79.5616%" y="245" width="1.0961%" height="15" fill="rgb(224,137,22)" fg:x="442250858847" fg:w="6092727011"/><text x="79.8116%" y="255.50"></text></g><g><title>core::ops::function::FnOnce::call_once (6,092,727,011 samples, 1.10%)</title><rect x="79.5616%" y="229" width="1.0961%" height="15" fill="rgb(254,70,32)" fg:x="442250858847" fg:w="6092727011"/><text x="79.8116%" y="239.50"></text></g><g><title>alloc::collections::linked_list::Node&lt;T&gt;::into_element (6,092,727,011 samples, 1.10%)</title><rect x="79.5616%" y="213" width="1.0961%" height="15" fill="rgb(229,75,37)" fg:x="442250858847" fg:w="6092727011"/><text x="79.8116%" y="223.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,741,152,387 samples, 1.03%)</title><rect x="79.6249%" y="197" width="1.0328%" height="15" fill="rgb(252,64,23)" fg:x="442602433471" fg:w="5741152387"/><text x="79.8749%" y="207.50"></text></g><g><title>&lt;&amp;A as core::alloc::Allocator&gt;::deallocate (5,741,152,387 samples, 1.03%)</title><rect x="79.6249%" y="181" width="1.0328%" height="15" fill="rgb(232,162,48)" fg:x="442602433471" fg:w="5741152387"/><text x="79.8749%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5,741,152,387 samples, 1.03%)</title><rect x="79.6249%" y="165" width="1.0328%" height="15" fill="rgb(246,160,12)" fg:x="442602433471" fg:w="5741152387"/><text x="79.8749%" y="175.50"></text></g><g><title>alloc::alloc::dealloc (5,741,152,387 samples, 1.03%)</title><rect x="79.6249%" y="149" width="1.0328%" height="15" fill="rgb(247,166,0)" fg:x="442602433471" fg:w="5741152387"/><text x="79.8749%" y="159.50"></text></g><g><title>cfree (5,314,085,095 samples, 0.96%)</title><rect x="79.7017%" y="133" width="0.9560%" height="15" fill="rgb(249,219,21)" fg:x="443029500763" fg:w="5314085095"/><text x="79.9517%" y="143.50"></text></g><g><title>[libc.so.6] (3,382,303,116 samples, 0.61%)</title><rect x="80.0493%" y="117" width="0.6085%" height="15" fill="rgb(205,209,3)" fg:x="444961282742" fg:w="3382303116"/><text x="80.2993%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::capacity (205,752,092 samples, 0.04%)</title><rect x="80.6883%" y="181" width="0.0370%" height="15" fill="rgb(243,44,1)" fg:x="448513643748" fg:w="205752092"/><text x="80.9383%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (260,901,240 samples, 0.05%)</title><rect x="80.6789%" y="245" width="0.0469%" height="15" fill="rgb(206,159,16)" fg:x="448461008759" fg:w="260901240"/><text x="80.9289%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (260,901,240 samples, 0.05%)</title><rect x="80.6789%" y="229" width="0.0469%" height="15" fill="rgb(244,77,30)" fg:x="448461008759" fg:w="260901240"/><text x="80.9289%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (260,901,240 samples, 0.05%)</title><rect x="80.6789%" y="213" width="0.0469%" height="15" fill="rgb(218,69,12)" fg:x="448461008759" fg:w="260901240"/><text x="80.9289%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::needs_to_grow (260,901,240 samples, 0.05%)</title><rect x="80.6789%" y="197" width="0.0469%" height="15" fill="rgb(212,87,7)" fg:x="448461008759" fg:w="260901240"/><text x="80.9289%" y="207.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,436,746,446 samples, 0.26%)</title><rect x="80.7258%" y="245" width="0.2585%" height="15" fill="rgb(245,114,25)" fg:x="448721909999" fg:w="1436746446"/><text x="80.9758%" y="255.50"></text></g><g><title>[libc.so.6] (1,428,208,195 samples, 0.26%)</title><rect x="80.7273%" y="229" width="0.2569%" height="15" fill="rgb(210,61,42)" fg:x="448730448250" fg:w="1428208195"/><text x="80.9773%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1,989,368,371 samples, 0.36%)</title><rect x="80.6577%" y="261" width="0.3579%" height="15" fill="rgb(211,52,33)" fg:x="448343585858" fg:w="1989368371"/><text x="80.9077%" y="271.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (174,297,784 samples, 0.03%)</title><rect x="80.9843%" y="245" width="0.0314%" height="15" fill="rgb(234,58,33)" fg:x="450158656445" fg:w="174297784"/><text x="81.2343%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (2,220,860,196 samples, 0.40%)</title><rect x="80.6577%" y="277" width="0.3995%" height="15" fill="rgb(220,115,36)" fg:x="448343585858" fg:w="2220860196"/><text x="80.9077%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (231,491,825 samples, 0.04%)</title><rect x="81.0156%" y="261" width="0.0416%" height="15" fill="rgb(243,153,54)" fg:x="450332954229" fg:w="231491825"/><text x="81.2656%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (15,726,072,137 samples, 2.83%)</title><rect x="81.0575%" y="213" width="2.8291%" height="15" fill="rgb(251,47,18)" fg:x="450565488461" fg:w="15726072137"/><text x="81.3075%" y="223.50">&lt;a..</text></g><g><title>alloc::alloc::dealloc (15,726,072,137 samples, 2.83%)</title><rect x="81.0575%" y="197" width="2.8291%" height="15" fill="rgb(242,102,42)" fg:x="450565488461" fg:w="15726072137"/><text x="81.3075%" y="207.50">al..</text></g><g><title>cfree (15,643,712,482 samples, 2.81%)</title><rect x="81.0723%" y="181" width="2.8143%" height="15" fill="rgb(234,31,38)" fg:x="450647848116" fg:w="15643712482"/><text x="81.3223%" y="191.50">cf..</text></g><g><title>[libc.so.6] (13,740,360,854 samples, 2.47%)</title><rect x="81.4147%" y="165" width="2.4719%" height="15" fill="rgb(221,117,51)" fg:x="452551199744" fg:w="13740360854"/><text x="81.6647%" y="175.50">[l..</text></g><g><title>[libc.so.6] (4,288,095,026 samples, 0.77%)</title><rect x="83.1152%" y="149" width="0.7714%" height="15" fill="rgb(212,20,18)" fg:x="462003465572" fg:w="4288095026"/><text x="83.3652%" y="159.50"></text></g><g><title>[libc.so.6] (1,774,328,005 samples, 0.32%)</title><rect x="83.5674%" y="133" width="0.3192%" height="15" fill="rgb(245,133,36)" fg:x="464517232593" fg:w="1774328005"/><text x="83.8174%" y="143.50"></text></g><g><title>[libc.so.6] (109,332,400 samples, 0.02%)</title><rect x="83.8669%" y="117" width="0.0197%" height="15" fill="rgb(212,6,19)" fg:x="466182228198" fg:w="109332400"/><text x="84.1169%" y="127.50"></text></g><g><title>rayon::iter::extend::&lt;impl rayon::iter::ParallelExtend&lt;T&gt; for alloc::vec::Vec&lt;T&gt;&gt;::par_extend (25,481,213,773 samples, 4.58%)</title><rect x="79.3030%" y="293" width="4.5841%" height="15" fill="rgb(218,1,36)" fg:x="440813281966" fg:w="25481213773"/><text x="79.5530%" y="303.50">rayon..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,alloc::vec::Vec&lt;u8&gt;)&gt;&gt; (15,729,007,278 samples, 2.83%)</title><rect x="81.0575%" y="277" width="2.8297%" height="15" fill="rgb(246,84,54)" fg:x="450565488461" fg:w="15729007278"/><text x="81.3075%" y="287.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,alloc::vec::Vec&lt;u8&gt;)&gt;&gt; (15,729,007,278 samples, 2.83%)</title><rect x="81.0575%" y="261" width="2.8297%" height="15" fill="rgb(242,110,6)" fg:x="450565488461" fg:w="15729007278"/><text x="81.3075%" y="271.50">co..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15,729,007,278 samples, 2.83%)</title><rect x="81.0575%" y="245" width="2.8297%" height="15" fill="rgb(214,47,5)" fg:x="450565488461" fg:w="15729007278"/><text x="81.3075%" y="255.50">&lt;a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (15,729,007,278 samples, 2.83%)</title><rect x="81.0575%" y="229" width="2.8297%" height="15" fill="rgb(218,159,25)" fg:x="450565488461" fg:w="15729007278"/><text x="81.3075%" y="239.50">al..</text></g><g><title>&lt;rayon::iter::extend::ListReducer as rayon::iter::plumbing::Reducer&lt;alloc::collections::linked_list::LinkedList&lt;T&gt;&gt;&gt;::reduce (1,382,676,382 samples, 0.25%)</title><rect x="84.5342%" y="277" width="0.2487%" height="15" fill="rgb(215,211,28)" fg:x="469891066799" fg:w="1382676382"/><text x="84.7842%" y="287.50"></text></g><g><title>alloc::collections::linked_list::LinkedList&lt;T&gt;::append (1,357,697,782 samples, 0.24%)</title><rect x="84.5387%" y="261" width="0.2443%" height="15" fill="rgb(238,59,32)" fg:x="469916045399" fg:w="1357697782"/><text x="84.7887%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (62,699,423 samples, 0.01%)</title><rect x="84.8124%" y="245" width="0.0113%" height="15" fill="rgb(226,82,3)" fg:x="471437490082" fg:w="62699423"/><text x="85.0624%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (57,430,625 samples, 0.01%)</title><rect x="84.8133%" y="229" width="0.0103%" height="15" fill="rgb(240,164,32)" fg:x="471442758880" fg:w="57430625"/><text x="85.0633%" y="239.50"></text></g><g><title>&lt;rayon::iter::extend::ListVecFolder&lt;T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::complete (62,806,496 samples, 0.01%)</title><rect x="84.8236%" y="245" width="0.0113%" height="15" fill="rgb(232,46,7)" fg:x="471500189505" fg:w="62806496"/><text x="85.0736%" y="255.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (258,801,806 samples, 0.05%)</title><rect x="84.9009%" y="197" width="0.0466%" height="15" fill="rgb(229,129,53)" fg:x="471929875541" fg:w="258801806"/><text x="85.1509%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::set_ptr_and_cap (73,315,515 samples, 0.01%)</title><rect x="84.9557%" y="197" width="0.0132%" height="15" fill="rgb(234,188,29)" fg:x="472234240646" fg:w="73315515"/><text x="85.2057%" y="207.50"></text></g><g><title>alloc::raw_vec::layout_array (150,708,876 samples, 0.03%)</title><rect x="84.9689%" y="197" width="0.0271%" height="15" fill="rgb(246,141,4)" fg:x="472307556161" fg:w="150708876"/><text x="85.2189%" y="207.50"></text></g><g><title>core::alloc::layout::Layout::repeat (150,708,876 samples, 0.03%)</title><rect x="84.9689%" y="181" width="0.0271%" height="15" fill="rgb(229,23,39)" fg:x="472307556161" fg:w="150708876"/><text x="85.2189%" y="191.50"></text></g><g><title>core::cmp::max (76,648,048 samples, 0.01%)</title><rect x="84.9960%" y="197" width="0.0138%" height="15" fill="rgb(206,12,3)" fg:x="472458265037" fg:w="76648048"/><text x="85.2460%" y="207.50"></text></g><g><title>core::cmp::Ord::max (76,648,048 samples, 0.01%)</title><rect x="84.9960%" y="181" width="0.0138%" height="15" fill="rgb(252,226,20)" fg:x="472458265037" fg:w="76648048"/><text x="85.2460%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (984,514,191 samples, 0.18%)</title><rect x="84.8374%" y="245" width="0.1771%" height="15" fill="rgb(216,123,35)" fg:x="471576610466" fg:w="984514191"/><text x="85.0874%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (702,948,220 samples, 0.13%)</title><rect x="84.8880%" y="229" width="0.1265%" height="15" fill="rgb(212,68,40)" fg:x="471858176437" fg:w="702948220"/><text x="85.1380%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (663,638,835 samples, 0.12%)</title><rect x="84.8951%" y="213" width="0.1194%" height="15" fill="rgb(254,125,32)" fg:x="471897485822" fg:w="663638835"/><text x="85.1451%" y="223.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (323,794,880 samples, 0.06%)</title><rect x="85.0228%" y="149" width="0.0583%" height="15" fill="rgb(253,97,22)" fg:x="472607214643" fg:w="323794880"/><text x="85.2728%" y="159.50"></text></g><g><title>crossbeam_epoch::default::with_handle (542,467,962 samples, 0.10%)</title><rect x="85.0151%" y="245" width="0.0976%" height="15" fill="rgb(241,101,14)" fg:x="472564336732" fg:w="542467962"/><text x="85.2651%" y="255.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (528,790,675 samples, 0.10%)</title><rect x="85.0175%" y="229" width="0.0951%" height="15" fill="rgb(238,103,29)" fg:x="472578014019" fg:w="528790675"/><text x="85.2675%" y="239.50"></text></g><g><title>crossbeam_epoch::default::with_handle::_{{closure}} (528,790,675 samples, 0.10%)</title><rect x="85.0175%" y="213" width="0.0951%" height="15" fill="rgb(233,195,47)" fg:x="472578014019" fg:w="528790675"/><text x="85.2675%" y="223.50"></text></g><g><title>crossbeam_epoch::default::pin::_{{closure}} (528,790,675 samples, 0.10%)</title><rect x="85.0175%" y="197" width="0.0951%" height="15" fill="rgb(246,218,30)" fg:x="472578014019" fg:w="528790675"/><text x="85.2675%" y="207.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (528,790,675 samples, 0.10%)</title><rect x="85.0175%" y="181" width="0.0951%" height="15" fill="rgb(219,145,47)" fg:x="472578014019" fg:w="528790675"/><text x="85.2675%" y="191.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (528,790,675 samples, 0.10%)</title><rect x="85.0175%" y="165" width="0.0951%" height="15" fill="rgb(243,12,26)" fg:x="472578014019" fg:w="528790675"/><text x="85.2675%" y="175.50"></text></g><g><title>crossbeam_epoch::epoch::Epoch::pinned (123,867,704 samples, 0.02%)</title><rect x="85.0904%" y="149" width="0.0223%" height="15" fill="rgb(214,87,16)" fg:x="472982936990" fg:w="123867704"/><text x="85.3404%" y="159.50"></text></g><g><title>crossbeam_epoch::internal::Global::try_advance (434,924,377 samples, 0.08%)</title><rect x="85.1150%" y="245" width="0.0782%" height="15" fill="rgb(208,99,42)" fg:x="473119516946" fg:w="434924377"/><text x="85.3650%" y="255.50"></text></g><g><title>&lt;rayon::iter::filter::FilterFolder&lt;C,P&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::complete (2,338,509,904 samples, 0.42%)</title><rect x="84.7829%" y="277" width="0.4207%" height="15" fill="rgb(253,99,2)" fg:x="471273743181" fg:w="2338509904"/><text x="85.0329%" y="287.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::complete (2,338,509,904 samples, 0.42%)</title><rect x="84.7829%" y="261" width="0.4207%" height="15" fill="rgb(220,168,23)" fg:x="471273743181" fg:w="2338509904"/><text x="85.0329%" y="271.50"></text></g><g><title>&lt;rayon::slice::IterProducer&lt;T&gt; as rayon::iter::plumbing::Producer&gt;::split_at (215,073,964 samples, 0.04%)</title><rect x="85.2036%" y="277" width="0.0387%" height="15" fill="rgb(242,38,24)" fg:x="473612253085" fg:w="215073964"/><text x="85.4536%" y="287.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at (215,073,964 samples, 0.04%)</title><rect x="85.2036%" y="261" width="0.0387%" height="15" fill="rgb(225,182,9)" fg:x="473612253085" fg:w="215073964"/><text x="85.4536%" y="271.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_checked (215,073,964 samples, 0.04%)</title><rect x="85.2036%" y="245" width="0.0387%" height="15" fill="rgb(243,178,37)" fg:x="473612253085" fg:w="215073964"/><text x="85.4536%" y="255.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (122,229,371 samples, 0.02%)</title><rect x="85.2203%" y="229" width="0.0220%" height="15" fill="rgb(232,139,19)" fg:x="473705097678" fg:w="122229371"/><text x="85.4703%" y="239.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (122,229,371 samples, 0.02%)</title><rect x="85.2203%" y="213" width="0.0220%" height="15" fill="rgb(225,201,24)" fg:x="473705097678" fg:w="122229371"/><text x="85.4703%" y="223.50"></text></g><g><title>rayon::iter::plumbing::LengthSplitter::try_split (332,493,339 samples, 0.06%)</title><rect x="85.2423%" y="277" width="0.0598%" height="15" fill="rgb(221,47,46)" fg:x="473827327049" fg:w="332493339"/><text x="85.4923%" y="287.50"></text></g><g><title>rayon::iter::plumbing::Splitter::try_split (213,062,359 samples, 0.04%)</title><rect x="85.2638%" y="261" width="0.0383%" height="15" fill="rgb(249,23,13)" fg:x="473946758029" fg:w="213062359"/><text x="85.5138%" y="271.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (363,583,355 samples, 0.07%)</title><rect x="85.4621%" y="245" width="0.0654%" height="15" fill="rgb(219,9,5)" fg:x="475049045388" fg:w="363583355"/><text x="85.7121%" y="255.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (350,671,188 samples, 0.06%)</title><rect x="85.4644%" y="229" width="0.0631%" height="15" fill="rgb(254,171,16)" fg:x="475061957555" fg:w="350671188"/><text x="85.7144%" y="239.50"></text></g><g><title>&lt;mvprs::VPLeaf&lt;u8,usize&gt; as mvprs::tree::promoter::TreeNodePromoter&lt;u8,usize&gt;&gt;::promote::_{{closure}}::_{{closure}} (7,121,606,178 samples, 1.28%)</title><rect x="85.6269%" y="229" width="1.2812%" height="15" fill="rgb(230,171,20)" fg:x="475965286231" fg:w="7121606178"/><text x="85.8769%" y="239.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (6,717,190,045 samples, 1.21%)</title><rect x="85.6997%" y="213" width="1.2084%" height="15" fill="rgb(210,71,41)" fg:x="476369702364" fg:w="6717190045"/><text x="85.9497%" y="223.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (6,717,190,045 samples, 1.21%)</title><rect x="85.6997%" y="197" width="1.2084%" height="15" fill="rgb(206,173,20)" fg:x="476369702364" fg:w="6717190045"/><text x="85.9497%" y="207.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (6,717,190,045 samples, 1.21%)</title><rect x="85.6997%" y="181" width="1.2084%" height="15" fill="rgb(233,88,34)" fg:x="476369702364" fg:w="6717190045"/><text x="85.9497%" y="191.50"></text></g><g><title>[libc.so.6] (5,233,447,501 samples, 0.94%)</title><rect x="85.9666%" y="165" width="0.9415%" height="15" fill="rgb(223,209,46)" fg:x="477853444908" fg:w="5233447501"/><text x="86.2166%" y="175.50"></text></g><g><title>&lt;rayon::iter::filter::FilterFolder&lt;C,P&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume (7,766,747,052 samples, 1.40%)</title><rect x="85.5275%" y="245" width="1.3973%" height="15" fill="rgb(250,43,18)" fg:x="475412628743" fg:w="7766747052"/><text x="85.7775%" y="255.50"></text></g><g><title>&lt;mvprs::tree::distance::HammingDistance as mvprs::tree::distance::DistanceMetric&lt;[u8],usize&gt;&gt;::distance (92,483,386 samples, 0.02%)</title><rect x="86.9081%" y="229" width="0.0166%" height="15" fill="rgb(208,13,10)" fg:x="483086892409" fg:w="92483386"/><text x="87.1581%" y="239.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (9,020,691,694 samples, 1.62%)</title><rect x="85.3021%" y="277" width="1.6228%" height="15" fill="rgb(212,200,36)" fg:x="474159820388" fg:w="9020691694"/><text x="85.5521%" y="287.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (9,020,691,694 samples, 1.62%)</title><rect x="85.3021%" y="261" width="1.6228%" height="15" fill="rgb(225,90,30)" fg:x="474159820388" fg:w="9020691694"/><text x="85.5521%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (85,824,608 samples, 0.02%)</title><rect x="87.2957%" y="261" width="0.0154%" height="15" fill="rgb(236,182,39)" fg:x="485241442550" fg:w="85824608"/><text x="87.5457%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (81,455,069 samples, 0.01%)</title><rect x="87.2965%" y="245" width="0.0147%" height="15" fill="rgb(212,144,35)" fg:x="485245812089" fg:w="81455069"/><text x="87.5465%" y="255.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (485,368,618 samples, 0.09%)</title><rect x="87.3321%" y="165" width="0.0873%" height="15" fill="rgb(228,63,44)" fg:x="485443829429" fg:w="485368618"/><text x="87.5821%" y="175.50"></text></g><g><title>crossbeam_epoch::epoch::Epoch::pinned (208,888,686 samples, 0.04%)</title><rect x="87.4322%" y="165" width="0.0376%" height="15" fill="rgb(228,109,6)" fg:x="486000206952" fg:w="208888686"/><text x="87.6822%" y="175.50"></text></g><g><title>crossbeam_epoch::default::with_handle (849,583,341 samples, 0.15%)</title><rect x="87.3173%" y="261" width="0.1528%" height="15" fill="rgb(238,117,24)" fg:x="485361550560" fg:w="849583341"/><text x="87.5673%" y="271.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (832,362,294 samples, 0.15%)</title><rect x="87.3204%" y="245" width="0.1497%" height="15" fill="rgb(242,26,26)" fg:x="485378771607" fg:w="832362294"/><text x="87.5704%" y="255.50"></text></g><g><title>crossbeam_epoch::default::with_handle::_{{closure}} (830,942,102 samples, 0.15%)</title><rect x="87.3207%" y="229" width="0.1495%" height="15" fill="rgb(221,92,48)" fg:x="485380191799" fg:w="830942102"/><text x="87.5707%" y="239.50"></text></g><g><title>crossbeam_epoch::default::pin::_{{closure}} (830,942,102 samples, 0.15%)</title><rect x="87.3207%" y="213" width="0.1495%" height="15" fill="rgb(209,209,32)" fg:x="485380191799" fg:w="830942102"/><text x="87.5707%" y="223.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (830,942,102 samples, 0.15%)</title><rect x="87.3207%" y="197" width="0.1495%" height="15" fill="rgb(221,70,22)" fg:x="485380191799" fg:w="830942102"/><text x="87.5707%" y="207.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (830,942,102 samples, 0.15%)</title><rect x="87.3207%" y="181" width="0.1495%" height="15" fill="rgb(248,145,5)" fg:x="485380191799" fg:w="830942102"/><text x="87.5707%" y="191.50"></text></g><g><title>crossbeam_epoch::internal::Global::try_advance (284,506,060 samples, 0.05%)</title><rect x="87.4710%" y="261" width="0.0512%" height="15" fill="rgb(226,116,26)" fg:x="486215943447" fg:w="284506060"/><text x="87.7210%" y="271.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (55,705,159 samples, 0.01%)</title><rect x="87.5271%" y="261" width="0.0100%" height="15" fill="rgb(244,5,17)" fg:x="486527548254" fg:w="55705159"/><text x="87.7771%" y="271.50"></text></g><g><title>rayon_core::registry::WorkerThread::push (55,705,159 samples, 0.01%)</title><rect x="87.5271%" y="245" width="0.0100%" height="15" fill="rgb(252,159,33)" fg:x="486527548254" fg:w="55705159"/><text x="87.7771%" y="255.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (20,296,035,245 samples, 3.65%)</title><rect x="83.8871%" y="293" width="3.6513%" height="15" fill="rgb(206,71,0)" fg:x="466294495739" fg:w="20296035245"/><text x="84.1371%" y="303.50">rayo..</text></g><g><title>rayon_core::join::join_context (3,410,018,902 samples, 0.61%)</title><rect x="86.9250%" y="277" width="0.6135%" height="15" fill="rgb(233,118,54)" fg:x="483180512082" fg:w="3410018902"/><text x="87.1750%" y="287.50"></text></g><g><title>rayon_core::current_num_threads (91,451,455 samples, 0.02%)</title><rect x="87.5384%" y="293" width="0.0165%" height="15" fill="rgb(234,83,48)" fg:x="486590530984" fg:w="91451455"/><text x="87.7884%" y="303.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (412,135,482 samples, 0.07%)</title><rect x="87.6691%" y="277" width="0.0741%" height="15" fill="rgb(228,3,54)" fg:x="487317011670" fg:w="412135482"/><text x="87.9191%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;rayon_core::job::JobResult&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;(usize,alloc::vec::Vec&lt;u8&gt;)&gt;&gt;&gt;&gt;&gt; (219,340,598 samples, 0.04%)</title><rect x="87.7433%" y="277" width="0.0395%" height="15" fill="rgb(226,155,13)" fg:x="487729147152" fg:w="219340598"/><text x="87.9933%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;rayon_core::job::JobResult&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;(usize,alloc::vec::Vec&lt;u8&gt;)&gt;&gt;&gt;&gt; (219,340,598 samples, 0.04%)</title><rect x="87.7433%" y="261" width="0.0395%" height="15" fill="rgb(241,28,37)" fg:x="487729147152" fg:w="219340598"/><text x="87.9933%" y="271.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (2,622,233,708 samples, 0.47%)</title><rect x="87.5549%" y="293" width="0.4717%" height="15" fill="rgb(233,93,10)" fg:x="486681982439" fg:w="2622233708"/><text x="87.8049%" y="303.50"></text></g><g><title>rayon_core::join::join_context::call_b::_{{closure}} (1,355,728,397 samples, 0.24%)</title><rect x="87.7827%" y="277" width="0.2439%" height="15" fill="rgb(225,113,19)" fg:x="487948487750" fg:w="1355728397"/><text x="88.0327%" y="287.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1,355,728,397 samples, 0.24%)</title><rect x="87.7827%" y="261" width="0.2439%" height="15" fill="rgb(241,2,18)" fg:x="487948487750" fg:w="1355728397"/><text x="88.0327%" y="271.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::new (6,405,042,410 samples, 1.15%)</title><rect x="88.4611%" y="277" width="1.1523%" height="15" fill="rgb(228,207,21)" fg:x="491719550072" fg:w="6405042410"/><text x="88.7111%" y="287.50"></text></g><g><title>rayon_core::latch::SpinLatch::new (1,018,137,633 samples, 0.18%)</title><rect x="89.6151%" y="277" width="0.1832%" height="15" fill="rgb(213,211,35)" fg:x="498133946608" fg:w="1018137633"/><text x="89.8651%" y="287.50"></text></g><g><title>rayon_core::registry::WorkerThread::registry (994,555,030 samples, 0.18%)</title><rect x="89.6193%" y="261" width="0.1789%" height="15" fill="rgb(209,83,10)" fg:x="498157529211" fg:w="994555030"/><text x="89.8693%" y="271.50"></text></g><g><title>crossbeam_deque::deque::Worker&lt;T&gt;::is_empty (425,726,033 samples, 0.08%)</title><rect x="89.7997%" y="261" width="0.0766%" height="15" fill="rgb(209,164,1)" fg:x="499159829877" fg:w="425726033"/><text x="90.0497%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicIsize::load (423,285,807 samples, 0.08%)</title><rect x="89.8001%" y="245" width="0.0761%" height="15" fill="rgb(213,184,43)" fg:x="499162270103" fg:w="423285807"/><text x="90.0501%" y="255.50"></text></g><g><title>core::sync::atomic::atomic_load (423,285,807 samples, 0.08%)</title><rect x="89.8001%" y="229" width="0.0761%" height="15" fill="rgb(231,61,34)" fg:x="499162270103" fg:w="423285807"/><text x="90.0501%" y="239.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (101,450,981 samples, 0.02%)</title><rect x="89.8800%" y="245" width="0.0183%" height="15" fill="rgb(235,75,3)" fg:x="499606565187" fg:w="101450981"/><text x="90.1300%" y="255.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (101,450,981 samples, 0.02%)</title><rect x="89.8800%" y="229" width="0.0183%" height="15" fill="rgb(220,106,47)" fg:x="499606565187" fg:w="101450981"/><text x="90.1300%" y="239.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (101,450,981 samples, 0.02%)</title><rect x="89.8800%" y="213" width="0.0183%" height="15" fill="rgb(210,196,33)" fg:x="499606565187" fg:w="101450981"/><text x="90.1300%" y="223.50"></text></g><g><title>core::sync::atomic::AtomicIsize::load (64,124,207 samples, 0.01%)</title><rect x="89.9068%" y="245" width="0.0115%" height="15" fill="rgb(229,154,42)" fg:x="499755528724" fg:w="64124207"/><text x="90.1568%" y="255.50"></text></g><g><title>core::sync::atomic::atomic_load (64,124,207 samples, 0.01%)</title><rect x="89.9068%" y="229" width="0.0115%" height="15" fill="rgb(228,114,26)" fg:x="499755528724" fg:w="64124207"/><text x="90.1568%" y="239.50"></text></g><g><title>core::ptr::write_volatile (201,450,845 samples, 0.04%)</title><rect x="89.9186%" y="229" width="0.0362%" height="15" fill="rgb(208,144,1)" fg:x="499821186232" fg:w="201450845"/><text x="90.1686%" y="239.50"></text></g><g><title>crossbeam_deque::deque::Worker&lt;T&gt;::push (455,990,515 samples, 0.08%)</title><rect x="89.8763%" y="261" width="0.0820%" height="15" fill="rgb(239,112,37)" fg:x="499585555910" fg:w="455990515"/><text x="90.1263%" y="271.50"></text></g><g><title>crossbeam_deque::deque::Buffer&lt;T&gt;::write (220,360,193 samples, 0.04%)</title><rect x="89.9186%" y="245" width="0.0396%" height="15" fill="rgb(210,96,50)" fg:x="499821186232" fg:w="220360193"/><text x="90.1686%" y="255.50"></text></g><g><title>core::ops::function::Fn::call (2,127,192,574 samples, 0.38%)</title><rect x="89.9684%" y="213" width="0.3827%" height="15" fill="rgb(222,178,2)" fg:x="500097609540" fg:w="2127192574"/><text x="90.2184%" y="223.50"></text></g><g><title>rayon_core::sleep::counters::JobsEventCounter::is_sleepy (2,127,192,574 samples, 0.38%)</title><rect x="89.9684%" y="197" width="0.3827%" height="15" fill="rgb(226,74,18)" fg:x="500097609540" fg:w="2127192574"/><text x="90.2184%" y="207.50"></text></g><g><title>rayon_core::registry::WorkerThread::push (3,075,338,550 samples, 0.55%)</title><rect x="89.7983%" y="277" width="0.5533%" height="15" fill="rgb(225,67,54)" fg:x="499152084241" fg:w="3075338550"/><text x="90.0483%" y="287.50"></text></g><g><title>rayon_core::sleep::Sleep::new_internal_jobs (2,185,876,366 samples, 0.39%)</title><rect x="89.9583%" y="261" width="0.3932%" height="15" fill="rgb(251,92,32)" fg:x="500041546425" fg:w="2185876366"/><text x="90.2083%" y="271.50"></text></g><g><title>rayon_core::sleep::Sleep::new_jobs (2,185,876,366 samples, 0.39%)</title><rect x="89.9583%" y="245" width="0.3932%" height="15" fill="rgb(228,149,22)" fg:x="500041546425" fg:w="2185876366"/><text x="90.2083%" y="255.50"></text></g><g><title>rayon_core::sleep::counters::AtomicCounters::increment_jobs_event_counter_if (2,134,600,011 samples, 0.38%)</title><rect x="89.9675%" y="229" width="0.3840%" height="15" fill="rgb(243,54,13)" fg:x="500092822780" fg:w="2134600011"/><text x="90.2175%" y="239.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (12,977,273,389 samples, 2.33%)</title><rect x="88.0266%" y="293" width="2.3346%" height="15" fill="rgb(243,180,28)" fg:x="489304216147" fg:w="12977273389"/><text x="88.2766%" y="303.50">r..</text></g><g><title>rayon_core::registry::Registry::pop_injected_job (85,211,129 samples, 0.02%)</title><rect x="90.4827%" y="245" width="0.0153%" height="15" fill="rgb(208,167,24)" fg:x="502956434304" fg:w="85211129"/><text x="90.7327%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (167,125,832 samples, 0.03%)</title><rect x="90.6276%" y="229" width="0.0301%" height="15" fill="rgb(245,73,45)" fg:x="503761737563" fg:w="167125832"/><text x="90.8776%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (65,535,409 samples, 0.01%)</title><rect x="90.6618%" y="229" width="0.0118%" height="15" fill="rgb(237,203,48)" fg:x="503952055253" fg:w="65535409"/><text x="90.9118%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (65,535,409 samples, 0.01%)</title><rect x="90.6618%" y="213" width="0.0118%" height="15" fill="rgb(211,197,16)" fg:x="503952055253" fg:w="65535409"/><text x="90.9118%" y="223.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (1,256,547,267 samples, 0.23%)</title><rect x="90.4488%" y="277" width="0.2261%" height="15" fill="rgb(243,99,51)" fg:x="502768270565" fg:w="1256547267"/><text x="90.6988%" y="287.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work::_{{closure}} (1,068,383,528 samples, 0.19%)</title><rect x="90.4827%" y="261" width="0.1922%" height="15" fill="rgb(215,123,29)" fg:x="502956434304" fg:w="1068383528"/><text x="90.7327%" y="271.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal (983,172,399 samples, 0.18%)</title><rect x="90.4980%" y="245" width="0.1769%" height="15" fill="rgb(239,186,37)" fg:x="503041645433" fg:w="983172399"/><text x="90.7480%" y="255.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work (2,643,194,219 samples, 0.48%)</title><rect x="90.3699%" y="293" width="0.4755%" height="15" fill="rgb(252,136,39)" fg:x="502329543447" fg:w="2643194219"/><text x="90.6199%" y="303.50"></text></g><g><title>rayon_core::registry::WorkerThread::take_local_job (947,919,834 samples, 0.17%)</title><rect x="90.6749%" y="277" width="0.1705%" height="15" fill="rgb(223,213,32)" fg:x="504024817832" fg:w="947919834"/><text x="90.9249%" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (330,411,904 samples, 0.06%)</title><rect x="90.7860%" y="261" width="0.0594%" height="15" fill="rgb(233,115,5)" fg:x="504642325762" fg:w="330411904"/><text x="91.0360%" y="271.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (194,404,192 samples, 0.03%)</title><rect x="90.9618%" y="277" width="0.0350%" height="15" fill="rgb(207,226,44)" fg:x="505619768909" fg:w="194404192"/><text x="91.2118%" y="287.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (194,404,192 samples, 0.03%)</title><rect x="90.9618%" y="261" width="0.0350%" height="15" fill="rgb(208,126,0)" fg:x="505619768909" fg:w="194404192"/><text x="91.2118%" y="271.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (194,404,192 samples, 0.03%)</title><rect x="90.9618%" y="245" width="0.0350%" height="15" fill="rgb(244,66,21)" fg:x="505619768909" fg:w="194404192"/><text x="91.2118%" y="255.50"></text></g><g><title>rayon_core::latch::CoreLatch::probe (1,067,350,305 samples, 0.19%)</title><rect x="90.9998%" y="277" width="0.1920%" height="15" fill="rgb(222,97,12)" fg:x="505830988410" fg:w="1067350305"/><text x="91.2498%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (191,632,325 samples, 0.03%)</title><rect x="91.1574%" y="261" width="0.0345%" height="15" fill="rgb(219,213,19)" fg:x="506706706390" fg:w="191632325"/><text x="91.4074%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_load (191,632,325 samples, 0.03%)</title><rect x="91.1574%" y="245" width="0.0345%" height="15" fill="rgb(252,169,30)" fg:x="506706706390" fg:w="191632325"/><text x="91.4074%" y="255.50"></text></g><g><title>__sched_yield (93,674,066 samples, 0.02%)</title><rect x="91.2157%" y="245" width="0.0169%" height="15" fill="rgb(206,32,51)" fg:x="507030997563" fg:w="93674066"/><text x="91.4657%" y="255.50"></text></g><g><title>[unknown] (93,674,066 samples, 0.02%)</title><rect x="91.2157%" y="229" width="0.0169%" height="15" fill="rgb(250,172,42)" fg:x="507030997563" fg:w="93674066"/><text x="91.4657%" y="239.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (262,899,126 samples, 0.05%)</title><rect x="91.1918%" y="277" width="0.0473%" height="15" fill="rgb(209,34,43)" fg:x="506898338715" fg:w="262899126"/><text x="91.4418%" y="287.50"></text></g><g><title>rayon_core::job::JobRef::execute (262,899,126 samples, 0.05%)</title><rect x="91.1918%" y="261" width="0.0473%" height="15" fill="rgb(223,11,35)" fg:x="506898338715" fg:w="262899126"/><text x="91.4418%" y="271.50"></text></g><g><title>rayon_core::registry::WorkerThread::take_local_job (342,711,782 samples, 0.06%)</title><rect x="91.2391%" y="277" width="0.0617%" height="15" fill="rgb(251,219,26)" fg:x="507161237841" fg:w="342711782"/><text x="91.4891%" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (71,531,766 samples, 0.01%)</title><rect x="91.2879%" y="261" width="0.0129%" height="15" fill="rgb(231,119,3)" fg:x="507432417857" fg:w="71531766"/><text x="91.5379%" y="271.50"></text></g><g><title>__sched_yield (15,935,096,546 samples, 2.87%)</title><rect x="91.3379%" y="261" width="2.8667%" height="15" fill="rgb(216,97,11)" fg:x="507710237487" fg:w="15935096546"/><text x="91.5879%" y="271.50">__..</text></g><g><title>[unknown] (15,551,972,225 samples, 2.80%)</title><rect x="91.4068%" y="245" width="2.7978%" height="15" fill="rgb(223,59,9)" fg:x="508093361808" fg:w="15551972225"/><text x="91.6568%" y="255.50">[u..</text></g><g><title>[unknown] (1,818,463,486 samples, 0.33%)</title><rect x="93.8775%" y="229" width="0.3271%" height="15" fill="rgb(233,93,31)" fg:x="521826870547" fg:w="1818463486"/><text x="94.1275%" y="239.50"></text></g><g><title>[unknown] (669,096,605 samples, 0.12%)</title><rect x="94.0843%" y="213" width="0.1204%" height="15" fill="rgb(239,81,33)" fg:x="522976237428" fg:w="669096605"/><text x="94.3343%" y="223.50"></text></g><g><title>core::ops::function::Fn::call (248,201,809 samples, 0.04%)</title><rect x="94.2071%" y="229" width="0.0447%" height="15" fill="rgb(213,120,34)" fg:x="523658890493" fg:w="248201809"/><text x="94.4571%" y="239.50"></text></g><g><title>rayon_core::sleep::counters::JobsEventCounter::is_active (248,201,809 samples, 0.04%)</title><rect x="94.2071%" y="213" width="0.0447%" height="15" fill="rgb(243,49,53)" fg:x="523658890493" fg:w="248201809"/><text x="94.4571%" y="223.50"></text></g><g><title>rayon_core::sleep::counters::JobsEventCounter::is_sleepy (248,201,809 samples, 0.04%)</title><rect x="94.2071%" y="197" width="0.0447%" height="15" fill="rgb(247,216,33)" fg:x="523658890493" fg:w="248201809"/><text x="94.4571%" y="207.50"></text></g><g><title>rayon_core::sleep::counters::AtomicCounters::increment_jobs_event_counter_if (304,744,747 samples, 0.05%)</title><rect x="94.2046%" y="245" width="0.0548%" height="15" fill="rgb(226,26,14)" fg:x="523645334033" fg:w="304744747"/><text x="94.4546%" y="255.50"></text></g><g><title>rayon_core::sleep::Sleep::announce_sleepy (308,081,440 samples, 0.06%)</title><rect x="94.2046%" y="261" width="0.0554%" height="15" fill="rgb(215,49,53)" fg:x="523645334033" fg:w="308081440"/><text x="94.4546%" y="271.50"></text></g><g><title>rayon_core::sleep::Sleep::no_work_found (16,458,983,218 samples, 2.96%)</title><rect x="91.3008%" y="277" width="2.9610%" height="15" fill="rgb(245,162,40)" fg:x="507503949623" fg:w="16458983218"/><text x="91.5508%" y="287.50">ray..</text></g><g><title>rayon_core::sleep::Sleep::start_looking (1,315,708,096 samples, 0.24%)</title><rect x="94.2618%" y="277" width="0.2367%" height="15" fill="rgb(229,68,17)" fg:x="523962932841" fg:w="1315708096"/><text x="94.5118%" y="287.50"></text></g><g><title>__sched_yield (486,771,554 samples, 0.09%)</title><rect x="94.5030%" y="261" width="0.0876%" height="15" fill="rgb(213,182,10)" fg:x="525303582739" fg:w="486771554"/><text x="94.7530%" y="271.50"></text></g><g><title>[unknown] (486,771,554 samples, 0.09%)</title><rect x="94.5030%" y="245" width="0.0876%" height="15" fill="rgb(245,125,30)" fg:x="525303582739" fg:w="486771554"/><text x="94.7530%" y="255.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (23,400,981,393 samples, 4.21%)</title><rect x="90.8454%" y="293" width="4.2099%" height="15" fill="rgb(232,202,2)" fg:x="504972737666" fg:w="23400981393"/><text x="91.0954%" y="303.50">rayon..</text></g><g><title>rayon_core::sleep::Sleep::work_found (3,088,464,996 samples, 0.56%)</title><rect x="94.4997%" y="277" width="0.5556%" height="15" fill="rgb(237,140,51)" fg:x="525285254063" fg:w="3088464996"/><text x="94.7497%" y="287.50"></text></g><g><title>rayon_core::sleep::counters::AtomicCounters::sub_inactive_thread (2,533,888,936 samples, 0.46%)</title><rect x="94.5994%" y="261" width="0.4559%" height="15" fill="rgb(236,157,25)" fg:x="525839830123" fg:w="2533888936"/><text x="94.8494%" y="271.50"></text></g><g><title>rayon_core::sleep::counters::Counters::sleeping_threads (2,488,232,355 samples, 0.45%)</title><rect x="94.6077%" y="245" width="0.4476%" height="15" fill="rgb(219,209,0)" fg:x="525885486704" fg:w="2488232355"/><text x="94.8577%" y="255.50"></text></g><g><title>rayon_core::sleep::counters::select_thread (2,488,232,355 samples, 0.45%)</title><rect x="94.6077%" y="229" width="0.4476%" height="15" fill="rgb(240,116,54)" fg:x="525885486704" fg:w="2488232355"/><text x="94.8577%" y="239.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (1,260,842,467 samples, 0.23%)</title><rect x="95.4039%" y="213" width="0.2268%" height="15" fill="rgb(216,10,36)" fg:x="530311433261" fg:w="1260842467"/><text x="95.6539%" y="223.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (1,260,842,467 samples, 0.23%)</title><rect x="95.4039%" y="197" width="0.2268%" height="15" fill="rgb(222,72,44)" fg:x="530311433261" fg:w="1260842467"/><text x="95.6539%" y="207.50"></text></g><g><title>&lt;&amp;A as core::alloc::Allocator&gt;::allocate (1,260,842,467 samples, 0.23%)</title><rect x="95.4039%" y="181" width="0.2268%" height="15" fill="rgb(232,159,9)" fg:x="530311433261" fg:w="1260842467"/><text x="95.6539%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,260,842,467 samples, 0.23%)</title><rect x="95.4039%" y="165" width="0.2268%" height="15" fill="rgb(210,39,32)" fg:x="530311433261" fg:w="1260842467"/><text x="95.6539%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,260,842,467 samples, 0.23%)</title><rect x="95.4039%" y="149" width="0.2268%" height="15" fill="rgb(216,194,45)" fg:x="530311433261" fg:w="1260842467"/><text x="95.6539%" y="159.50"></text></g><g><title>alloc::alloc::alloc (1,260,842,467 samples, 0.23%)</title><rect x="95.4039%" y="133" width="0.2268%" height="15" fill="rgb(218,18,35)" fg:x="530311433261" fg:w="1260842467"/><text x="95.6539%" y="143.50"></text></g><g><title>malloc (1,260,842,467 samples, 0.23%)</title><rect x="95.4039%" y="117" width="0.2268%" height="15" fill="rgb(207,83,51)" fg:x="530311433261" fg:w="1260842467"/><text x="95.6539%" y="127.50"></text></g><g><title>[libc.so.6] (847,361,045 samples, 0.15%)</title><rect x="95.4783%" y="101" width="0.1524%" height="15" fill="rgb(225,63,43)" fg:x="530724914683" fg:w="847361045"/><text x="95.7283%" y="111.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_in (1,283,217,600 samples, 0.23%)</title><rect x="95.4039%" y="229" width="0.2309%" height="15" fill="rgb(207,57,36)" fg:x="530311433261" fg:w="1283217600"/><text x="95.6539%" y="239.50"></text></g><g><title>alloc::collections::linked_list::LinkedList&lt;T,A&gt;::push_back (1,319,700,023 samples, 0.24%)</title><rect x="95.4039%" y="245" width="0.2374%" height="15" fill="rgb(216,99,33)" fg:x="530311433261" fg:w="1319700023"/><text x="95.6539%" y="255.50"></text></g><g><title>[unknown] (1,553,520,662 samples, 0.28%)</title><rect x="95.3620%" y="277" width="0.2795%" height="15" fill="rgb(225,42,16)" fg:x="530078531139" fg:w="1553520662"/><text x="95.6120%" y="287.50"></text></g><g><title>&lt;rayon::iter::extend::ListVecFolder&lt;T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::complete (1,553,520,662 samples, 0.28%)</title><rect x="95.3620%" y="261" width="0.2795%" height="15" fill="rgb(220,201,45)" fg:x="530078531139" fg:w="1553520662"/><text x="95.6120%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (282,504,747 samples, 0.05%)</title><rect x="95.6420%" y="277" width="0.0508%" height="15" fill="rgb(225,33,4)" fg:x="531635263559" fg:w="282504747"/><text x="95.8920%" y="287.50"></text></g><g><title>malloc (265,932,157 samples, 0.05%)</title><rect x="95.6450%" y="261" width="0.0478%" height="15" fill="rgb(224,33,50)" fg:x="531651836149" fg:w="265932157"/><text x="95.8950%" y="271.50"></text></g><g><title>[libc.so.6] (181,035,550 samples, 0.03%)</title><rect x="95.6603%" y="245" width="0.0326%" height="15" fill="rgb(246,198,51)" fg:x="531736732756" fg:w="181035550"/><text x="95.9103%" y="255.50"></text></g><g><title>crossbeam_epoch::internal::Global::try_advance (63,241,235 samples, 0.01%)</title><rect x="95.6995%" y="277" width="0.0114%" height="15" fill="rgb(205,22,4)" fg:x="531954720233" fg:w="63241235"/><text x="95.9495%" y="287.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (132,758,576 samples, 0.02%)</title><rect x="95.7170%" y="277" width="0.0239%" height="15" fill="rgb(206,3,8)" fg:x="532051731059" fg:w="132758576"/><text x="95.9670%" y="287.50"></text></g><g><title>rayon_core::registry::WorkerThread::current (86,014,842 samples, 0.02%)</title><rect x="95.7422%" y="277" width="0.0155%" height="15" fill="rgb(251,23,15)" fg:x="532192031433" fg:w="86014842"/><text x="95.9922%" y="287.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (86,014,842 samples, 0.02%)</title><rect x="95.7422%" y="261" width="0.0155%" height="15" fill="rgb(252,88,28)" fg:x="532192031433" fg:w="86014842"/><text x="95.9922%" y="271.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (86,014,842 samples, 0.02%)</title><rect x="95.7422%" y="245" width="0.0155%" height="15" fill="rgb(212,127,14)" fg:x="532192031433" fg:w="86014842"/><text x="95.9922%" y="255.50"></text></g><g><title>rayon_core::registry::in_worker (3,913,230,495 samples, 0.70%)</title><rect x="95.0574%" y="293" width="0.7040%" height="15" fill="rgb(247,145,37)" fg:x="528385463879" fg:w="3913230495"/><text x="95.3074%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (65,806,388 samples, 0.01%)</title><rect x="95.9359%" y="277" width="0.0118%" height="15" fill="rgb(209,117,53)" fg:x="533268489681" fg:w="65806388"/><text x="96.1859%" y="287.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (65,806,388 samples, 0.01%)</title><rect x="95.9359%" y="261" width="0.0118%" height="15" fill="rgb(212,90,42)" fg:x="533268489681" fg:w="65806388"/><text x="96.1859%" y="271.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (65,806,388 samples, 0.01%)</title><rect x="95.9359%" y="245" width="0.0118%" height="15" fill="rgb(218,164,37)" fg:x="533268489681" fg:w="65806388"/><text x="96.1859%" y="255.50"></text></g><g><title>std::sync::poison::Flag::done (401,131,495 samples, 0.07%)</title><rect x="95.9477%" y="245" width="0.0722%" height="15" fill="rgb(246,65,34)" fg:x="533334296212" fg:w="401131495"/><text x="96.1977%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::poison::mutex::MutexGuard&lt;bool&gt;&gt; (409,372,920 samples, 0.07%)</title><rect x="95.9477%" y="277" width="0.0736%" height="15" fill="rgb(231,100,33)" fg:x="533334296212" fg:w="409372920"/><text x="96.1977%" y="287.50"></text></g><g><title>&lt;std::sync::poison::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (409,372,920 samples, 0.07%)</title><rect x="95.9477%" y="261" width="0.0736%" height="15" fill="rgb(228,126,14)" fg:x="533334296212" fg:w="409372920"/><text x="96.1977%" y="271.50"></text></g><g><title>rayon_core::latch::CoreLatch::wake_up (109,772,370 samples, 0.02%)</title><rect x="96.0224%" y="277" width="0.0197%" height="15" fill="rgb(215,173,21)" fg:x="533749319551" fg:w="109772370"/><text x="96.2724%" y="287.50"></text></g><g><title>rayon_core::latch::CoreLatch::probe (76,278,959 samples, 0.01%)</title><rect x="96.0284%" y="261" width="0.0137%" height="15" fill="rgb(210,6,40)" fg:x="533782812962" fg:w="76278959"/><text x="96.2784%" y="271.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (255,332,482 samples, 0.05%)</title><rect x="96.0421%" y="229" width="0.0459%" height="15" fill="rgb(212,48,18)" fg:x="533859091921" fg:w="255332482"/><text x="96.2921%" y="239.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (255,332,482 samples, 0.05%)</title><rect x="96.0421%" y="213" width="0.0459%" height="15" fill="rgb(230,214,11)" fg:x="533859091921" fg:w="255332482"/><text x="96.2921%" y="223.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (255,332,482 samples, 0.05%)</title><rect x="96.0421%" y="197" width="0.0459%" height="15" fill="rgb(254,105,39)" fg:x="533859091921" fg:w="255332482"/><text x="96.2921%" y="207.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_sub (206,931,614 samples, 0.04%)</title><rect x="96.0880%" y="229" width="0.0372%" height="15" fill="rgb(245,158,5)" fg:x="534114424403" fg:w="206931614"/><text x="96.3380%" y="239.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold::_{{closure}} (670,577,267 samples, 0.12%)</title><rect x="96.0421%" y="277" width="0.1206%" height="15" fill="rgb(249,208,11)" fg:x="533859091921" fg:w="670577267"/><text x="96.2921%" y="287.50"></text></g><g><title>rayon_core::registry::WorkerThread::has_injected_job (670,577,267 samples, 0.12%)</title><rect x="96.0421%" y="261" width="0.1206%" height="15" fill="rgb(210,39,28)" fg:x="533859091921" fg:w="670577267"/><text x="96.2921%" y="271.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::is_empty (670,577,267 samples, 0.12%)</title><rect x="96.0421%" y="245" width="0.1206%" height="15" fill="rgb(211,56,53)" fg:x="533859091921" fg:w="670577267"/><text x="96.2921%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicIsize::load (208,313,171 samples, 0.04%)</title><rect x="96.1253%" y="229" width="0.0375%" height="15" fill="rgb(226,201,30)" fg:x="534321356017" fg:w="208313171"/><text x="96.3753%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_load (208,313,171 samples, 0.04%)</title><rect x="96.1253%" y="213" width="0.0375%" height="15" fill="rgb(239,101,34)" fg:x="534321356017" fg:w="208313171"/><text x="96.3753%" y="223.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (336,406,015 samples, 0.06%)</title><rect x="96.1855%" y="229" width="0.0605%" height="15" fill="rgb(226,209,5)" fg:x="534656282102" fg:w="336406015"/><text x="96.4355%" y="239.50"></text></g><g><title>syscall (285,537,309 samples, 0.05%)</title><rect x="96.1947%" y="213" width="0.0514%" height="15" fill="rgb(250,105,47)" fg:x="534707150808" fg:w="285537309"/><text x="96.4447%" y="223.50"></text></g><g><title>[unknown] (68,609,803 samples, 0.01%)</title><rect x="96.2337%" y="197" width="0.0123%" height="15" fill="rgb(230,72,3)" fg:x="534924078314" fg:w="68609803"/><text x="96.4837%" y="207.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (179,010,401 samples, 0.03%)</title><rect x="96.3168%" y="213" width="0.0322%" height="15" fill="rgb(232,218,39)" fg:x="535386021274" fg:w="179010401"/><text x="96.5668%" y="223.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (163,361,276 samples, 0.03%)</title><rect x="96.3196%" y="197" width="0.0294%" height="15" fill="rgb(248,166,6)" fg:x="535401670399" fg:w="163361276"/><text x="96.5696%" y="207.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (574,058,748 samples, 0.10%)</title><rect x="96.2461%" y="229" width="0.1033%" height="15" fill="rgb(247,89,20)" fg:x="534992688117" fg:w="574058748"/><text x="96.4961%" y="239.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait (961,226,962 samples, 0.17%)</title><rect x="96.1831%" y="261" width="0.1729%" height="15" fill="rgb(248,130,54)" fg:x="534642923505" fg:w="961226962"/><text x="96.4331%" y="271.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait_optional_timeout (947,868,367 samples, 0.17%)</title><rect x="96.1855%" y="245" width="0.1705%" height="15" fill="rgb(234,196,4)" fg:x="534656282100" fg:w="947868367"/><text x="96.4355%" y="255.50"></text></g><g><title>std::sync::poison::condvar::Condvar::wait (1,036,577,426 samples, 0.19%)</title><rect x="96.1706%" y="277" width="0.1865%" height="15" fill="rgb(250,143,31)" fg:x="534573559829" fg:w="1036577426"/><text x="96.4206%" y="287.50"></text></g><g><title>rayon_core::sleep::Sleep::sleep (3,380,168,904 samples, 0.61%)</title><rect x="95.7614%" y="293" width="0.6081%" height="15" fill="rgb(211,110,34)" fg:x="532298694374" fg:w="3380168904"/><text x="96.0114%" y="303.50"></text></g><g><title>std::sync::poison::mutex::Mutex&lt;T&gt;::lock (68,726,023 samples, 0.01%)</title><rect x="96.3571%" y="277" width="0.0124%" height="15" fill="rgb(215,124,48)" fg:x="535610137255" fg:w="68726023"/><text x="96.6071%" y="287.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (67,038,815 samples, 0.01%)</title><rect x="96.3574%" y="261" width="0.0121%" height="15" fill="rgb(216,46,13)" fg:x="535611824463" fg:w="67038815"/><text x="96.6074%" y="271.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (132,939,769 samples, 0.02%)</title><rect x="96.4321%" y="277" width="0.0239%" height="15" fill="rgb(205,184,25)" fg:x="536026769293" fg:w="132939769"/><text x="96.6821%" y="287.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (132,939,769 samples, 0.02%)</title><rect x="96.4321%" y="261" width="0.0239%" height="15" fill="rgb(228,1,10)" fg:x="536026769293" fg:w="132939769"/><text x="96.6821%" y="271.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (131,463,227 samples, 0.02%)</title><rect x="96.4323%" y="245" width="0.0237%" height="15" fill="rgb(213,116,27)" fg:x="536028245835" fg:w="131463227"/><text x="96.6823%" y="255.50"></text></g><g><title>rayon_core::sleep::Sleep::wake_any_threads (520,841,214 samples, 0.09%)</title><rect x="96.3695%" y="293" width="0.0937%" height="15" fill="rgb(241,95,50)" fg:x="535678863278" fg:w="520841214"/><text x="96.6195%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (176,108,834 samples, 0.03%)</title><rect x="96.4881%" y="261" width="0.0317%" height="15" fill="rgb(238,48,32)" fg:x="536338024875" fg:w="176108834"/><text x="96.7381%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (176,108,834 samples, 0.03%)</title><rect x="96.4881%" y="245" width="0.0317%" height="15" fill="rgb(235,113,49)" fg:x="536338024875" fg:w="176108834"/><text x="96.7381%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (785,629,276 samples, 0.14%)</title><rect x="96.4878%" y="277" width="0.1413%" height="15" fill="rgb(205,127,43)" fg:x="536336546109" fg:w="785629276"/><text x="96.7378%" y="287.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (608,041,676 samples, 0.11%)</title><rect x="96.5198%" y="261" width="0.1094%" height="15" fill="rgb(250,162,2)" fg:x="536514133709" fg:w="608041676"/><text x="96.7698%" y="271.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (608,041,676 samples, 0.11%)</title><rect x="96.5198%" y="245" width="0.1094%" height="15" fill="rgb(220,13,41)" fg:x="536514133709" fg:w="608041676"/><text x="96.7698%" y="255.50"></text></g><g><title>std::sync::poison::Flag::done (107,306,298 samples, 0.02%)</title><rect x="96.6291%" y="245" width="0.0193%" height="15" fill="rgb(249,221,25)" fg:x="537122175385" fg:w="107306298"/><text x="96.8791%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::poison::mutex::MutexGuard&lt;bool&gt;&gt; (1,329,467,242 samples, 0.24%)</title><rect x="96.6291%" y="277" width="0.2392%" height="15" fill="rgb(215,208,19)" fg:x="537122175385" fg:w="1329467242"/><text x="96.8791%" y="287.50"></text></g><g><title>&lt;std::sync::poison::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,329,467,242 samples, 0.24%)</title><rect x="96.6291%" y="261" width="0.2392%" height="15" fill="rgb(236,175,2)" fg:x="537122175385" fg:w="1329467242"/><text x="96.8791%" y="271.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (1,222,160,944 samples, 0.22%)</title><rect x="96.6485%" y="245" width="0.2199%" height="15" fill="rgb(241,52,2)" fg:x="537229481683" fg:w="1222160944"/><text x="96.8985%" y="255.50"></text></g><g><title>syscall (208,799,651 samples, 0.04%)</title><rect x="96.8308%" y="229" width="0.0376%" height="15" fill="rgb(248,140,14)" fg:x="538242842976" fg:w="208799651"/><text x="97.0808%" y="239.50"></text></g><g><title>[unknown] (181,749,249 samples, 0.03%)</title><rect x="96.8356%" y="213" width="0.0327%" height="15" fill="rgb(253,22,42)" fg:x="538269893378" fg:w="181749249"/><text x="97.0856%" y="223.50"></text></g><g><title>std::sync::poison::mutex::MutexGuard&lt;T&gt;::new (606,840,081 samples, 0.11%)</title><rect x="96.8880%" y="261" width="0.1092%" height="15" fill="rgb(234,61,47)" fg:x="538560885752" fg:w="606840081"/><text x="97.1380%" y="271.50"></text></g><g><title>std::sync::poison::Flag::guard (606,840,081 samples, 0.11%)</title><rect x="96.8880%" y="245" width="0.1092%" height="15" fill="rgb(208,226,15)" fg:x="538560885752" fg:w="606840081"/><text x="97.1380%" y="255.50"></text></g><g><title>std::thread::panicking (162,212,922 samples, 0.03%)</title><rect x="96.9680%" y="229" width="0.0292%" height="15" fill="rgb(217,221,4)" fg:x="539005512911" fg:w="162212922"/><text x="97.2180%" y="239.50"></text></g><g><title>std::panicking::panicking (162,212,922 samples, 0.03%)</title><rect x="96.9680%" y="213" width="0.0292%" height="15" fill="rgb(212,174,34)" fg:x="539005512911" fg:w="162212922"/><text x="97.2180%" y="223.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (162,212,922 samples, 0.03%)</title><rect x="96.9680%" y="197" width="0.0292%" height="15" fill="rgb(253,83,4)" fg:x="539005512911" fg:w="162212922"/><text x="97.2180%" y="207.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (120,362,598 samples, 0.02%)</title><rect x="96.9755%" y="181" width="0.0217%" height="15" fill="rgb(250,195,49)" fg:x="539047363235" fg:w="120362598"/><text x="97.2255%" y="191.50"></text></g><g><title>core::sync::atomic::atomic_load (120,362,598 samples, 0.02%)</title><rect x="96.9755%" y="165" width="0.0217%" height="15" fill="rgb(241,192,25)" fg:x="539047363235" fg:w="120362598"/><text x="97.2255%" y="175.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (470,924,106 samples, 0.08%)</title><rect x="97.5324%" y="229" width="0.0847%" height="15" fill="rgb(208,124,10)" fg:x="542142727783" fg:w="470924106"/><text x="97.7824%" y="239.50"></text></g><g><title>syscall (87,440,996 samples, 0.02%)</title><rect x="97.6013%" y="213" width="0.0157%" height="15" fill="rgb(222,33,0)" fg:x="542526210893" fg:w="87440996"/><text x="97.8513%" y="223.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (13,269,360,458 samples, 2.39%)</title><rect x="97.2834%" y="245" width="2.3872%" height="15" fill="rgb(234,209,28)" fg:x="540759143083" fg:w="13269360458"/><text x="97.5334%" y="255.50">st..</text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (11,414,851,652 samples, 2.05%)</title><rect x="97.6171%" y="229" width="2.0536%" height="15" fill="rgb(224,11,23)" fg:x="542613651889" fg:w="11414851652"/><text x="97.8671%" y="239.50">s..</text></g><g><title>core::sync::atomic::AtomicU32::load (1,513,290,575 samples, 0.27%)</title><rect x="99.3984%" y="213" width="0.2722%" height="15" fill="rgb(232,99,1)" fg:x="552515212966" fg:w="1513290575"/><text x="99.6484%" y="223.50"></text></g><g><title>core::sync::atomic::atomic_load (1,513,290,575 samples, 0.27%)</title><rect x="99.3984%" y="197" width="0.2722%" height="15" fill="rgb(237,95,45)" fg:x="552515212966" fg:w="1513290575"/><text x="99.6484%" y="207.50"></text></g><g><title>std::sync::poison::mutex::Mutex&lt;T&gt;::lock (15,541,204,121 samples, 2.80%)</title><rect x="96.8880%" y="277" width="2.7959%" height="15" fill="rgb(208,109,11)" fg:x="538560885752" fg:w="15541204121"/><text x="97.1380%" y="287.50">st..</text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (14,934,364,040 samples, 2.69%)</title><rect x="96.9971%" y="261" width="2.6867%" height="15" fill="rgb(216,190,48)" fg:x="539167725833" fg:w="14934364040"/><text x="97.2471%" y="271.50">st..</text></g><g><title>syscall (73,586,332 samples, 0.01%)</title><rect x="99.6706%" y="245" width="0.0132%" height="15" fill="rgb(251,171,36)" fg:x="554028503541" fg:w="73586332"/><text x="99.9206%" y="255.50"></text></g><g><title>[unknown] (73,586,332 samples, 0.01%)</title><rect x="99.6706%" y="229" width="0.0132%" height="15" fill="rgb(230,62,22)" fg:x="554028503541" fg:w="73586332"/><text x="99.9206%" y="239.50"></text></g><g><title>rayon_core::sleep::Sleep::wake_specific_thread (18,195,727,926 samples, 3.27%)</title><rect x="96.4632%" y="293" width="3.2734%" height="15" fill="rgb(225,114,35)" fg:x="536199704492" fg:w="18195727926"/><text x="96.7132%" y="303.50">ray..</text></g><g><title>syscall (293,342,545 samples, 0.05%)</title><rect x="99.6839%" y="277" width="0.0528%" height="15" fill="rgb(215,118,42)" fg:x="554102089873" fg:w="293342545"/><text x="99.9339%" y="287.50"></text></g><g><title>[unknown] (281,441,543 samples, 0.05%)</title><rect x="99.6860%" y="261" width="0.0506%" height="15" fill="rgb(243,119,21)" fg:x="554113990875" fg:w="281441543"/><text x="99.9360%" y="271.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (59,112,520 samples, 0.01%)</title><rect x="99.7475%" y="293" width="0.0106%" height="15" fill="rgb(252,177,53)" fg:x="554455993544" fg:w="59112520"/><text x="99.9975%" y="303.50"></text></g><g><title>std::thread::yield_now (843,712,998 samples, 0.15%)</title><rect x="99.7670%" y="293" width="0.1518%" height="15" fill="rgb(237,209,29)" fg:x="554564231266" fg:w="843712998"/><text x="100.0170%" y="303.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::yield_now (139,888,491 samples, 0.03%)</title><rect x="99.8936%" y="277" width="0.0252%" height="15" fill="rgb(212,65,23)" fg:x="555268055773" fg:w="139888491"/><text x="100.1436%" y="287.50"></text></g><g><title>all (555,859,368,418 samples, 100%)</title><rect x="0.0000%" y="325" width="100.0000%" height="15" fill="rgb(230,222,46)" fg:x="0" fg:w="555859368418"/><text x="0.2500%" y="335.50"></text></g><g><title>mvprs (555,859,368,418 samples, 100.00%)</title><rect x="0.0000%" y="309" width="100.0000%" height="15" fill="rgb(215,135,32)" fg:x="0" fg:w="555859368418"/><text x="0.2500%" y="319.50">mvprs</text></g><g><title>syscall (451,424,154 samples, 0.08%)</title><rect x="99.9188%" y="293" width="0.0812%" height="15" fill="rgb(246,101,22)" fg:x="555407944264" fg:w="451424154"/><text x="100.1688%" y="303.50"></text></g><g><title>[unknown] (451,424,154 samples, 0.08%)</title><rect x="99.9188%" y="277" width="0.0812%" height="15" fill="rgb(206,107,13)" fg:x="555407944264" fg:w="451424154"/><text x="100.1688%" y="287.50"></text></g></svg></svg>